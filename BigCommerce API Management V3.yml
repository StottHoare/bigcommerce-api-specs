info:
  contact:
    email: support@bigcommerce.com
    name: BigCommerce
    url: https://www.bigcommerce.com
  description: BigCommerce API Management V3
  termsOfService: https://www.bigcommerce.com/terms
  title: BigCommerce API Management V3
  version: 3.0.0
openapi: 3.0.0
paths:
  /abandoned-carts/settings:
    get:
      description: Returns the global abandoned cart settings of a store.
      operationId: getGlobalAbandonedCartSettings
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      summary: Get Global Abandoned Cart Settings
      tags:
      - Abandoned Cart Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Updates the global abandoned cart settings of a store.
      operationId: UpdateGlobalAbandonedCartSettings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalAbandonedCartSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable entity
      summary: Update Global Abandoned Cart Settings
      tags:
      - Abandoned Carts Settings
  /abandoned-carts/settings/channels/{channel_id}:
    get:
      description: Returns the per-channel overrides for the abandoned cart settings
        of a store.
      operationId: getChannelAbandonedCartSettings
      parameters:
      - description: The channel ID of the settings overrides
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      summary: Get Channel Abandoned Cart Settings
      tags:
      - Abandoned Carts Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: channel_id
      required: true
      schema:
        type: string
    put:
      description: "Updates the per-channel overrides for the abandoned cart settings\
        \ of a store.\n\n#### OAuth Scopes\n| UI Name                            \
        \          | Permission | Parameter                                     |\n\
        |----------------------------------------------|------------|-----------------------------------------------|\
        \     \n| Information & Settings                       | modify     | `store_v2_information`\
        \                        |"
      operationId: UpdateChannelAbandonedCartSettings
      parameters:
      - description: The channel ID of the settings overrides
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelAbandonedCartSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable entity
      security: []
      summary: Update Channel Abandoned Cart Settings
      tags:
      - Abandoned Carts Settings
  /abandoned-carts/{token}:
    get:
      description: 'Returns the `cart_id` corresponding to the abandoned cart `{token}`
        passed in.


        **Usage Notes**:

        * `{token}` is the token in the query string of the abandoned cart link found
        in abandoned cart email notifications to shoppers'
      operationId: getAbandonedCarts
      responses:
        '200':
          $ref: '#/components/responses/abandonedCart_Resp'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
        '502':
          $ref: '#/components/responses/502_GatewayError'
        '503':
          $ref: '#/components/responses/503_ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
        default:
          description: ''
      summary: Get an Abandoned Cart
      tags:
      - Abandoned Carts
    parameters:
    - description: 'Unique cart `UUID`.


        Unique cart `UUID` token that is generated for abandoned cart emails.'
      in: path
      name: token
      required: true
      schema:
        type: string
    - $ref: '#/components/parameters/Accept'
  /carts:
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Creates a **Cart**. \n\n**Required Fields**\n\n|Field|Details|\n\
        |-|-|\n|`line_item`|Specifies a line item.| \n|`custom_items`|Specifies a\
        \ custom item. Only required if adding a custom item to the cart.|\n|`gift_certificates`|Specifies\
        \ a gift certificate. Only required if adding a gift certificate to the cart.|\n\
        \n**Usage Notes**\n\n* A **cart** `id` (UUID) is returned in the response.\n\
        * A **cart** `id` is the same as a **checkout** `id`.\n* A cart can be created\
        \ by adding an existing **catalog item** or a **custom item**.\n* Carts are\
        \ valid for **30 days** from the **last modification** (this includes creating\
        \ the cart or editing the cart).\n* If a product has modifiers, use the `option_selections`\
        \ array to describe the **modifier** selection(s).\n* The format and data\
        \ type of a cart’s `option_value` are defined by the `value_data` object of\
        \ a product’s [variant option value](/docs/rest-management/catalog/product-variant-option-values),\
        \ [modifier value](/docs/rest-management/catalog/product-modifier-values),\
        \ or a combination of both.\n* Redirect URLs can only be generated from carts\
        \ that were created using the **Server-to-Server Carts API**. \n* To get cart\
        \ `redirect_urls` in the response, append the following query parameter to\
        \ the request URL: `include=redirect_urls`. Redirect URLs point to either\
        \ a shared checkout domain or a channel-specific domain, depending on the\
        \ storefront configuration.\n* To restore a cart that was created by a shopper\
        \ or through the Storefront Cart API, first recreate the cart using the Server\
        \ to Server Cart API.\n* To get cart `promotions` in the response, append\
        \ the following query parameter to the request URL: `include=promotions.banners`."
      operationId: createACart
      parameters:
      - description: '* `redirect_urls`: Create a direct link to a cart. This can
          be used for the /POST request for carts.

          * `line_items.physical_items.options`: The cart returns an abbreviated result.
          Use this to return physical items product options. To return the extended
          cart object, use in a /POST request.

          * `line_items.digital_items.options`: The cart returns an abbreviated result.
          Use this to return digital items product options. To return the extended
          cart object, use in a /POST request.

          * `promotions.banners`: Returns a list of eligible banners.'
        in: query
        name: include
        schema:
          enum:
          - redirect_urls
          - line_items.physical_items.options
          - line_items.digital_items.options
          - promotions.banners
          type: string
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Cart with a variant:
                summary: Creating a cart with a product that can be specified purely
                  by a variant, without any other required options.
                value:
                  channel_id: 1
                  currency:
                    code: JOD
                  customer_id: 0
                  line_items:
                  - list_price: 25
                    name: قميص
                    option_selections:
                    - name: بحجم
                      option_id: 125
                      option_value: 127
                      value: صغير
                    product_id: 118
                    quantity: 2
                    variant_id: 140
                  locale: ar-JO
              Cart with date option:
                summary: Creating a cart using a date option.
                value:
                  currency:
                    code: MXN
                  line_items:
                  - option_selections:
                    - name: calendario
                      option_id: 147
                      option_value: '{“día”:”01”, “mes”:”02”, “año”:”2020”}'
                      value: 2023
                    product_id: 128
                    quantity: 1
                    variant_id: 144
                  locale: es-MX
              Cart with variant, a checkbox, and a pick list modifier:
                summary: Creating a cart with a variant, a checkbox, and an added
                  picklist modifier.
                value:
                  channel_id: 1
                  currency:
                    code: AUD
                  customer_id: 0
                  line_items:
                  - list_price: 30
                    name: shirt
                    options:
                    - name: Size
                      nameId: 125
                      value: Large
                      valueId: 127
                    - name: Add a $5 Donation
                      nameId: 126
                      value: 'No'
                      valueId: 129
                    product_id: 118
                    quantity: 1
                    variant_id: 141
                  locale: en-AU
              Custom item:
                summary: Creating a cart using a custom item.
                value:
                  channel_id: 1
                  currency:
                    code: usd
                  custom_items:
                  - gift_wrapping:
                      wrap_details:
                      - id: 0
                        message: Happy Birthday
                      wrap_together: true
                    list_price: 30
                    name: table
                    quantity: 1
                    sku: custom-item-sku
                  customer_id: 0
                  gift_certificates:
                  - amount: 1
                    message: Happy Birthday
                    name: Tobi Day
                    quantity: 1
                    recipient:
                      email: Tobi.Day@mail.com
                      name: Tobi Day
                    sender:
                      email: Brandi.Tyler@mail.com
                      name: Brandi Tyler
                    theme: Birthday
                  line_items: []
                  locale: en-US
              Simple Product:
                summary: Creating a cart by adding a simple product without option
                  selections.
                value:
                  channel_id: 1
                  currency:
                    code: USD
                  customer_id: 0
                  line_items:
                  - list_price: 5
                    name: calendar
                    product_id: 126
                    quantity: 2
                  locale: en-US
            schema:
              $ref: '#/components/schemas/CartCreatePostData'
        description: ''
        required: true
        x-examples:
          Create a Cart using Date Option: "{\n  \"line_items\": [\n    {\n      \"\
            quantity\": 5,\n      \"product_id\": 191,\n      \"variant_id\": 185,\n\
            \      \"option_selections\": [\n        {\n          \"option_id\": 440,\n\
            \          \"option_value\": 1743570000\n        }\n      ]\n    }\n \
            \ ]\n} "
          Create a Cart with a Variant: "{\n    \"line_items\":[\n        {\n    \
            \        \"quantity\": 2,\n            \"product_id\": 107,\n        \
            \    \"variant_id\": 185\n        }\n    ]\n}"
          Custom Item:
            custom_items:
            - list_price: 10
              name: Custom Product
              quantity: 1
              sku: abc-123
          Options Selections:
            line_items:
            - option_selections:
              - name: Size
                nameId: 125
                option_id: 121
                option_value: 10
                value: Small
                valueId: 125
              product_id: 118
              quantity: 5
              variant_id: 115
          Simple Product: "{\n  \"line_items\": [\n    {\n      \"quantity\": 5,\n\
            \      \"product_id\": 191\n    }\n  ]\n}"
          With a Variant of Checkbox and Picklist: "{\n  \"line_items\": [\n    {\n\
            \      \"quantity\": 1,\n      \"product_id\": 77,\n      \"option_selections\"\
            : [\n        {\n          \"option_id\": 120,\n          \"option_value\"\
            : 69\n        },\n        {\n          \"option_id\": 121,\n         \
            \ \"option_value\": 10\n        },\n\n        {\n          \"option_id\"\
            : 124,\n          \"option_value\": 106\n        },\n        {\n     \
            \     \"option_id\": 122,\n          \"option_value\": \"Hello\"\n   \
            \     },\n        {\n          \"option_id\": 123, \n          \"option_value\"\
            : 104\n        }\n      ]\n    }\n  ]\n} "
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Create a Cart
      tags:
      - Carts (Single)
  /carts/settings:
    get:
      description: Returns the global cart settings of a store.
      operationId: getGlobalCartSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCartSettingsResponse'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      summary: Get Global Cart Settings
      tags:
      - Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Update the global cart settings of a store.
      operationId: updateGlobalCartSettings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalCartSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCartSettingsResponse'
          description: OK
        '400':
          content:
            application/json:
              example:
                detail: Syntax error
                status: 400
                title: Input is invalid
                type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                description: ''
                properties:
                  detail:
                    minLength: 1
                    type: string
                  status:
                    type: number
                  title:
                    minLength: 1
                    type: string
                  type:
                    minLength: 1
                    type: string
                type: object
          description: Bad Request. Input is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable entity
      summary: Update Global Cart Settings
      tags:
      - Settings
  /carts/settings/channels/{channel_id}:
    get:
      description: Returns the per-channel overrides for the cart settings of a store.
      operationId: getChannelCartSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartSettingsResponse'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      summary: Get Channel Cart Settings
      tags:
      - Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    - description: The channel ID of the settings overrides.
      in: path
      name: channel_id
      required: true
      schema:
        type: integer
    put:
      description: Update the per-channel overrides for the cart settings of a store.
      operationId: updateChannelCartSettings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCartSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartSettingsResponse'
          description: OK
        '400':
          content:
            application/json:
              example:
                detail: Syntax error
                status: 400
                title: Input is invalid
                type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                description: ''
                properties:
                  detail:
                    minLength: 1
                    type: string
                  status:
                    type: number
                  title:
                    minLength: 1
                    type: string
                  type:
                    minLength: 1
                    type: string
                type: object
          description: Bad Request. Input is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable entity
      summary: Update Channel Cart Settings
      tags:
      - Settings
  /carts/{cartId}:
    delete:
      description: Deletes a *Cart*. Once a *Cart* has been deleted it can’t be recovered.
      operationId: deleteACart
      responses:
        '204':
          description: ''
      summary: Delete a Cart
      tags:
      - Carts (Single)
    get:
      description: Returns a storeʼs *Cart*.
      operationId: getACart
      parameters:
      - description: '* `redirect_urls`: Create a direct link to a cart. This can
          be used for the /POST request for carts.

          * `line_items.physical_items.options`: The cart returns an abbreviated result.
          Use this to return physical items product options. To return the extended
          cart object, use in a /POST request.

          * `line_items.digital_items.options`: The cart returns an abbreviated result.
          Use this to return digital items product options. To return the extended
          cart object, use in a /POST request.

          * `promotions.banners`: Returns a list of eligible banners.'
        in: query
        name: include
        schema:
          enum:
          - redirect_urls
          - line_items.physical_items.options
          - line_items.digital_items.options
          - promotions.banners
          type: string
      responses:
        '200':
          $ref: '#/components/responses/CartResponse'
        '404':
          description: Cart not found.
      summary: Get a Cart
      tags:
      - Carts (Single)
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/cartId'
    put:
      description: 'Updates a *Cartʼs* `customer_id`.


        **Notes**


        Changing the *Cart* `customer_id` will remove any promotions or shipping calculations
        on the *Cart*. These are tied to the customer depending on cart conditions
        and any customer groups. '
      operationId: updateACart
      parameters:
      - description: '* `redirect_urls`: Create a direct link to a cart. This can
          be used for the /POST request for carts.

          * `line_items.physical_items.options`: The cart returns an abbreviated result.
          Use this to return physical items product options. To return the extended
          cart object, use in a /POST request.

          * `line_items.digital_items.options`: The cart returns an abbreviated result.
          Use this to return digital items product options. To return the extended
          cart object, use in a /POST request.

          * `promotions.banners`: Returns a list of eligible banners.'
        in: query
        name: include
        schema:
          enum:
          - redirect_urls
          - line_items.physical_items.options
          - line_items.digital_items.options
          - promotions.banners
          type: string
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            example:
              customer_id: 5
            schema:
              $ref: '#/components/schemas/CartUpdatePutRequestData'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Update Customer ID
      tags:
      - Carts (Single)
  /carts/{cartId}/items:
    parameters:
    - $ref: '#/components/parameters/cartId'
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ContentType'
    post:
      description: "Adds line item to the *Cart*.\n\n**Usage Notes**\n\nTo add a custom\
        \ item use `custom_items`. \n\nOverriding a product’s `list_price` will make\
        \ that item ineligible for V3 product level promotions.\n\nIf a product has\
        \ modifiers, omit the `variant_id` and instead use the `option_selections`\
        \ array to describe both the **variant** and the **modifier** selections."
      operationId: addCartLineItem
      parameters:
      - description: '* `redirect_urls`: Create a direct link to a cart. This can
          be used for the /POST request for carts.

          * `line_items.physical_items.options`: The cart returns an abbreviated result.
          Use this to return physical items product options. To return the extended
          cart object, use in a /POST request.

          * `line_items.digital_items.options`: The cart returns an abbreviated result.
          Use this to return digital items product options. To return the extended
          cart object, use in a /POST request.

          * `promotions.banners`: Returns a list of eligible banners.'
        in: query
        name: include
        schema:
          enum:
          - redirect_urls
          - line_items.physical_items.options
          - line_items.digital_items.options
          - promotions.banners
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  gift_certificates:
                  - amount: 50
                    message: Happy Birthday Jane!
                    name: Happy Birthday
                    quantity: 1
                    recipient:
                      email: janedoe@example.com
                      name: Jane Does
                    sender:
                      email: janedoe@example.com
                      name: Jane Does
                    theme: Birthday
                  line_items:
                  - list_price: 12.5
                    option_selections:
                    - option_id: 8
                      option_value: 'Yes'
                    product_id: 77
                    quantity: 2
              'Example 2: Custom Item':
                value:
                  custom_items:
                  - list_price: 10
                    name: Custom Product
                    quantity: 1
                    sku: abc-123
            schema:
              $ref: '#/components/schemas/Cart_Line_Item_Update_Post'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Add Cart Line Items
      tags:
      - Items
  /carts/{cartId}/items/{itemId}:
    delete:
      description: "Deletes a *Cart* line item. \n\n**Notes**\n\nRemoving the last\
        \ `line_item` in the *Cart* deletes the *Cart*."
      operationId: deleteCartLineItem
      parameters:
      - description: '* `redirect_urls`: Create a direct link to a cart. This can
          be used for the /POST request for carts.

          * `line_items.physical_items.options`: The cart returns an abbreviated result.
          Use this to return physical items product options. To return the extended
          cart object, use in a /POST request.

          * `line_items.digital_items.options`: The cart returns an abbreviated result.
          Use this to return digital items product options. To return the extended
          cart object, use in a /POST request.

          * `promotions.banners`: Returns a list of eligible banners.'
        in: query
        name: include
        schema:
          enum:
          - redirect_urls
          - line_items.physical_items.options
          - line_items.digital_items.options
          - promotions.banners
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      base_amount: 189.75
                      cart_amount: 212.81
                      coupons: []
                      created_time: '2018-09-17T14:27:39.000Z'
                      currency:
                        code: USD
                      customer_id: 11
                      discount_amount: 0
                      email: ''
                      id: bc218c65-7a32-4ab7-8082-68730c074d02
                      line_items:
                        custom_items:
                        - extended_list_price: 5.99
                          id: 78239b69-1952-4c35-9d58-ea30158b4e39
                          list_price: 5.99
                          name: Rope Toy
                          quantity: 1
                          sku: ROPE-TOY
                        digital_items: []
                        gift_certificates:
                        - amount: 50
                          id: 6e38bbc2-8873-472c-a452-8bd4aaea5d3a
                          message: Happy Birthday Jane!
                          name: Happy Birthday
                          quantity: 1
                          recipient:
                            email: janedoe@example.com
                            name: Jane Does
                          sender:
                            email: janedoe@example.com
                            name: Jane Does
                          taxable: false
                          theme: Birthday
                        physical_items:
                        - coupon_amount: 0
                          coupons: []
                          discount_amount: 0
                          discounts: []
                          extended_list_price: 139.75
                          extended_sale_price: 139.75
                          id: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                          image_url: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2
                          is_require_shipping: true
                          list_price: 27.95
                          name: Openhouse No. 3
                          options:
                          - name: Add a $5 Donation
                            nameId: 82
                            value: 'No'
                            valueId: 186
                          original_price: 27.95
                          parent_id: {}
                          product_id: 191
                          quantity: 5
                          sale_price: 27.95
                          sku: ''
                          taxable: true
                          url: http://id30h7ohwf.mybigcommerce.com/all/openhouse-no-3/
                          variant_id: 362
                      meta: {}
                      tax_included: false
                      updated_time: '2018-09-17T14:53:40.000Z'
              schema:
                $ref: '#/components/schemas/Cart_Full'
          description: 'NOTE: Discounted line items are re-evaluated on cart actions
            and may be automatically added back to your cart with a new line item
            ID to satisfy promotional requirements.'
        '204':
          description: If the action’s result is an empty cart, the cart is automatically
            deleted.
      summary: Delete Cart Line Item
      tags:
      - Items
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/cartId'
    - in: path
      name: itemId
      required: true
      schema:
        format: number
        type: string
    put:
      description: "Updates an existing, single line item in the *Cart*. \n\n**Notes**\n\
        \nCurrently, only updating `list_price` and `quantity` are supported. Updating\
        \ a product’s `list_price` will make that item ineligible for V3 product-level\
        \ promotions. \n\nIf the product has modifiers, omit the `variant_id` and\
        \ instead use the `option_selections` array to describe both the **variant**\
        \ and the **modifier** selections.\n\nIf a variant needs to be changed or\
        \ updated, the product will need to be removed and re-added to the cart with\
        \ the correct variants using the **Add Cart Line Items** endpoint.\n\n`custom_items`\
        \ cannot be updated via the API at this time. To update your cart, add a new\
        \ updated custom item and delete the outdated one. If your cart contains only\
        \ one line item, perform the add operation before the delete operation.\n\n\
        Deleting all line items from the cart will invalidate the cart. "
      operationId: updateCartLineItem
      parameters:
      - description: '* `redirect_urls`: Create a direct link to a cart. This can
          be used for the /POST request for carts.

          * `line_items.physical_items.options`: The cart returns an abbreviated result.
          Use this to return physical items product options. To return the extended
          cart object, use in a /POST request.

          * `line_items.digital_items.options`: The cart returns an abbreviated result.
          Use this to return digital items product options. To return the extended
          cart object, use in a /POST request.

          * `promotions.banners`: Returns a list of eligible banners.'
        in: query
        name: include
        schema:
          enum:
          - redirect_urls
          - line_items.physical_items.options
          - line_items.digital_items.options
          - promotions.banners
          type: string
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart_Line_Item_Update_Put'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/CartResponse'
      summary: Update Cart Line Item
      tags:
      - Items
  /carts/{cartId}/redirect_urls:
    parameters:
    - $ref: '#/components/parameters/cartId'
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ContentType'
    post:
      description: "Creates a **Cart** redirect URL for redirecting a shopper to an\
        \ already created cart using the `cartId`.\n\n**Usage Notes**\n\n* Redirect\
        \ URLs can also be created via **Create a Cart** requests by appending `include=redirect_urls`.\n\
        * A **Carts** redirect URL may only be used once.\n* Redirect URLs point to\
        \ either a shared checkout domain or a channel-specific domain, depending\
        \ on the storefront configuration.\n* Once a redirect URL has been visited,\
        \ it will be invalidated and cannot be used again. \n* If your application\
        \ requires URLs to be visited more than once, consider generating a fresh\
        \ one each time you need to restore a cart, and redirecting to the URL from\
        \ your own application.\n* Redirect URLs can be generated only from carts\
        \ that were created using the Server to Server Cart API and the Storefront\
        \ Cart API. \n* To restore a cart that was created on the storefront, either\
        \ by a shopper or the Storefront Cart API, first recreate the cart using the\
        \ Server to Server Cart API."
      operationId: createCartRedirectURL
      responses:
        '201':
          $ref: '#/components/responses/CartRedirectResponse'
      summary: Create Cart Redirect URL
      tags:
      - Redirects
  /carts/{cart_id}/metafields:
    get:
      description: Get all cart metafields.
      operationId: getAllCartMetafields
      parameters:
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/LimitParam'
      - $ref: '#/components/parameters/MetafieldKeyParam'
      - $ref: '#/components/parameters/MetafieldNamespaceParam'
      - $ref: '#/components/parameters/DirectionParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
          description: 'An array of metafields and metadata.

            '
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Metafield` conflicts with another `Metafield`. This can
            be the result of duplicate unique key combinations of the appʼs client
            id, namespace, key, resource_type, and resource_id.

            '
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Metafield` is not valid. This is the result of missing
            required fields or of invalid data. See the response for more details.

            '
      summary: Get All Metafields
      tags:
      - Metafields
    parameters:
    - $ref: '#/components/parameters/cart_id'
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Create a cart `Metafield`. \n\nIf you create an order from a Cart,\
        \ you can continue referencing the Cart Metafields even if you delete the\
        \ original Cart. Use the `cart_id` field on the Order to construct the Cart\
        \ Metafield endpoint. \n"
      operationId: CreateCartMetafieldsByCartId
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/MetafieldPost'
        description: ''
        required: true
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
          description: 'A `Metafield` object.

            '
        '404':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    status: 404
                    title: There was no order found with ID 1010
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/NotFound'
          description: 'The resource was not found.

            '
      summary: Create a Cart Metafield
      tags:
      - Metafields
  /carts/{cart_id}/metafields/{metafield_id}:
    delete:
      description: 'Deletes a `Metafield`.

        '
      operationId: deleteCartMetafieldById
      responses:
        '204':
          description: "An empty response.        \n"
      summary: Delete a Metafield
      tags:
      - Metafields
    get:
      description: Gets a cart metafield.
      operationId: getACartMetafield
      parameters:
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/LimitParam'
      - $ref: '#/components/parameters/MetafieldKeyParam'
      - $ref: '#/components/parameters/MetafieldNamespaceParam'
      - $ref: '#/components/parameters/DirectionParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
          description: 'A `Metafield` object.

            '
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Metafield` conflicts with another `Metafield`. This can
            be the result of duplicate unique key combinations of the appʼs client
            id, namespace, key, resource_type, and resource_id.

            '
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Metafield` is not valid. This is the result of missing
            required fields or of invalid data. See the response for more details.

            '
        '500':
          description: Internal Server Error
      summary: Get a Cart Metafield
      tags:
      - Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/cart_id'
    - description: The unique ID of the subject `Metafield`.
      in: path
      name: metafield_id
      required: true
      schema:
        type: integer
    put:
      description: 'Update a `Metafield`, by `cart_id`.

        '
      operationId: UpdateCartMetafieldsByCartId
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/MetafieldPost'
        description: 'A `Metafield` object.

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
          description: 'A metafield and metadata.

            '
        '404':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    status: 404
                    title: There was no order found with ID 1010
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/NotFound'
          description: 'The resource was not found.

            '
      summary: Update a Cart Metafield
      tags:
      - Metafields
  /catalog/brands:
    delete:
      description: By default, it deletes all *Brand* objects. A filter should be
        added to avoid deleting all *Brand* objects in a store.
      operationId: deleteBrands
      parameters:
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      - description: 'Filter items by page_title.

          '
        in: query
        name: page_title
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete Brands
      tags:
      - Brands
    get:
      description: Returns a list of *Brands*. Optional filter parameters can be passed
        in.
      operationId: getBrands
      parameters:
      - description: 'Filter items by id.

          '
        in: query
        name: id
        schema:
          type: integer
      - explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:not_in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      - description: 'Filter items by page_title.

          '
        in: query
        name: page_title
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - custom_url:
                    is_customized: false
                    url: /brands/Sagaform.html
                  id: 35
                  image_url: ''
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Sagaform
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /brands/OFS.html
                  id: 36
                  image_url: ''
                  meta_description: OFS is a modern brand.
                  meta_keywords:
                  - modern
                  - ' clean'
                  - ' contemporary'
                  name: OFS
                  page_title: OFS
                  search_keywords: kitchen, laundry, cart, storage
                - custom_url:
                    is_customized: false
                    url: /brands/Common-Good.html
                  id: 37
                  image_url: https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/k/screen%20shot%202018-05-07%20at%2012.24.24%20pm_1525785365__65102.png
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Common Good
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /bigcommerce/
                  id: 38
                  image_url: ''
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: BigCommerce
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /test-brand-one/
                  id: 39
                  image_url: https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/q/apihqggzm__53766.jpg
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Test Brand One
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /fog-linen-work/
                  id: 40
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Fog Linen Work
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /barr-co/
                  id: 41
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Barr-Co.
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /thames-hudson/
                  id: 42
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Thames & Hudson
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /able-brewing/
                  id: 43
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Able Brewing
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /chemex/
                  id: 44
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Chemex
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /kinfolk/
                  id: 45
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Kinfolk
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /iris-hantverk/
                  id: 46
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Iris Hantverk
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /gather-journal/
                  id: 47
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Gather Journal
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /openhouse-magazine/
                  id: 48
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Openhouse Magazine
                  page_title: ''
                  search_keywords: ''
                - custom_url:
                    is_customized: false
                    url: /smith-journal/
                  id: 49
                  image_url: ''
                  meta_description: description
                  meta_keywords:
                  - ''
                  name: Smith Journal
                  page_title: ''
                  search_keywords: ''
                meta:
                  pagination:
                    count: 15
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 15
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/brand_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Brand Collection Response
                type: object
          description: ''
      summary: Get All Brands
      tags:
      - Brands
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Creates a *Brand*.


        **Required Fields**

        - name


        **Read-Only Fields**

        - id


        **Limits**

        - 30,000 brands per store limit'
      operationId: createBrand
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              description: Common brand properties.
              properties:
                custom_url:
                  description: The custom URL for the brand on the storefront.
                  properties:
                    is_customized:
                      description: 'Returns `true` if the URL has been changed from
                        its default state (the auto-assigned URL that BigCommerce
                        provides).

                        '
                      example: true
                      type: boolean
                    url:
                      description: 'Brand URL on the storefront.

                        '
                      example: /shoes
                      type: string
                      x-url: true
                  title: Custom Url Brand
                  type: object
                image_url:
                  description: 'Image URL used for this category on the storefront.
                    Images can be uploaded via form file post to `/brands/{brandId}/image`,
                    or by providing a publicly accessible URL in this field.

                    '
                  example: https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png
                  type: string
                  x-url: true
                meta_description:
                  description: 'A meta description to include.

                    '
                  example: Common Good is a modern brand.
                  maxLength: 65535
                  minLength: 0
                  type: string
                meta_keywords:
                  description: 'Comma-separated list of meta keywords to include in
                    the HTML.

                    '
                  items:
                    example: modern, clean, contemporary
                    type: string
                  type: array
                name:
                  description: 'The name of the brand. Must be unique.

                    Required in POST.'
                  example: Common Good
                  maxLength: 255
                  minLength: 1
                  type: string
                  x-required:
                  - post
                  - put
                page_title:
                  description: 'The title shown in the browser while viewing the brand.

                    '
                  example: Common Good
                  maxLength: 255
                  minLength: 0
                  type: string
                search_keywords:
                  description: 'A comma-separated list of keywords that can be used
                    to locate this brand.

                    '
                  example: kitchen, laundry, cart, storage
                  maxLength: 65535
                  minLength: 0
                  type: string
              required:
              - name
              title: Brand
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  custom_url:
                    is_customized: false
                    url: /brands/Common-Good.html
                  id: 50
                  image_url: ''
                  meta_description: Common Good is a modern brand
                  meta_keywords:
                  - modern, clean, contemporary
                  name: Common Good
                  search_keywords: kitchen, laundry, cart, storage
                meta: {}
              schema:
                description: 'Brand Response returns for:

                  * Create Brand

                  * Get Brand by Id

                  * Update Brand by Id'
                properties:
                  data:
                    description: Common Brand properties.
                    properties:
                      custom_url:
                        description: The custom URL for the brand on the storefront.
                        properties:
                          is_customized:
                            description: 'Returns `true` if the URL has been changed
                              from its default state (the auto-assigned URL that BigCommerce
                              provides).

                              '
                            example: true
                            type: boolean
                          url:
                            description: 'Brand URL on the storefront.

                              '
                            example: /shoes
                            type: string
                            x-url: true
                        title: Custom Url Brand
                        type: object
                      id:
                        description: Unique ID of the *Brand*. Read-Only.
                        readOnly: true
                        type: integer
                      image_url:
                        description: 'Image URL used for this category on the storefront.
                          Images can be uploaded via form file post to `/brands/{brandId}/image`,
                          or by providing a publicly accessible URL in this field.

                          '
                        example: https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png
                        type: string
                        x-url: true
                      meta_description:
                        description: 'A meta description to include.

                          '
                        example: Common Good is a modern brand.
                        maxLength: 65535
                        minLength: 0
                        type: string
                      meta_keywords:
                        description: 'Comma-separated list of meta keywords to include
                          in the HTML.

                          '
                        items:
                          example: modern, clean, contemporary
                          type: string
                        type: array
                      name:
                        description: 'The name of the brand. Must be unique.

                          Required in POST.'
                        example: Common Good
                        maxLength: 255
                        minLength: 1
                        type: string
                        x-required:
                        - post
                        - put
                      page_title:
                        description: 'The title shown in the browser while viewing
                          the brand.

                          '
                        example: Common Good
                        maxLength: 255
                        minLength: 0
                        type: string
                      search_keywords:
                        description: 'A comma-separated list of keywords that can
                          be used to locate this brand.

                          '
                        example: kitchen, laundry, cart, storage
                        maxLength: 65535
                        minLength: 0
                        type: string
                    title: Brand
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Brand Response
                type: object
          description: ''
        '207':
          $ref: '#/components/responses/General207Status'
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: Brand was in conflict with another brand. This is the result
            of duplicate unique fields such as name.
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: Brand was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.
      summary: Create a Brand
      tags:
      - Brands
      x-codegen-request-body-name: Brand
  /catalog/brands/{brand_id}:
    delete:
      description: Deletes a *Brand*.
      operationId: deleteBrandById
      parameters:
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Brand
      tags:
      - Brands
    get:
      description: Returns a single *Brand*. Optional filter parameters can be passed
        in.
      operationId: getBrandById
      parameters:
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  custom_url:
                    is_customized: false
                    url: /brands/Common-Good.html
                  id: 50
                  image_url: ''
                  meta_description: Common Good is a modern brand
                  meta_keywords:
                  - modern, clean, contemporary
                  name: Common Good
                  search_keywords: kitchen, laundry, cart, storage
                meta: {}
              schema:
                description: 'Brand Response returns for:

                  * Create Brand

                  * Get Brand by Id

                  * Update Brand by Id'
                properties:
                  data:
                    $ref: '#/components/schemas/brand_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Brand Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Brand
      tags:
      - Brands
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/BrandIdParam'
    put:
      description: 'Updates a *Brand*.


        **Required Fields**

        - None


        **Read-Only Fields**

        - id


        To update a *Brand Image*, send a request with an `image_url`.'
      operationId: updateBrand
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              description: Common Brand properties.
              properties:
                custom_url:
                  description: The custom URL for the brand on the storefront.
                  properties:
                    is_customized:
                      description: 'Returns `true` if the URL has been changed from
                        its default state (the auto-assigned URL that BigCommerce
                        provides).

                        '
                      example: true
                      type: boolean
                    url:
                      description: 'Brand URL on the storefront.

                        '
                      example: /shoes
                      type: string
                      x-url: true
                  title: Custom Url Brand
                  type: object
                id:
                  description: Unique ID of the *Brand*. Read-Only.
                  readOnly: true
                  type: integer
                image_url:
                  description: 'Image URL used for this category on the storefront.
                    Images can be uploaded via form file post to `/brands/{brandId}/image`,
                    or by providing a publicly accessible URL in this field.

                    '
                  example: https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png
                  type: string
                  x-url: true
                meta_description:
                  description: 'A meta description to include.

                    '
                  example: Common Good is a modern brand.
                  maxLength: 65535
                  minLength: 0
                  type: string
                meta_keywords:
                  description: 'Comma-separated list of meta keywords to include in
                    the HTML.

                    '
                  example:
                  - modern, clean, contemporary
                  items:
                    type: string
                  type: array
                name:
                  description: 'The name of the brand. Must be unique.

                    Required in POST.'
                  example: Common Good
                  maxLength: 255
                  minLength: 1
                  type: string
                  x-required:
                  - post
                  - put
                page_title:
                  description: 'The title shown in the browser while viewing the brand.

                    '
                  example: Common Good
                  maxLength: 255
                  minLength: 0
                  type: string
                search_keywords:
                  description: 'A comma-separated list of keywords that can be used
                    to locate this brand.

                    '
                  example: kitchen, laundry, cart, storage
                  maxLength: 65535
                  minLength: 0
                  type: string
              required:
              - name
              title: Brand
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  custom_url:
                    is_customized: false
                    url: /brands/Common-Good.html
                  id: 50
                  image_url: ''
                  meta_description: Common Good is a modern brand
                  meta_keywords:
                  - modern, clean, contemporary
                  name: Common Good
                  search_keywords: kitchen, laundry, cart, storage
                meta: {}
              schema:
                description: 'Brand Response returns for:

                  * Create Brand

                  * Get Brand by Id

                  * Update Brand by Id'
                properties:
                  data:
                    description: Common Brand properties.
                    properties:
                      custom_url:
                        description: The custom URL for the brand on the storefront.
                        properties:
                          is_customized:
                            description: 'Returns `true` if the URL has been changed
                              from its default state (the auto-assigned URL that BigCommerce
                              provides).

                              '
                            example: true
                            type: boolean
                          url:
                            description: 'Brand URL on the storefront.

                              '
                            example: /shoes
                            type: string
                            x-url: true
                        title: Custom Url Brand
                        type: object
                      id:
                        description: Unique ID of the *Brand*. Read-Only.
                        readOnly: true
                        type: integer
                      image_url:
                        description: 'Image URL used for this category on the storefront.
                          Images can be uploaded via form file post to `/brands/{brandId}/image`,
                          or by providing a publicly accessible URL in this field.

                          '
                        example: https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png
                        type: string
                        x-url: true
                      meta_description:
                        description: 'A meta description to include.

                          '
                        example: Common Good is a modern brand.
                        maxLength: 65535
                        minLength: 0
                        type: string
                      meta_keywords:
                        description: 'Comma-separated list of meta keywords to include
                          in the HTML.

                          '
                        example:
                        - modern, clean, contemporary
                        items:
                          type: string
                        type: array
                      name:
                        description: 'The name of the brand. Must be unique.

                          Required in POST.'
                        example: Common Good
                        maxLength: 255
                        minLength: 1
                        type: string
                        x-required:
                        - post
                        - put
                      page_title:
                        description: 'The title shown in the browser while viewing
                          the brand.

                          '
                        example: Common Good
                        maxLength: 255
                        minLength: 0
                        type: string
                      search_keywords:
                        description: 'A comma-separated list of keywords that can
                          be used to locate this brand.

                          '
                        example: kitchen, laundry, cart, storage
                        maxLength: 65535
                        minLength: 0
                        type: string
                    required:
                    - name
                    title: Brand
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Brand Response
                type: object
          description: ''
        '207':
          $ref: '#/components/responses/General207Status'
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Brand` was in conflict with another product. This is
            the result of duplicate unique values, such as `name`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Brand` was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.

            '
      summary: Update a Brand
      tags:
      - Brands
      x-codegen-request-body-name: brand
  /catalog/brands/{brand_id}/image:
    delete:
      description: Deletes a *Brand Image*.
      operationId: deleteBrandImage
      parameters:
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Brand Image
      tags:
      - Brand Images
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/BrandIdParam'
    post:
      description: 'Creates a *Brand Image*.


        **Required Fields**

        - image_file: Form posts are the only accepted upload option.


        **Read-Only Fields**

        - id


        Only one image at a time can be created. To update a *Brand Image*, use the
        [Update a brand](/docs/rest-management/catalog/brands#update-a-brand) endpoint
        and an `image_url`.'
      operationId: createBrandImage
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image_file:
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  image_url: https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png
                meta: {}
              schema:
                properties:
                  data:
                    properties:
                      image_url:
                        type: string
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '400':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Bad Request. The requested resource could not be downloaded
            and may be invalid. Possible reasons include malformed request syntax
            or the file host blocking requests.
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: The resource was not found.
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: Image was not valid. This is the result of a missing `image_file`
            field, or of an incorrect file type. See the response for more details.
      summary: Create a Brand Image
      tags:
      - Brand Images
  /catalog/brands/{brand_id}/metafields:
    get:
      description: 'Returns a list of *Brand Metafields*. Optional filter parameters
        can be passed in. '
      operationId: getBrandMetafieldsByBrandId
      parameters:
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      - description: 'Filter items by id.

          '
        in: query
        name: id
        schema:
          type: integer
      - explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:not_in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: 'Filter based on a metafield''s key.

          '
        in: query
        name: key
        schema:
          type: string
      - description: Filter based on a metafield's namespace.
        in: query
        name: namespace
        schema:
          type: string
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - date_created: '1973-01-20T21:34:57.903Z'
                  date_modified: '1990-12-30T00:29:23.515Z'
                  description: Location in the warehouse
                  id: 6
                  key: Location
                  namespace: Warehouse Locations
                  permission_set: app_only
                  resource_id: 111
                  resource_type: brand
                  value: 4HG
                - date_created: '1973-01-20T21:34:57.903Z'
                  date_modified: '1990-12-30T00:29:23.515Z'
                  description: Location in the warehouse
                  id: 7
                  key: Brand location
                  namespace: Warehouse Locations
                  permission_set: read
                  resource_id: 111
                  resource_type: brand
                  value: 4HG
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 2
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Meta Field Collection Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get All Brand Metafields
      tags:
      - Brand Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/BrandIdParam'
    post:
      description: 'Creates a *Brand Metafield*.


        **Required Fields**

        - permission_set

        - namespace

        - key

        - value


        **Read-Only Fields**

        - id


        **Note:** The maxiumum number of metafields allowed on each order, product,
        category, variant, or brand is 250 per client ID. For more information, see
        [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits)
        in the Help Center.'
      operationId: createBrandMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      date_created: '2021-08-06T19:15:35+00:00'
                      date_modified: '2021-08-06T19:15:35+00:00'
                      description: Where products are located
                      id: 4
                      key: location_id
                      namespace: App Namespace
                      permission_set: app_only
                      resource_id: 137
                      resource_type: brand
                      value: Shelf 3, Bin 5
                    meta: {}
                example-2:
                  value:
                    data:
                      date_created: '2018-05-07T20:14:17+00:00'
                      date_modified: '2018-05-07T20:14:17+00:00'
                      description: Location in the warehouse.
                      id: 6
                      key: Location
                      namespace: Warehouse Locations
                      permission_set: app_only
                      resource_id: 111
                      resource_type: category
                      value: 4HG
                    meta: {}
                example-3:
                  value:
                    data:
                      date_created: '2021-08-06T19:15:35+00:00'
                      date_modified: '2021-08-06T19:15:35+00:00'
                      description: Where products are located.
                      id: 4
                      key: location_id
                      namespace: App Namespace
                      permission_set: app_only
                      resource_id: 137
                      resource_type: brand
                      value: Shelf 3, Bin 5
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    description: Empty meta object; may be used later.
                    properties: {}
                    title: Meta
                    type: object
                title: Metafield Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was in conflict with another `Metafield`.
            This can be the result of duplicate unique key combination of the app''s
            client id, namespace, key, resource_type, and resource_id.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Brand Metafield
      tags:
      - Brand Metafields
      x-codegen-request-body-name: Metafield
  /catalog/brands/{brand_id}/metafields/{metafield_id}:
    delete:
      description: Deletes a *Brand Metafield*.
      operationId: deleteBrandMetafieldById
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Brand Metafield
      tags:
      - Brand Metafields
    get:
      description: Returns a *Brand Metafield*. Optional filter parameters can be
        passed in.
      operationId: getBrandMetafieldByBrandId
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: product
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Brand Metafields
      tags:
      - Brand Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/BrandIdParam'
    - $ref: '#/components/parameters/MetafieldIdParam'
    put:
      description: "Updates a *Brand Metafield*.\n\n**Required Fields**  \n* none\n\
        \n**Read-Only Fields**\n* id\n* These fields can only be modified by the app\
        \ (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t\
        * permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`,\
        \ and `permission_set` fields using a client ID different from the one used\
        \ to create those metafields will result in a 403 error message.\n* The maxiumum\
        \ number of metafields allowed on each order, product, category, variant,\
        \ or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits)\
        \ in the Help Center."
      operationId: updateBrandMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Brand` to which the resource belongs.

          '
        in: path
        name: brand_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: product
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update a Brand Metafield
      tags:
      - Brand Metafields
      x-codegen-request-body-name: Metafield
  /catalog/categories:
    delete:
      description: "Deletes *Category* objects. At least one filter parameter is required\
        \ to perform the `DELETE` operation.\n\n**Usage Notes**\n\n- Sending a `DELETE`request\
        \ without specifying a filter parameter will result in a `422` error. \n-\
        \ Sending a `DELETE` request for a category that contains products will result\
        \ in a `422` error. Move products to a new category by sending a `PUT` request\
        \ to the `/catalog/products/{product_id}` endpoint before deleting a category."
      operationId: deleteCategories
      parameters:
      - description: Filter items by id.
        in: query
        name: id
        schema:
          type: integer
      - explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:not_in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      - description: 'Filter items by parent_id. If the category is a child or sub
          category it can be filtered with the parent_id. '
        in: query
        name: parent_id
        schema:
          type: integer
      - description: 'Filter items by page_title.

          '
        in: query
        name: page_title
        schema:
          type: string
      - description: Filter items by keywords. eg. new, towel, bath
        in: query
        name: keyword
        schema:
          type: string
      - description: 'Filter items by if visible on the storefront. '
        in: query
        name: is_visible
        schema:
          type: boolean
      - explode: false
        in: query
        name: name:like
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: page_title:like
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete Categories
      tags:
      - Category
    get:
      description: Returns a list of *Categories*. Optional filter parameters can
        be passed in.
      operationId: getCategories
      parameters:
      - description: 'Filter items by id.

          '
        in: query
        name: id
        schema:
          type: integer
      - explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:not_in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      - explode: false
        in: query
        name: name:like
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Filter items by parent_id. If the category is a child or sub
          category it can be filtered with the parent_id. '
        in: query
        name: parent_id
        schema:
          type: integer
      - explode: false
        in: query
        name: parent_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: parent_id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: 'Filter items by page_title.

          '
        in: query
        name: page_title
        schema:
          type: string
      - explode: false
        in: query
        name: page_title:like
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter items by keywords. eg. new, towel, bath
        in: query
        name: keyword
        schema:
          type: string
      - description: 'Filter items by if visible on the storefront. '
        in: query
        name: is_visible
        schema:
          type: boolean
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - custom_url:
                    is_customized: false
                    url: /garden/
                  default_product_sort: use_store_settings
                  description: <p>This is the garden description</p>
                  id: 19
                  image_url: ''
                  is_visible: true
                  layout_file: category.html
                  meta_description: meta description
                  meta_keywords:
                  - meta keyword
                  name: Garden
                  page_title: page title
                  parent_id: 0
                  search_keywords: search keywords
                  sort_order: 2
                  views: 0
                - custom_url:
                    is_customized: false
                    url: /publications/
                  default_product_sort: use_store_settings
                  description: ''
                  id: 20
                  image_url: ''
                  is_visible: true
                  layout_file: category_with_facets.html
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Publications
                  page_title: ''
                  parent_id: 0
                  search_keywords: ''
                  sort_order: 4
                  views: 0
                - custom_url:
                    is_customized: false
                    url: /kitchen/
                  default_product_sort: use_store_settings
                  description: ''
                  id: 21
                  image_url: ''
                  is_visible: true
                  layout_file: category_with_facets.html
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Kitchen
                  page_title: ''
                  parent_id: 0
                  search_keywords: ''
                  sort_order: 3
                  views: 0
                - custom_url:
                    is_customized: false
                    url: /utility/
                  default_product_sort: use_store_settings
                  description: ''
                  id: 22
                  image_url: ''
                  is_visible: true
                  layout_file: category_with_facets.html
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Utility
                  page_title: ''
                  parent_id: 0
                  search_keywords: ''
                  sort_order: 5
                  views: 0
                - custom_url:
                    is_customized: false
                    url: /shop-all/
                  default_product_sort: use_store_settings
                  description: ''
                  id: 23
                  image_url: ''
                  is_visible: true
                  layout_file: category_with_facets.html
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Shop All
                  page_title: ''
                  parent_id: 0
                  search_keywords: ''
                  sort_order: 0
                  views: 0
                - custom_url:
                    is_customized: false
                    url: /garden/bath/
                  default_product_sort: use_store_settings
                  description: ''
                  id: 39
                  image_url: ''
                  is_visible: true
                  layout_file: category.html
                  meta_description: ''
                  meta_keywords:
                  - ''
                  name: Bath
                  page_title: ''
                  parent_id: 19
                  search_keywords: ''
                  sort_order: 0
                  views: 0
                meta:
                  pagination:
                    count: 6
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 6
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Category'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Category Base
                type: object
          description: ''
      summary: Get All Categories
      tags:
      - Category
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Creates a *Category*.\n\nUse this endpoint when an API only works\
        \ with categories of a default BigCommerce storefront (`channel_id=1`). \n\
        \nUse the [Create Categories](/docs/rest-management/catalog/categories-batch#create-categories)\
        \ endpoint when an API works with categories across different category trees\
        \ that belong to different storefront channels.\n\n**Required Fields**:\n\
        - `parent_id`: \n\t- To create a child category, set the `parent_id` to the\
        \ parent category.\n\t- To create a top level category, set the `parent_id`\
        \ to `0`.\n- `name`\n\n**Read-Only Fields**:\n- `id`\n\n**Limits**:\n- 16,000\
        \ categories per store limit.\n- 1,000 categories per product limit.\n- 50\
        \ characters category name length.\n- 8 levels of category depth limit.\n\
        - 65,642 characters category description length limit."
      operationId: createCategory
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              description: Common Category object properties.
              properties:
                custom_url:
                  description: The custom URL for the category on the storefront.
                  properties:
                    is_customized:
                      description: 'Returns `true` if the URL has been changed from
                        its default state (the auto-assigned URL that BigCommerce
                        provides).

                        '
                      type: boolean
                      x-required:
                      - post
                      - put
                    url:
                      description: 'Category URL on the storefront.

                        '
                      example: /shoes
                      maxLength: 255
                      minLength: 0
                      type: string
                      x-required:
                      - post
                      - put
                      x-url: true
                  title: Custom Url Category
                  type: object
                default_product_sort:
                  description: 'Determines how the products are sorted on category
                    page load.

                    '
                  enum:
                  - use_store_settings
                  - featured
                  - newest
                  - best_selling
                  - alpha_asc
                  - alpha_desc
                  - avg_customer_review
                  - price_asc
                  - price_desc
                  type: string
                description:
                  description: 'The product description, which can include HTML formatting.

                    '
                  example: <p>We offer a wide variety of products perfect for relaxing</p>
                  type: string
                image_url:
                  description: 'Image URL used for this category on the storefront.
                    Images can be uploaded via form file post to `/categories/{categoryId}/image`,
                    or by providing a publicly accessible URL in this field.

                    '
                  example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                  type: string
                  x-url: true
                is_visible:
                  description: 'Flag to determine whether the category should be displayed
                    to customers browsing the store. If `true`, the category will
                    be displayed. If `false`, the category will be hidden from view.

                    '
                  type: boolean
                layout_file:
                  description: 'A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/)
                    on creating category files.) This field is writable only for stores
                    with a Blueprint theme applied. For stores with a Stencil theme
                    applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).

                    '
                  example: category.html
                  maxLength: 500
                  minLength: 0
                  type: string
                meta_description:
                  description: 'Custom meta description for the category page. If
                    not defined, the store''s default meta description will be used.

                    '
                  maxLength: 65535
                  minLength: 0
                  type: string
                meta_keywords:
                  description: 'Custom meta keywords for the category page. If not
                    defined, the store''s default keywords will be used. Must post
                    as an array like: ["awesome","sauce"].

                    '
                  items:
                    type: string
                  type: array
                name:
                  description: 'The name displayed for the category. Name is unique
                    with respect to the category''s siblings.

                    Required in a POST.'
                  example: Bath
                  maxLength: 50
                  minLength: 1
                  type: string
                  x-required:
                  - post
                page_title:
                  description: 'Custom title for the category page. If not defined,
                    the category name will be used as the meta title.

                    '
                  example: Bath
                  maxLength: 255
                  minLength: 0
                  type: string
                parent_id:
                  description: 'The unique numeric ID of the category''s parent. This
                    field controls where the category sits in the tree of categories
                    that organize the catalog.

                    Required in a POST if creating a child category.'
                  example: 2
                  type: integer
                  x-required:
                  - post
                search_keywords:
                  description: 'A comma-separated list of keywords that can be used
                    to locate the category when searching the store.

                    '
                  maxLength: 255
                  minLength: 0
                  type: string
                sort_order:
                  description: 'Priority this category will be given when included
                    in the menu and category pages. The lower the number, the closer
                    to the top of the results the category will be.

                    '
                  example: 3
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                views:
                  description: 'Number of views the category has on the storefront.

                    '
                  example: 1050
                  type: integer
              required:
              - parent_id
              - name
              title: Category
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/category_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Category Response
                type: object
          description: ''
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
          description: Multiple operations have taken place and the status for each
            operation can be viewed in the body of the response. Typically indicates
            that a partial failure has occured, such as when a `POST` or `PUT` request
            is successful, but saving the URL has failed.
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Category` was in conflict with another category. This
            is the result of duplicate unique values, such as `name` or `custom_url`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Category` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Category
      tags:
      - Category
      x-codegen-request-body-name: category
  /catalog/categories/{category_id}:
    delete:
      description: Deletes a *Category*.
      operationId: deleteCategoryById
      parameters:
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Category
      tags:
      - Category
    get:
      description: Returns a single *Category*. Optional parameters can be passed
        in.
      operationId: getCategoryById
      parameters:
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/category_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Category Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Category
      tags:
      - Category
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/CategoryIdParam'
    put:
      description: 'Updates a *Category*.


        **Required Fields**

        * none


        **Read-Only Fields**

        - id'
      operationId: updateCategory
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              description: Common Category object properties.
              properties:
                custom_url:
                  description: The custom URL for the category on the storefront.
                  properties:
                    is_customized:
                      description: 'Returns `true` if the URL has been changed from
                        its default state (the auto-assigned URL that BigCommerce
                        provides).

                        '
                      type: boolean
                      x-required:
                      - post
                      - put
                    url:
                      description: 'Category URL on the storefront.

                        '
                      example: /shoes
                      maxLength: 255
                      minLength: 0
                      type: string
                      x-required:
                      - post
                      - put
                      x-url: true
                  title: Custom Url Category
                  type: object
                default_product_sort:
                  description: 'Determines how the products are sorted on category
                    page load.

                    '
                  enum:
                  - use_store_settings
                  - featured
                  - newest
                  - best_selling
                  - alpha_asc
                  - alpha_desc
                  - avg_customer_review
                  - price_asc
                  - price_desc
                  type: string
                description:
                  description: 'The product description, which can include HTML formatting.

                    '
                  example: <p>We offer a wide variety of products perfect for relaxing</p>
                  type: string
                id:
                  description: 'Unique ID of the *Category*. Increments sequentially.

                    Read-Only.'
                  readOnly: true
                  type: integer
                image_url:
                  description: 'Image URL used for this category on the storefront.
                    Images can be uploaded via form file post to `/categories/{categoryId}/image`,
                    or by providing a publicly accessible URL in this field.

                    '
                  example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                  type: string
                  x-url: true
                is_visible:
                  description: 'Flag to determine whether the product should be displayed
                    to customers browsing the store. If `true`, the category will
                    be displayed. If `false`, the category will be hidden from view.

                    '
                  type: boolean
                layout_file:
                  description: 'A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/)
                    on creating category files.) This field is writable only for stores
                    with a Blueprint theme applied. For stores with a Stencil theme
                    applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).

                    '
                  example: category.html
                  maxLength: 500
                  minLength: 0
                  type: string
                meta_description:
                  description: 'Custom meta description for the category page. If
                    not defined, the store''s default meta description will be used.

                    '
                  maxLength: 65535
                  minLength: 0
                  type: string
                meta_keywords:
                  description: 'Custom meta keywords for the category page. If not
                    defined, the store''s default keywords will be used. Must post
                    as an array like: ["awesome","sauce"].

                    '
                  items:
                    type: string
                  type: array
                name:
                  description: 'The name displayed for the category. Name is unique
                    with respect to the category''s siblings.

                    Required in a POST.'
                  example: Bath
                  maxLength: 50
                  minLength: 1
                  type: string
                  x-required:
                  - post
                page_title:
                  description: 'Custom title for the category page. If not defined,
                    the category name will be used as the meta title.

                    '
                  example: Bath
                  maxLength: 255
                  minLength: 0
                  type: string
                parent_id:
                  description: 'The unique numeric ID of the category''s parent. This
                    field controls where the category sits in the tree of categories
                    that organize the catalog.

                    Required in a POST if creating a child category.'
                  example: 2
                  type: integer
                  x-required:
                  - post
                search_keywords:
                  description: 'A comma-separated list of keywords that can be used
                    to locate the category when searching the store.

                    '
                  maxLength: 255
                  minLength: 0
                  type: string
                sort_order:
                  description: 'Priority this category will be given when included
                    in the menu and category pages. The lower the number, the closer
                    to the top of the results the category will be.

                    '
                  example: 3
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                views:
                  description: 'Number of views the category has on the storefront.

                    '
                  example: 1050
                  type: integer
              required:
              - parent_id
              - name
              title: Category
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: Common Category object properties.
                    properties:
                      custom_url:
                        description: The custom URL for the category on the storefront.
                        properties:
                          is_customized:
                            description: 'Returns `true` if the URL has been changed
                              from its default state (the auto-assigned URL that BigCommerce
                              provides).

                              '
                            type: boolean
                            x-required:
                            - post
                            - put
                          url:
                            description: 'Category URL on the storefront.

                              '
                            example: /shoes
                            maxLength: 255
                            minLength: 0
                            type: string
                            x-required:
                            - post
                            - put
                            x-url: true
                        title: Custom Url Category
                        type: object
                      default_product_sort:
                        description: 'Determines how the products are sorted on category
                          page load.

                          '
                        enum:
                        - use_store_settings
                        - featured
                        - newest
                        - best_selling
                        - alpha_asc
                        - alpha_desc
                        - avg_customer_review
                        - price_asc
                        - price_desc
                        type: string
                      description:
                        description: 'The product description, which can include HTML
                          formatting.

                          '
                        example: <p>We offer a wide variety of products perfect for
                          relaxing</p>
                        type: string
                      id:
                        description: 'Unique ID of the *Category*. Increments sequentially.

                          Read-Only.'
                        readOnly: true
                        type: integer
                      image_url:
                        description: 'Image URL used for this category on the storefront.
                          Images can be uploaded via form file post to `/categories/{categoryId}/image`,
                          or by providing a publicly accessible URL in this field.

                          '
                        example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                        type: string
                        x-url: true
                      is_visible:
                        description: 'Flag to determine whether the product should
                          be displayed to customers browsing the store. If `true`,
                          the category will be displayed. If `false`, the category
                          will be hidden from view.

                          '
                        type: boolean
                      layout_file:
                        description: 'A valid layout file. (Please refer to [this
                          article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/)
                          on creating category files.) This field is writable only
                          for stores with a Blueprint theme applied. For stores with
                          a Stencil theme applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).

                          '
                        example: category.html
                        maxLength: 500
                        minLength: 0
                        type: string
                      meta_description:
                        description: 'Custom meta description for the category page.
                          If not defined, the store''s default meta description will
                          be used.

                          '
                        maxLength: 65535
                        minLength: 0
                        type: string
                      meta_keywords:
                        description: 'Custom meta keywords for the category page.
                          If not defined, the store''s default keywords will be used.
                          Must post as an array like: ["awesome","sauce"].

                          '
                        items:
                          type: string
                        type: array
                      name:
                        description: 'The name displayed for the category. Name is
                          unique with respect to the category''s siblings.

                          Required in a POST.'
                        example: Bath
                        maxLength: 50
                        minLength: 1
                        type: string
                        x-required:
                        - post
                      page_title:
                        description: 'Custom title for the category page. If not defined,
                          the category name will be used as the meta title.

                          '
                        example: Bath
                        maxLength: 255
                        minLength: 0
                        type: string
                      parent_id:
                        description: 'The unique numeric ID of the category''s parent.
                          This field controls where the category sits in the tree
                          of categories that organize the catalog.

                          Required in a POST if creating a child category.'
                        example: 2
                        type: integer
                        x-required:
                        - post
                      search_keywords:
                        description: 'A comma-separated list of keywords that can
                          be used to locate the category when searching the store.

                          '
                        maxLength: 255
                        minLength: 0
                        type: string
                      sort_order:
                        description: 'Priority this category will be given when included
                          in the menu and category pages. The lower the number, the
                          closer to the top of the results the category will be.

                          '
                        example: 3
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                      views:
                        description: 'Number of views the category has on the storefront.

                          '
                        example: 1050
                        type: integer
                    required:
                    - parent_id
                    - name
                    title: Category
                    type: object
                  meta:
                    description: Empty meta object; may be used later.
                    title: Meta
                    type: object
                title: Category Response
                type: object
          description: ''
        '207':
          $ref: '#/components/responses/General207Status'
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: The resource was not found.
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: The `Category` was in conflict with another category. This
            is the result of duplicate unique values, such as `name` or `custom_url`.
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: The `Category` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.
      summary: Update a Category
      tags:
      - Category
      x-codegen-request-body-name: category
  /catalog/categories/{category_id}/image:
    delete:
      description: Deletes a *Cateogory Image*.
      operationId: deleteCategoryImage
      parameters:
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Category Image
      tags:
      - Category Images
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/CategoryIdParam'
    post:
      description: "Create a *Category Image*.\n\n **Required Fields**\n- image_file:\
        \ Form posts are the only accepted upload option.\n\nOnly one image at a time\
        \ can be created.\nLimit image size to 1MB.\nTo update a *Category Image*,\
        \ use the [Update categories](/docs/rest-management/catalog/categories-batch#update-categories)\
        \ endpoint and an `image_url`."
      operationId: createCategoryImage
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image_file:
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  image_url: https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png
                meta: {}
              schema:
                properties:
                  data:
                    properties:
                      image_url:
                        type: string
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '400':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Bad Request. The requested resource could not be downloaded
            and may be invalid. Possible reasons include malformed request syntax
            or the file host blocking requests.
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'Image was not valid. This is the result of a missing `image_file`
            field or an incorrect file type. See the response for more details.

            '
      summary: Create a Category Image
      tags:
      - Category Images
  /catalog/categories/{category_id}/metafields:
    get:
      description: Returns a list of *Metafields* on a *Category*. Optional filter
        parameters can be passed in.
      operationId: getCategoryMetafieldsByCategoryId
      parameters:
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      - description: 'Filter items by id.

          '
        in: query
        name: id
        schema:
          type: integer
      - explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:not_in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: 'Filter based on a metafield''s key.

          '
        in: query
        name: key
        schema:
          type: string
      - description: Filter based on a metafield's namespace.
        in: query
        name: namespace
        schema:
          type: string
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - date_created: '1973-01-20T21:34:57.903Z'
                  date_modified: '1990-12-30T00:29:23.515Z'
                  description: Location in the warehouse
                  id: 6
                  key: Location
                  namespace: Warehouse Locations
                  permission_set: app_only
                  resource_id: 111
                  resource_type: category
                  value: 4HG
                - date_created: '1973-01-20T21:34:57.903Z'
                  date_modified: '1990-12-30T00:29:23.515Z'
                  description: Location in the warehouse
                  id: 7
                  key: Location
                  namespace: Warehouse Locations
                  permission_set: read
                  resource_id: 111
                  resource_type: category
                  value: 4HG
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 2
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Meta Field Collection Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get All Category Metafields
      tags:
      - Category Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/CategoryIdParam'
    post:
      description: 'Creates a *Category Metafield*.


        **Required Fields:**

        - permission_set

        - namespace

        - key

        - value


        **Read-Only Fields**

        - id


        **Note:** The maxiumum number of metafields allowed on each order, product,
        category, variant, or brand is 250 per client ID. For more information, see
        [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits)
        in the Help Center.'
      operationId: createCategoryMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: category
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was in conflict with another `Metafield`.
            This can be the result of duplicate, unique key combinations of the app''s
            client id, namespace, key, resource_type, and resource_id.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Category Metafield
      tags:
      - Category Metafields
      x-codegen-request-body-name: Metafield
  /catalog/categories/{category_id}/metafields/{metafield_id}:
    delete:
      description: Deletes a *Category Metafield*.
      operationId: deleteCategoryMetafieldById
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Category Metafield
      tags:
      - Category Metafields
    get:
      description: Returns a single *Category Metafield*. Optional parameters can
        be passed in.
      operationId: getCategoryMetafieldByCategoryId
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: category
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: The resource was not found.
      summary: Get a Category Metafield
      tags:
      - Category Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/CategoryIdParam'
    - $ref: '#/components/parameters/MetafieldIdParam'
    put:
      description: "Updates a *Category Metafield*.\n\n**Required Fields**\n* none\n\
        \n**Read-Only Fields**\n* id\n* These fields can only be modified by the app\
        \ (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t\
        * permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`,\
        \ and `permission_set` fields using a client ID different from the one used\
        \ to create those metafields will result in a 403 error message. "
      operationId: updateCategoryMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Category` to which the resource belongs.

          '
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: category
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update a Category Metafield
      tags:
      - Category Metafields
      x-codegen-request-body-name: Metafield
  /catalog/categories/{category_id}/products/sort-order:
    get:
      description: "Returns a list of products and their sort order for a specific\
        \ category.\n\n**Usage Notes**\n* Data pairs are displayed in ascending order\
        \ based on products' `sort_order` values.\n* `null` values are allowed for\
        \ products without specified `sort_order` values.\n* Products with `sort_order`\
        \ value of `null` will be displayed after products with valid numerical values.\n\
        * The priorities for determining product sort order on a storefront are the\
        \ following:\n  - Priority 1: Manually specified sort order on Category Level\
        \ (API).\n  - Priority 2: Manually specified sort order on Product (Global)\
        \ Level (UI/API).\n  - Priority 3: Default sorting by Product ID (newly added\
        \ products go first) (UI/API)."
      operationId: getsortorders
      parameters:
      - description: The ID of the `Category` to which the resource belongs.
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
          description: The requested category was not found.
      summary: Get Product Sort Order
      tags:
      - Product Sort Order
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/CategoryIdParam'
    put:
      description: Updates sort order of products within a specific category.
      operationId: updatesortorder
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: The ID of the `Category` to which the resource belongs.
        in: path
        name: category_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/productSortOrder'
              type: array
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/productSortOrder'
                type: array
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
          description: The requested category was not found.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
          description: 'Unprocessable entity.


            Please verify if all requested products are assigned to the category.


            Please verify if all required fields are present in the request body and
            are filled with values correctly.'
      summary: Update Product Sort Order
      tags:
      - Product Sort Order
      x-codegen-request-body-name: body
  /catalog/products:
    delete:
      description: 'To delete *Product* objects, you must include a filter. This prevents
        inadvertently deleting all *Product* objects in a store.


        > #### Note

        > The maximum number of products you can delete at one time is 250.


        **Example**:

        To delete products with the id''s of 1,2 and 3, use `DELETE /v3/catalog/products?id:in=1,2,3`.'
      operationId: deleteProducts
      parameters:
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      - description: 'Filter items by sku.

          '
        in: query
        name: sku
        schema:
          type: string
      - description: 'Filter items by price.

          '
        in: query
        name: price
        schema:
          type: number
      - description: 'Filter items by weight.

          '
        in: query
        name: weight
        schema:
          type: number
      - description: 'Filter items by condition.

          '
        in: query
        name: condition
        schema:
          enum:
          - new
          - used
          - refurbished
          type: string
      - description: 'Filter items by brand_id.

          '
        in: query
        name: brand_id
        schema:
          type: integer
      - description: Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        in: query
        name: date_last_imported
        schema:
          format: date-time
          type: string
      - description: 'Filter items by if visible on the storefront. '
        in: query
        name: is_visible
        schema:
          type: boolean
      - description: 'Filter items by is_featured.

          '
        in: query
        name: is_featured
        schema:
          type: integer
      - description: 'Filter items by inventory_level.

          '
        in: query
        name: inventory_level
        schema:
          type: integer
      - description: 'Filter items by total_sold.

          '
        in: query
        name: total_sold
        schema:
          type: integer
      - description: 'Filter items by type: `physical` or `digital`.'
        in: query
        name: type
        schema:
          enum:
          - digital
          - physical
          type: string
      - description: "Filter items by categories.\n If a product is in more than one\
          \ category, using this query will not return the product. Instead use `categories:in=12`."
        in: query
        name: categories
        schema:
          type: integer
      - description: 'Filter items by keywords found in the `name`, `description`,
          or `sku` fields, or in the brand name.

          '
        in: query
        name: keyword
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete Products
      tags:
      - Products
    get:
      description: Returns a list of **Products**. Optional filter parameters can
        be passed in.
      operationId: getProducts
      parameters:
      - description: 'Filter items by id.

          '
        in: query
        name: id
        schema:
          type: integer
      - explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:not_in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:min
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:max
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:greater
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: id:less
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      - description: 'Filter items by upc.

          '
        in: query
        name: upc
        schema:
          type: string
      - description: 'Filter items by price.

          '
        in: query
        name: price
        schema:
          type: number
      - description: 'Filter items by weight.

          '
        in: query
        name: weight
        schema:
          type: number
      - description: 'Filter items by condition.

          '
        in: query
        name: condition
        schema:
          enum:
          - new
          - used
          - refurbished
          type: string
      - description: 'Filter items by brand_id.

          '
        in: query
        name: brand_id
        schema:
          type: integer
      - description: 'Filter items by `date_modified`. '
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: Filter items by `date_modified`. For example, `date_modified:max=2020-06-15`.
        in: query
        name: date_modified:max
        schema:
          type: string
      - description: Filter items by `date_modified`. For example, `date_modified:min=2018-06-15`.
        in: query
        name: date_modified:min
        schema:
          type: string
      - description: Filter items by date_last_imported.
        in: query
        name: date_last_imported
        schema:
          format: date-time
          type: string
      - description: Filter items by date_last_imported. For example, `date_last_imported:max=2020-06-15`.
        in: query
        name: date_last_imported:max
        schema:
          type: string
      - description: Filter items by date_last_imported. For example, `date_last_imported:min=2018-06-15`.
        in: query
        name: date_last_imported:min
        schema:
          type: string
      - description: Filter items based on whether the product is currently visible
          on the storefront.
        in: query
        name: is_visible
        schema:
          type: boolean
      - description: Filter items by is_featured. `1` for true, `0` for false.
        in: query
        name: is_featured
        schema:
          enum:
          - 1
          - 0
          type: integer
      - description: Filter items by is_free_shipping. `1` for true, `0` for false.
        in: query
        name: is_free_shipping
        schema:
          type: integer
      - description: 'Filter items by inventory_level.

          '
        in: query
        name: inventory_level
        schema:
          type: integer
      - in: query
        name: inventory_level:in
        schema:
          type: integer
      - in: query
        name: inventory_level:not_in
        schema:
          type: integer
      - in: query
        name: inventory_level:min
        schema:
          type: integer
      - in: query
        name: inventory_level:max
        schema:
          type: integer
      - in: query
        name: inventory_level:greater
        schema:
          type: integer
      - in: query
        name: inventory_level:less
        schema:
          type: integer
      - description: 'Filter items by inventory_low. Values: 1, 0.

          '
        in: query
        name: inventory_low
        schema:
          type: integer
      - description: 'Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.

          '
        in: query
        name: out_of_stock
        schema:
          type: integer
      - description: 'Filter items by total_sold.

          '
        in: query
        name: total_sold
        schema:
          type: integer
      - description: Filter items by type.
        in: query
        name: type
        schema:
          enum:
          - digital
          - physical
          type: string
      - description: "Filter items by categories.\n If a product is in more than one\
          \ category, using this query will not return the product. Instead use `categories:in=12`."
        in: query
        name: categories
        schema:
          type: integer
      - description: Filter items by keywords found in the `name` or `sku` fields
        in: query
        name: keyword
        schema:
          type: string
      - description: Set context used by the search algorithm to return results targeted
          towards the specified group. Use `merchant` to help merchants search their
          own catalog. Use `shopper` to return shopper-facing search results.
        in: query
        name: keyword_context
        schema:
          enum:
          - shopper
          - merchant
          type: string
      - description: 'Filter items by status.

          '
        in: query
        name: status
        schema:
          type: integer
      - description: Sub-resources to include on a product, in a comma-separated list.
          If `options` or `modifiers` is used, results are limited to 10 per page.
        in: query
        name: include
        schema:
          enum:
          - variants
          - images
          - custom_fields
          - bulk_pricing_rules
          - primary_image
          - modifiers
          - options
          - videos
          type: string
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: 'Filter items by availability. Values are: available, disabled,
          preorder.

          '
        in: query
        name: availability
        schema:
          enum:
          - available
          - disabled
          - preorder
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: 'Sort direction. Acceptable values are: `asc`, `desc`.

          '
        in: query
        name: direction
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: 'Field name to sort by. Note: Since `id` increments when new
          products are added, you can use that field to sort by product create date.

          '
        in: query
        name: sort
        schema:
          enum:
          - id
          - name
          - sku
          - price
          - date_modified
          - date_last_imported
          - inventory_level
          - is_visible
          - total_sold
          type: string
      - description: Filter items by categories. Use for products in multiple categories.
          For example, `categories:in=12`.
        in: query
        name: categories:in
        schema:
          type: integer
      - description: 'Filter items by main SKU. To filter by variant SKU, see [Get
          All Variants](/docs/rest-management/catalog/product-variants#get-all-product-variants). '
        in: query
        name: sku
        schema:
          type: string
      - description: Filter items by SKU.
        explode: false
        in: query
        name: sku:in
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/product_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: ''
      summary: Get All Products
      tags:
      - Products
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Creates a *Product*. Only one product can be created at a time.\n\
        \n**Required Fields:**\n- `name`\n- `type`\n- `weight`\n- `price`\n\n**Read-Only\
        \ Fields**\n- `id`\n- `date_created`\n- `date_modified`\n- `calculated_price`\n\
        - `base_variant_id`\n\n**Limits**\n- 250 characters product name length.\n\
        \n**Usage Notes**\n* `POST` requests to `/products` accept a `video` array.\
        \ \n* `POST` requests to `/products/{product_id}/videos` accept a `video`\
        \ object."
      operationId: createProduct
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Response
                type: object
            example-1:
              example:
                '207': null
                availability: available
                availability_description: string
                base_variant_id: 0
                bin_picking_number: string
                brand_id: 0
                brand_name or brand_id: Common Good
                bulk_pricing_rules:
                - amount: 10
                  id: 0
                  quantity_max: 50
                  quantity_min: 10
                  type: price
                calculated_price: 0
                categories:
                - 0
                condition: New
                cost_price: 0
                custom_fields:
                - id: 6
                  name: ISBN
                  value: '1234567890123'
                custom_url:
                  is_customized: true
                  url: string
                date_created: '2018-08-15T14:49:05+00:00'
                date_modified: '2018-08-24T14:41:00+00:00'
                depth: 0
                description: <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing
                  elit. Morbi vel metus ac est egestas porta sed quis erat. Integer
                  id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla.
                  Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam
                  sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat
                  metus. Curabitur libero nunc, interdum ac libero non, tristique
                  porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus
                  sodales quis turpis eget.</span></p>
                fixed_cost_shipping_price: 0
                gift_wrapping_options_list:
                - 0
                gift_wrapping_options_type: any
                gtin: string
                height: 0
                id: 1
                images:
                - date_modified: '2019-08-24T14:15:22+00:00'
                  description: string
                  id: 0
                  image_file: string
                  image_url: string
                  is_thumbnail: true
                  product_id: 0
                  sort_order: -2147483648
                  url_standard: string
                  url_thumbnail: string
                  url_tiny: string
                  url_zoom: string
                inventory_level: 0
                inventory_tracking: none
                inventory_warning_level: 0
                is_condition_shown: true
                is_featured: true
                is_free_shipping: true
                is_preorder_only: true
                is_price_hidden: true
                is_visible: true
                layout_file: string
                map_price: 0
                meta: {}
                meta_description: string
                meta_keywords:
                - string
                modifiers:
                - config:
                    checkbox_label: string
                    checked_by_default: true
                    date_earliest_value: '2019-08-24T00:00:00+00:00'
                    date_latest_value: '2019-08-24T00:00:00+00:00'
                    date_limit_mode: range
                    date_limited: true
                    default_value: string
                    file_max_size: 5
                    file_types_mode: specific
                    file_types_other:
                    - pdf
                    file_types_supported:
                    - images, documents, other
                    number_highest_value: 0
                    number_integers_only: false
                    number_limit_mode: lowest
                    number_limited: true
                    number_lowest_value: 100
                    product_list_adjusts_inventory: true
                    product_list_adjusts_pricing: true
                    product_list_shipping_calc: weight
                    text_characters_limited: true
                    text_lines_limited: true
                    text_max_length: 55
                    text_max_lines: 4
                    text_min_length: 1
                  display_name: string
                  id: 12
                  name: Add-a-$5-Donation1535039590-191
                  option_values:
                  - adjusters:
                      image_url: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                      price:
                        adjuster: relative
                        adjuster_value: 5
                      purchasing_disabled:
                        message: string
                        status: true
                      weight:
                        adjuster: relative
                        adjuster_value: 5
                    id: 0
                    is_default: false
                    label: Green
                    option_id: 0
                    sort_order: 0
                    value_data: {}
                  product_id: 77
                  required: true
                  sort_order: 0
                  type: date
                mpn: string
                name: Smith Journal 13
                open_graph_description: string
                open_graph_title: string
                open_graph_type: product
                open_graph_use_image: true
                open_graph_use_meta_description: true
                open_graph_use_product_name: true
                option_set_display: string
                option_set_id: 0
                options:
                - config:
                    checkbox_label: string
                    checked_by_default: true
                    date_earliest_value: '2019-08-24T00:00:00+00:00'
                    date_latest_value: '2019-08-24T00:00:00+00:00'
                    date_limit_mode: range
                    date_limited: true
                    default_value: string
                    file_max_size: 5
                    file_types_mode: specific
                    file_types_other:
                    - pdf
                    file_types_supported:
                    - images, documents, other
                    number_highest_value: 0
                    number_integers_only: false
                    number_limit_mode: lowest
                    number_limited: true
                    number_lowest_value: 100
                    product_list_adjusts_inventory: true
                    product_list_adjusts_pricing: true
                    product_list_shipping_calc: weight
                    text_characters_limited: true
                    text_lines_limited: true
                    text_max_length: 55
                    text_max_lines: 4
                    text_min_length: 1
                  display_name: Add-a-$5-Donation1535042499-187
                  id: 55
                  option_values:
                    id: 0
                    is_default: false
                    label: Green
                    sort_order: 0
                    value_data: {}
                  product_id: 4
                  sort_order: 1
                  type: radio_buttons
                order_quantity_maximum: 0
                order_quantity_minimum: 0
                page_title: string
                preorder_message: string
                preorder_release_date: '2019-08-24T14:15:22+00:00'
                price: 0
                price_hidden_label: string
                product_tax_code: string
                related_products:
                - 0
                retail_price: 0
                reviews_count: 4
                reviews_rating_sum: 3.2
                sale_price: 0
                search_keywords: string
                sku: SM-13
                sort_order: -2147483648
                tax_class_id: 0
                total_sold: 80
                type: physical
                upc: string
                variants:
                - bin_picking_number: string
                  calculated_price: 0
                  calculated_weight: 0
                  cost_price: 0
                  depth: 0
                  fixed_cost_shipping_price: 0
                  gtin: 012345678905
                  height: 0
                  id: 0
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: true
                  mpn: string
                  option_values:
                  - id: 146
                    label: Beige
                    option_display_name: Color
                    option_id: 151
                  price: 0
                  product_id: 0
                  purchasing_disabled: true
                  purchasing_disabled_message: string
                  retail_price: 0
                  sale_price: 0
                  sku: string
                  sku_id: 0
                  upc: string
                  weight: 0
                  width: 0
                videos:
                - description: string
                  id: 0
                  length: string
                  product_id: 0
                  sort_order: -2147483648
                  title: string
                  type: youtube
                  video_id: string
                view_count: 0
                warranty: string
                weight: 0
                width: 0
          description: ''
        '207':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/product_Full'
                    type: array
                  errors:
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: "Multi-status. The product information was updated successfully,\
            \ but the inventory data failed to update. \n\nVerify that the inventory-related\
            \ updates are well-formed and correct; for example, that they donʼt result\
            \ in negative stock levels. Then consider updating the inventory data\
            \ again."
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Product` was in conflict with another product. This is the
            result of duplicate unique values, such as name or SKU; a missing or invalid
            `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Product` was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.

            '
      summary: Create a Product
      tags:
      - Products
      x-codegen-request-body-name: product
    put:
      description: 'Updates products in batches. Batches are limited to 10 products.


        **Required Fields**

        * `id` - product `id` is required for batch updates to products.


        **Read-Only Fields**

        - `id`

        - `date_created`

        - `date_modified`

        - `calculated_price`

        - `base_variant_id`'
      operationId: updateProducts
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - availability: available
                  availability_description: string
                  bin_picking_number: string
                  brand_id: 0
                  brand_name or brand_id: Common Good
                  bulk_pricing_rules:
                  - amount: 10
                    id: 0
                    quantity_max: 50
                    quantity_min: 10
                    type: price
                  categories:
                  - 0
                  condition: New
                  cost_price: 0
                  custom_fields:
                  - id: 6
                    name: ISBN
                    value: '1234567890123'
                  custom_url:
                    is_customized: true
                    url: string
                  depth: 0
                  description: <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing
                    elit. Morbi vel metus ac est egestas porta sed quis erat. Integer
                    id nulla massa. Proin vitae enim nisi. Praesent non dignissim
                    nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor
                    aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum
                    volutpat metus. Curabitur libero nunc, interdum ac libero non,
                    tristique porttitor metus. Ut non dignissim lorem, in vestibulum
                    leo. Vivamus sodales quis turpis eget.</span></p>
                  fixed_cost_shipping_price: 0
                  gift_wrapping_options_list:
                  - 0
                  gift_wrapping_options_type: any
                  gtin: string
                  height: 0
                  images:
                  - date_modified: '2019-08-24T14:15:22Z'
                    description: string
                    id: 0
                    image_file: string
                    image_url: string
                    is_thumbnail: true
                    product_id: 0
                    sort_order: -2147483648
                    url_standard: string
                    url_thumbnail: string
                    url_tiny: string
                    url_zoom: string
                  inventory_level: 0
                  inventory_tracking: none
                  inventory_warning_level: 0
                  is_condition_shown: true
                  is_featured: true
                  is_free_shipping: true
                  is_preorder_only: true
                  is_price_hidden: true
                  is_visible: true
                  layout_file: string
                  map_price: 0
                  meta_description: string
                  meta_keywords:
                  - string
                  mpn: string
                  name: Smith Journal 13
                  open_graph_description: string
                  open_graph_title: string
                  open_graph_type: product
                  open_graph_use_image: true
                  open_graph_use_meta_description: true
                  open_graph_use_product_name: true
                  order_quantity_maximum: 0
                  order_quantity_minimum: 0
                  page_title: string
                  preorder_message: string
                  preorder_release_date: '2019-08-24T14:15:22Z'
                  price: 0
                  price_hidden_label: string
                  product_tax_code: string
                  related_products:
                  - 0
                  retail_price: 0
                  reviews_count: 4
                  reviews_rating_sum: 3
                  sale_price: 0
                  search_keywords: string
                  sku: SM-13
                  sort_order: -2147483648
                  tax_class_id: 0
                  total_sold: 80
                  type: physical
                  upc: string
                  videos:
                  - description: A video about documenation
                    id: 0
                    length: string
                    product_id: 0
                    sort_order: 1
                    title: Writing Great Documentation
                    type: youtube
                    video_id: z3fRu9pkuXE
                  view_count: 0
                  warranty: string
                  weight: 0
                  width: 0
            schema:
              $ref: '#/components/schemas/product_Put_Collection'
        required: false
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                    - availability: available
                      availability_description: string
                      base_variant_id: 0
                      bin_picking_number: string
                      brand_id: 0
                      brand_name or brand_id: Common Good
                      bulk_pricing_rules:
                      - amount: 10
                        id: 0
                        quantity_max: 50
                        quantity_min: 10
                        type: price
                      calculated_price: 0
                      categories:
                      - 0
                      condition: New
                      cost_price: 0
                      custom_fields:
                      - id: 6
                        name: ISBN
                        value: '1234567890123'
                      custom_url:
                        is_customized: true
                        url: string
                      date_created: '2018-08-15T14:49:05+00:00'
                      date_modified: '2018-08-24T14:41:00+00:00'
                      depth: 0
                      description: <p><span>Lorem ipsum dolor sit amet, consectetur
                        adipiscing elit. Morbi vel metus ac est egestas porta sed
                        quis erat. Integer id nulla massa. Proin vitae enim nisi.
                        Praesent non dignissim nulla. Nulla mattis id massa ac pharetra.
                        Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl,
                        dictum quis leo sit amet, rutrum volutpat metus. Curabitur
                        libero nunc, interdum ac libero non, tristique porttitor metus.
                        Ut non dignissim lorem, in vestibulum leo. Vivamus sodales
                        quis turpis eget.</span></p>
                      fixed_cost_shipping_price: 0
                      gift_wrapping_options_list:
                      - 0
                      gift_wrapping_options_type: any
                      gtin: string
                      height: 0
                      id: 1
                      images:
                      - date_modified: '2019-08-24T14:15:22Z'
                        description: string
                        id: 0
                        image_file: string
                        image_url: string
                        is_thumbnail: true
                        product_id: 0
                        sort_order: -2147483648
                        url_standard: string
                        url_thumbnail: string
                        url_tiny: string
                        url_zoom: string
                      inventory_level: 0
                      inventory_tracking: none
                      inventory_warning_level: 0
                      is_condition_shown: true
                      is_featured: true
                      is_free_shipping: true
                      is_preorder_only: true
                      is_price_hidden: true
                      is_visible: true
                      layout_file: string
                      map_price: 0
                      meta_description: string
                      meta_keywords:
                      - string
                      modifiers:
                      - config:
                          checkbox_label: string
                          checked_by_default: true
                          date_earliest_value: '2019-08-24'
                          date_latest_value: '2019-08-24'
                          date_limit_mode: range
                          date_limited: true
                          default_value: string
                          file_max_size: 5
                          file_types_mode: specific
                          file_types_other:
                          - pdf
                          file_types_supported:
                          - images, documents, other
                          number_highest_value: 0
                          number_integers_only: false
                          number_limit_mode: lowest
                          number_limited: true
                          number_lowest_value: 100
                          product_list_adjusts_inventory: true
                          product_list_adjusts_pricing: true
                          product_list_shipping_calc: weight
                          text_characters_limited: true
                          text_lines_limited: true
                          text_max_length: 55
                          text_max_lines: 4
                          text_min_length: 1
                        display_name: string
                        id: 12
                        name: Add-a-$5-Donation1535039590-191
                        option_values:
                        - adjusters:
                            image_url: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                            price:
                              adjuster: relative
                              adjuster_value: 5
                            purchasing_disabled:
                              message: string
                              status: true
                            weight:
                              adjuster: relative
                              adjuster_value: 5
                          id: 0
                          is_default: false
                          label: Green
                          option_id: 0
                          sort_order: 0
                          value_data: {}
                        product_id: 77
                        required: true
                        sort_order: 0
                        type: date
                      mpn: string
                      name: Smith Journal 13
                      open_graph_description: string
                      open_graph_title: string
                      open_graph_type: product
                      open_graph_use_image: true
                      open_graph_use_meta_description: true
                      open_graph_use_product_name: true
                      option_set_display: string
                      option_set_id: 0
                      options:
                      - config:
                          checkbox_label: string
                          checked_by_default: true
                          date_earliest_value: '2019-08-24'
                          date_latest_value: '2019-08-24'
                          date_limit_mode: range
                          date_limited: true
                          default_value: string
                          file_max_size: 5
                          file_types_mode: specific
                          file_types_other:
                          - pdf
                          file_types_supported:
                          - images, documents, other
                          number_highest_value: 0
                          number_integers_only: false
                          number_limit_mode: lowest
                          number_limited: true
                          number_lowest_value: 100
                          product_list_adjusts_inventory: true
                          product_list_adjusts_pricing: true
                          product_list_shipping_calc: weight
                          text_characters_limited: true
                          text_lines_limited: true
                          text_max_length: 55
                          text_max_lines: 4
                          text_min_length: 1
                        display_name: Add-a-$5-Donation1535042499-187
                        id: 55
                        option_values:
                        - id: 0
                          is_default: false
                          label: Green
                          sort_order: 0
                          value_data: {}
                        product_id: 4
                        sort_order: 1
                        type: radio_buttons
                      order_quantity_maximum: 0
                      order_quantity_minimum: 0
                      page_title: string
                      preorder_message: string
                      preorder_release_date: '2019-08-24T14:15:22Z'
                      price: 0
                      price_hidden_label: string
                      product_tax_code: string
                      related_products:
                      - 0
                      retail_price: 0
                      reviews_count: 4
                      reviews_rating_sum: 3
                      sale_price: 0
                      search_keywords: string
                      sku: SM-13
                      sort_order: -2147483648
                      tax_class_id: 0
                      total_sold: 80
                      type: physical
                      upc: string
                      variants:
                      - bin_picking_number: string
                        calculated_price: 0
                        calculated_weight: 0
                        cost_price: 0
                        depth: 0
                        fixed_cost_shipping_price: 0
                        gtin: 012345678905
                        height: 0
                        id: 0
                        inventory_level: 0
                        inventory_warning_level: 0
                        is_free_shipping: true
                        mpn: string
                        option_values:
                        - id: 146
                          label: Beige
                          option_display_name: Color
                          option_id: 151
                        price: 0
                        product_id: 0
                        purchasing_disabled: true
                        purchasing_disabled_message: string
                        retail_price: 0
                        sale_price: 0
                        sku: string
                        sku_id: 0
                        upc: string
                        weight: 0
                        width: 0
                      videos:
                      - description: A video about documentation
                        id: 0
                        length: string
                        product_id: 0
                        sort_order: 1
                        title: Writing Great Documentation
                        type: youtube
                        video_id: z3fRu9pkuXE
                      view_count: 0
                      warranty: string
                      weight: 0
                      width: 0
                    meta:
                      pagination:
                        count: 36
                        current_page: 1
                        links:
                          current: ?page=1&limit=50
                          next: string
                          previous: string
                        per_page: 50
                        total: 36
                        total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/product_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: ''
        '207':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/product_Full'
                    type: array
                  errors:
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: "Multi-status. The product information was updated successfully,\
            \ but the inventory data failed to update. \n\nVerify that the inventory-related\
            \ updates are well-formed and correct; for example, that they donʼt result\
            \ in negative stock levels. Then consider updating the inventory data\
            \ again."
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: The resource was not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse_409'
          description: '`Product` was in conflict with another product. This is the
            result of duplicate unique values such as name or SKU; a missing or invalid
            `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.'
        '413':
          content:
            application/json:
              example:
                errors: {}
                status: 413
                title: The request payload is too large. The maximum items allowed
                  in the array is 50
                type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/error_Base'
          description: 413 Request Entity Too Large
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse_422'
          description: '`Product` was not valid. This is the result of missing required
            fields or invalid data. See the response for more details.'
      summary: Update Products (Batch)
      tags:
      - Products
      x-codegen-request-body-name: products
  /catalog/products/category-assignments:
    delete:
      description: Deletes products category assignments. A filter must be supplied.
      operationId: DeleteProductsCategoryAssignments
      parameters:
      - in: query
        name: product_id:in
        schema:
          type: string
      - in: query
        name: category_id:in
        schema:
          type: string
      responses:
        '204':
          description: Deleted
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
          description: At least one filter must be provided in order to delete category
            assignments
      summary: Delete Products Category Assignments
      tags:
      - Products Category Assignments
    get:
      description: Returns a list of products category assignments.
      operationId: GetProductsCategoryAssignments
      parameters:
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: product_id:in
        schema:
          type: string
      - in: query
        name: category_id:in
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ProductCategoryAssignment'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
                type: object
          description: Collection of category assignments.
      summary: Get Products Category Assignments
      tags:
      - Products Category Assignments
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Creates products category assignments.
      operationId: CreateProductsCategoryAssignments
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProductCategoryAssignment'
              type: array
        required: true
      responses:
        '204':
          description: Updated
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
          description: Error response for batch PUT of Category Assignments. Includes
            the errors for each reference id.
      summary: Create Products Category Assignments.
      tags:
      - Products Category Assignments
  /catalog/products/channel-assignments:
    delete:
      description: Delete products channel assignments. A filter must be supplied.
      operationId: DeleteProductsChannelAssignments
      parameters:
      - in: query
        name: product_id:in
        schema:
          type: string
      - in: query
        name: channel_id:in
        schema:
          type: string
      responses:
        '204':
          description: Deleted
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
          description: At least one filter must be provided in order to delete channel
            assignments
      summary: Delete Products Channel Assignments
      tags:
      - Products Channel Assignments
    get:
      description: Returns a list of products channel assignments.
      operationId: GetProductsChannelAssignments
      parameters:
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: product_id:in
        schema:
          type: string
      - in: query
        name: channel_id:in
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ProductChannelAssignment'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
                type: object
          description: Collection of channel assignments.
      summary: Get Products Channel Assignments
      tags:
      - Products Channel Assignments
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Creates products channel assignments.
      operationId: CreateProductsChannelAssignments
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProductChannelAssignment'
              type: array
        required: true
      responses:
        '204':
          description: Updated
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
          description: Error response for batch PUT of Channel Assignments. Includes
            the errors for each reference id.
      summary: Create Products Channel Assignments
      tags:
      - Products Channel Assignments
  /catalog/products/{product_id}:
    delete:
      description: Deletes a *Product*.
      operationId: deleteProductById
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product
      tags:
      - Products
    get:
      description: Returns a single *Product*. Optional parameters can be passed in.
      operationId: getProductById
      parameters:
      - description: Sub-resources to include on a product, in a comma-separated list.
          If `options` or `modifiers` is used, results are limited to 10 per page.
        in: query
        name: include
        schema:
          enum:
          - variants
          - images
          - custom_fields
          - bulk_pricing_rules
          - primary_image
          - modifiers
          - options
          - videos
          type: string
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  availability: available
                  availability_description: ''
                  base_variant_id: 345
                  bin_picking_number: ''
                  brand_id: 36
                  calculated_price: 7.95
                  categories:
                  - 23
                  - 21
                  condition: New
                  cost_price: 0
                  custom_url:
                    is_customized: true
                    url: /all/1l-le-parfait-jar/
                  date_created: '2018-08-15T14:48:46+00:00'
                  date_modified: '2018-09-05T20:42:07+00:00'
                  depth: 0
                  description: <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing
                    elit. Morbi vel metus ac est egestas porta sed quis erat. Integer
                    id nulla massa. Proin vitae enim nisi. Praesent non dignissim
                    nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor
                    aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum
                    volutpat metus. Curabitur libero nunc, interdum ac libero non,
                    tristique porttitor metus. Ut non dignissim lorem, in vestibulum
                    leo. Vivamus sodales quis turpis eget.</span></p>
                  fixed_cost_shipping_price: 0
                  gift_wrapping_options_list: []
                  gift_wrapping_options_type: any
                  gtin: ''
                  height: 0
                  id: 174
                  inventory_level: 0
                  inventory_tracking: none
                  inventory_warning_level: 0
                  is_condition_shown: false
                  is_featured: false
                  is_free_shipping: false
                  is_preorder_only: false
                  is_price_hidden: false
                  is_visible: true
                  layout_file: product.html
                  map_price: 0
                  meta_description: ''
                  meta_keywords: []
                  mpn: ''
                  name: 1L Le Parfait Jar
                  open_graph_description: ''
                  open_graph_title: ''
                  open_graph_type: product
                  open_graph_use_image: true
                  open_graph_use_meta_description: true
                  open_graph_use_product_name: true
                  option_set_display: right
                  option_set_id: 55
                  order_quantity_maximum: 0
                  order_quantity_minimum: 0
                  page_title: ''
                  preorder_message: ''
                  preorder_release_date: '2018-09-05T20:42:07+00:00'
                  price: 7.95
                  price_hidden_label: ''
                  product_tax_code: ''
                  related_products:
                  - -1
                  retail_price: 10
                  reviews_count: 0
                  reviews_rating_sum: 0
                  sale_price: 0
                  search_keywords: jar, glass
                  sku: ''
                  sort_order: 0
                  tax_class_id: 0
                  total_sold: 7
                  type: physical
                  upc: ''
                  view_count: 10
                  warranty: ''
                  weight: 1
                  width: 0
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product
      tags:
      - Products
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    put:
      description: 'Updates a *Product*.


        **Read-Only Fields**

        - id

        - date_created

        - date_modified

        - calculated_price

        - base_variant_id

        '
      operationId: updateProduct
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Put'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Response
                type: object
            example-1:
              example:
                availability: available
                availability_description: string
                base_variant_id: 0
                bin_picking_number: string
                brand_id: 0
                brand_name or brand_id: Common Good
                bulk_pricing_rules:
                - amount: 10
                  id: 0
                  quantity_max: 50
                  quantity_min: 10
                  type: price
                calculated_price: 0
                categories:
                - 0
                condition: New
                cost_price: 0
                custom_fields:
                - id: 6
                  name: ISBN
                  value: '1234567890123'
                custom_url:
                  is_customized: true
                  url: string
                date_created: '2018-08-15T14:49:05+00:00'
                date_modified: '2018-08-24T14:41:00+00:00'
                depth: 0
                description: <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing
                  elit. Morbi vel metus ac est egestas porta sed quis erat. Integer
                  id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla.
                  Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam
                  sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat
                  metus. Curabitur libero nunc, interdum ac libero non, tristique
                  porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus
                  sodales quis turpis eget.</span></p>
                fixed_cost_shipping_price: 0
                gift_wrapping_options_list:
                - 0
                gift_wrapping_options_type: any
                gtin: string
                height: 0
                id: 1
                images:
                - date_modified: '2019-08-24T14:15:22+00:00'
                  description: string
                  id: 0
                  image_file: string
                  image_url: string
                  is_thumbnail: true
                  product_id: 0
                  sort_order: -2147483648
                  url_standard: string
                  url_thumbnail: string
                  url_tiny: string
                  url_zoom: string
                inventory_level: 0
                inventory_tracking: none
                inventory_warning_level: 0
                is_condition_shown: true
                is_featured: true
                is_free_shipping: true
                is_preorder_only: true
                is_price_hidden: true
                is_visible: true
                layout_file: string
                map_price: 0
                meta: {}
                meta_description: string
                meta_keywords:
                - string
                modifiers:
                - config:
                    checkbox_label: string
                    checked_by_default: true
                    date_earliest_value: '2019-08-24T00:00:00+00:00'
                    date_latest_value: '2019-08-24T00:00:00+00:00'
                    date_limit_mode: range
                    date_limited: true
                    default_value: string
                    file_max_size: 5
                    file_types_mode: specific
                    file_types_other:
                    - pdf
                    file_types_supported:
                    - images, documents, other
                    number_highest_value: 0
                    number_integers_only: false
                    number_limit_mode: lowest
                    number_limited: true
                    number_lowest_value: 100
                    product_list_adjusts_inventory: true
                    product_list_adjusts_pricing: true
                    product_list_shipping_calc: weight
                    text_characters_limited: true
                    text_lines_limited: true
                    text_max_length: 55
                    text_max_lines: 4
                    text_min_length: 1
                  display_name: string
                  id: 12
                  name: Add-a-$5-Donation1535039590-191
                  option_values:
                  - adjusters:
                      image_url: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                      price:
                        adjuster: relative
                        adjuster_value: 5
                      purchasing_disabled:
                        message: string
                        status: true
                      weight:
                        adjuster: relative
                        adjuster_value: 5
                    id: 0
                    is_default: false
                    label: Green
                    option_id: 0
                    sort_order: 0
                    value_data: {}
                  product_id: 77
                  required: true
                  sort_order: 0
                  type: date
                mpn: string
                name: Smith Journal 13
                open_graph_description: string
                open_graph_title: string
                open_graph_type: product
                open_graph_use_image: true
                open_graph_use_meta_description: true
                open_graph_use_product_name: true
                option_set_display: string
                option_set_id: 0
                options:
                - config:
                    checkbox_label: string
                    checked_by_default: true
                    date_earliest_value: '2019-08-24T00:00:00+00:00'
                    date_latest_value: '2019-08-24T00:00:00+00:00'
                    date_limit_mode: range
                    date_limited: true
                    default_value: string
                    file_max_size: 5
                    file_types_mode: specific
                    file_types_other:
                    - pdf
                    file_types_supported:
                    - images, documents, other
                    number_highest_value: 0
                    number_integers_only: false
                    number_limit_mode: lowest
                    number_limited: true
                    number_lowest_value: 100
                    product_list_adjusts_inventory: true
                    product_list_adjusts_pricing: true
                    product_list_shipping_calc: weight
                    text_characters_limited: true
                    text_lines_limited: true
                    text_max_length: 55
                    text_max_lines: 4
                    text_min_length: 1
                  display_name: Add-a-$5-Donation1535042499-187
                  id: 55
                  option_values:
                    id: 0
                    is_default: false
                    label: Green
                    sort_order: 0
                    value_data: {}
                  product_id: 4
                  sort_order: 1
                  type: radio_buttons
                order_quantity_maximum: 0
                order_quantity_minimum: 0
                page_title: string
                preorder_message: string
                preorder_release_date: '2019-08-24T14:15:22+00:00'
                price: 0
                price_hidden_label: string
                product_tax_code: string
                related_products:
                - 0
                retail_price: 0
                reviews_count: 4
                reviews_rating_sum: 3.2
                sale_price: 0
                search_keywords: string
                sku: SM-13
                sort_order: -2147483648
                tax_class_id: 0
                total_sold: 80
                type: physical
                upc: string
                variants:
                - bin_picking_number: string
                  calculated_price: 0
                  calculated_weight: 0
                  cost_price: 0
                  depth: 0
                  fixed_cost_shipping_price: 0
                  gtin: 12345678905
                  height: 0
                  id: 0
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: true
                  mpn: string
                  option_values:
                  - id: 146
                    label: Beige
                    option_display_name: Color
                    option_id: 151
                  price: 0
                  product_id: 0
                  purchasing_disabled: true
                  purchasing_disabled_message: string
                  retail_price: 0
                  sale_price: 0
                  sku: string
                  sku_id: 0
                  upc: string
                  weight: 0
                  width: 0
                videos:
                - description: string
                  id: 0
                  length: string
                  product_id: 0
                  sort_order: -2147483648
                  title: string
                  type: youtube
                  video_id: string
                view_count: 0
                warranty: string
                weight: 0
                width: 0
          description: ''
        '201':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Created
        '207':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  errors:
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: "Multi-status. The product information was updated successfully,\
            \ but the inventory data failed to update. \n\nVerify that the inventory-related\
            \ updates are well-formed and correct; for example, that they donʼt result\
            \ in negative stock levels. Then consider updating the inventory data\
            \ again."
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Product` was in conflict with another product. This is caused
            by: duplicate unique values, such as name or SKU; a missing category,
            brand, or tax_class with which the product is being associated; or a conflicting
            bulk pricing rule.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Product` was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.

            '
      summary: Update a Product
      tags:
      - Products
      x-codegen-request-body-name: product
  /catalog/products/{product_id}/bulk-pricing-rules:
    get:
      description: Returns a list of *Bulk Pricing Rules*. Optional parameters can
        be passed in.
      operationId: getBulkPricingRules
      parameters:
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - amount: 1
                  id: 83
                  quantity_max: 3
                  quantity_min: 1
                  type: price
                - amount: 1
                  id: 84
                  quantity_max: 0
                  quantity_min: 4
                  type: price
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 2
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      allOf:
                      - properties:
                          id:
                            description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                            readOnly: true
                            type: integer
                        required:
                        - id
                        type: object
                      - $ref: '#/components/schemas/bulkPricingRule_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The parent resource was not found.

            '
      summary: Get All Bulk Pricing Rules
      tags:
      - Product Bulk Pricing Rules
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Bulk Pricing Rule*.


        **Required Fields**

        - quantity_min

        - quantity_max

        - type

        - amount


        **Read-Only Fields**

        - id


        **Limits**

        - 50 bulk pricing rule per product limit.'
      operationId: createBulkPricingRule
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkPricingRule_Full'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  amount: 1
                  id: 83
                  quantity_max: 3
                  quantity_min: 1
                  type: price
                meta: {}
              schema:
                properties:
                  data:
                    allOf:
                    - properties:
                        id:
                          description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                          readOnly: true
                          type: integer
                      required:
                      - id
                      type: object
                    - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    description: Empty meta object; may be used later.
                    title: Meta
                    type: object
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The parent resource was not found.

            '
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `BulkPricingRule` was in conflict with another bulk pricing
            rule. This is the result of quantity range overlapping with existing bulk
            pricing rules.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `BulkPricingRule` was not valid. This is the result of
            missing required fields, or of invalid data. See the response for more
            details.

            '
      summary: Create a Bulk Pricing Rule
      tags:
      - Product Bulk Pricing Rules
      x-codegen-request-body-name: BulkPricingRule
  /catalog/products/{product_id}/bulk-pricing-rules/{bulk_pricing_rule_id}:
    delete:
      description: Deletes a *Bulk Pricing Rule*.
      operationId: deleteBulkPricingRuleById
      parameters:
      - description: 'The ID of the `BulkPricingRule`.

          '
        in: path
        name: bulk_pricing_rule_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource or parent resource was not found.

            '
      summary: Delete a Bulk Pricing Rule
      tags:
      - Product Bulk Pricing Rules
    get:
      description: Returns a single *Bulk Pricing Rule*. Optional parameters can be
        passed in.
      operationId: getBulkPricingRuleById
      parameters:
      - description: 'The ID of the `BulkPricingRule`.

          '
        in: path
        name: bulk_pricing_rule_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  amount: 1
                  id: 83
                  quantity_max: 3
                  quantity_min: 1
                  type: price
                meta: {}
              schema:
                properties:
                  data:
                    allOf:
                    - properties:
                        id:
                          description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                          readOnly: true
                          type: integer
                      required:
                      - id
                      type: object
                    - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource or parent resource was not found.

            '
      summary: Get a Bulk Pricing Rule
      tags:
      - Product Bulk Pricing Rules
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/BulkPricingRuleIdParam'
    put:
      description: 'Updates a *Bulk Pricing Rule*.


        **Required Fields**

        * none


        **Read-Only Fields**

        - id'
      operationId: updateBulkPricingRule
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `BulkPricingRule`.

          '
        in: path
        name: bulk_pricing_rule_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - properties:
                  id:
                    description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                    readOnly: true
                    type: integer
                required:
                - id
                type: object
              - $ref: '#/components/schemas/bulkPricingRule_Full'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  amount: 1
                  id: 83
                  quantity_max: 3
                  quantity_min: 1
                  type: price
                meta: {}
              schema:
                properties:
                  data:
                    description: Common BulkPricingRule properties
                    properties:
                      amount:
                        description: 'The discount can be a fixed dollar amount or
                          a percentage. For a fixed dollar amount enter it as an integer
                          and the response will return as an integer. For percentage
                          enter the amount as the percentage divided by 100 using
                          string format. For example 10% percent would be “.10”. The
                          response will return as an integer.

                          Required in /POST.'
                        type: integer
                      id:
                        description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                        readOnly: true
                        type: integer
                      quantity_max:
                        description: 'The maximum inclusive quantity of a product
                          to satisfy this rule. Must be greater than the `quantity_min`
                          value – unless this field has a value of 0 (zero), in which
                          case there will be no maximum bound for this rule.

                          Required in /POST.'
                        example: 50
                        minimum: 0
                        type: integer
                        x-required:
                        - post
                      quantity_min:
                        description: 'The minimum inclusive quantity of a product
                          to satisfy this rule. Must be greater than or equal to zero.

                          Required in /POST.

                          '
                        example: 10
                        minimum: 0
                        type: integer
                        x-required:
                        - post
                      type:
                        description: 'The type of adjustment that is made. Values:
                          `price` - the adjustment amount per product; `percent` -
                          the adjustment as a percentage of the original price; `fixed`
                          - the adjusted absolute price of the product.

                          Required in /POST.'
                        enum:
                        - price
                        - percent
                        - fixed
                        example: price
                        type: string
                        x-required:
                        - post
                    required:
                    - amount
                    - quantity_max
                    - quantity_min
                    - type
                    title: Bulk Pricing Rule
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource or parent resource was not found.

            '
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `BulkPricingRule` was in conflict with another bulk pricing
            rule. This is the result of quantity range overlapping with existing bulk
            pricing rules.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `BulkPricingRule` was not valid. This is the result of
            missing required fields, or of invalid data. See the response for more
            details.

            '
      summary: Update a Bulk Pricing Rule
      tags:
      - Product Bulk Pricing Rules
      x-codegen-request-body-name: BulkPricingRule
  /catalog/products/{product_id}/complex-rules:
    get:
      description: Returns a list of all product *Complex Rules*. Optional parameters
        may be passed in.
      operationId: getComplexRules
      parameters:
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - conditions:
                  - combination_id: 0
                    modifier_id: 221
                    modifier_value_id: 175
                    rule_id: 82
                    variant_id: 1
                  enabled: true
                  id: 82
                  image_url: ''
                  price_adjuster:
                    adjuster: relative
                    adjuster_value: 8
                  product_id: 195
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  purchasing_hidden: false
                  sort_order: 0
                  stop: false
                  weight_adjuster: {}
                - conditions:
                  - combination_id: 0
                    modifier_id: 221
                    modifier_value_id: 174
                    rule_id: 83
                    variant_id: 1
                  enabled: true
                  id: 83
                  image_url: ''
                  price_adjuster: {}
                  product_id: 195
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  purchasing_hidden: false
                  sort_order: 1
                  stop: false
                  weight_adjuster:
                    adjuster: relative
                    adjuster_value: 3
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 2
                    total_pages: 1
              schema:
                description: Complex Rule Response
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/complexRule_Base'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Complex Rule Collection Response
                type: object
          description: ''
      summary: Get Complex Rules
      tags:
      - Product Complex Rules
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a product *Complex Rule*.


        **Required Fields**

        - modifier_id

        - modifier_value_id

        - modifier_value_id

        - variant_id


        **Read-Only Fields**

        - complex_rule_id

        - conditions_id

        - rule_id

        - combination_id

        - id'
      operationId: createComplexRule
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              description: Common ComplexRule properties.
              properties:
                conditions:
                  items:
                    description: Complex rules may return with conditions that apply
                      to one or more variants, or with a single modifier value (if
                      the rules were created using the v2 API or the control panel).
                      Complex rules created or updated in the v3 API must have conditions
                      that either reference multiple `modifier_value_id`’s, or else
                      reference a `modifier_value_id` and a `variant_id`.
                    properties:
                      combination_id:
                        description: '(READ-ONLY:) The unique numeric ID of the SKU
                          (v2 API), or Combination, with which the rule condition
                          is associated. This is to maintain cross-compatibility between
                          v2 and v3.

                          '
                        type: integer
                      id:
                        description: 'The unique numeric ID of the rule condition;
                          increments sequentially. Read-Only

                          '
                        example: 3
                        nullable: true
                        type: integer
                      modifier_id:
                        description: 'The unique numeric ID of the modifier with which
                          the rule condition is associated.

                          Required in /POST.'
                        example: 55
                        nullable: true
                        type: integer
                      modifier_value_id:
                        description: 'The unique numeric ID of the modifier value
                          with which the rule condition is associated.

                          Required in /POST.'
                        example: 256
                        nullable: true
                        type: integer
                      rule_id:
                        description: 'The unique numeric ID of the rule with which
                          the condition is associated.

                          Read-Only'
                        example: 4
                        nullable: true
                        type: integer
                      variant_id:
                        description: 'The unique numeric ID of the variant with which
                          the rule condition is associated.

                          Required in /POST.'
                        example: 1
                        nullable: true
                        type: integer
                    required:
                    - modifier_id
                    - modifier_value_id
                    - variant_id
                    title: Complex Rule Condition
                    type: object
                  type: array
                enabled:
                  description: 'Flag for determining whether the rule is to be used
                    when adjusting a product''s price, weight, image, or availabilty.

                    '
                  example: true
                  type: boolean
                image_url:
                  description: 'The URL for an image displayed on the storefront when
                    the conditions are applied. Limit of 8MB per file.

                    '
                  example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                  type: string
                price_adjuster:
                  description: Adjuster for Complex Rules.
                  properties:
                    adjuster:
                      description: 'The type of adjuster for either the price or the
                        weight of the variant, when the modifier value is selected
                        on the storefront.

                        '
                      enum:
                      - relative
                      - percentage
                      nullable: true
                      type: string
                    adjuster_value:
                      description: 'The numeric amount by which the adjuster will
                        change either the price or the weight of the variant, when
                        the modifier value is selected on the storefront.

                        '
                      example: 5
                      type: number
                  title: Adjuster
                  type: object
                product_id:
                  description: 'The unique numeric ID of the product with which the
                    rule is associated; increments sequentially.

                    '
                  example: 67
                  nullable: true
                  type: integer
                  x-required:
                  - post
                  - put
                purchasing_disabled:
                  description: 'Flag for determining whether the rule should disable
                    purchasing of a product when the conditions are applied.

                    '
                  type: boolean
                purchasing_disabled_message:
                  description: 'Message displayed on the storefront when a rule disables
                    the purchasing of a product.

                    '
                  example: This product is not available at this time.
                  maxLength: 255
                  minLength: 0
                  type: string
                purchasing_hidden:
                  description: 'Flag for determining whether the rule should hide
                    purchasing of a product when the conditions are applied.

                    '
                  type: boolean
                sort_order:
                  description: 'The priority to give this rule when making adjustments
                    to the product properties.

                    '
                  example: 0
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                stop:
                  description: 'Flag for determining whether other rules should not
                    be applied after this rule has been applied.

                    '
                  type: boolean
                weight_adjuster:
                  description: Adjuster for Complex Rules.
                  properties:
                    adjuster:
                      description: 'The type of adjuster for either the price or the
                        weight of the variant, when the modifier value is selected
                        on the storefront.

                        '
                      enum:
                      - relative
                      - percentage
                      nullable: true
                      type: string
                    adjuster_value:
                      description: 'The numeric amount by which the adjuster will
                        change either the price or the weight of the variant, when
                        the modifier value is selected on the storefront.

                        '
                      example: 5
                      type: number
                  title: Adjuster
                  type: object
              title: Complex Rule
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: Common ComplexRule properties.
                    properties:
                      conditions:
                        items:
                          description: Complex rules may return with conditions that
                            apply to one or more variants, or with a single modifier
                            value (if the rules were created using the v2 API or the
                            control panel). Complex rules created or updated in the
                            v3 API must have conditions that either reference multiple
                            `modifier_value_id`’s, or else reference a `modifier_value_id`
                            and a `variant_id`.
                          properties:
                            combination_id:
                              description: '(READ-ONLY:) The unique numeric ID of
                                the SKU (v2 API), or Combination, with which the rule
                                condition is associated. This is to maintain cross-compatibility
                                between v2 and v3.

                                '
                              type: integer
                            id:
                              description: 'The unique numeric ID of the rule condition;
                                increments sequentially. Read-Only

                                '
                              example: 3
                              nullable: true
                              type: integer
                            modifier_id:
                              description: 'The unique numeric ID of the modifier
                                with which the rule condition is associated.

                                Required in /POST.'
                              example: 55
                              nullable: true
                              type: integer
                            modifier_value_id:
                              description: 'The unique numeric ID of the modifier
                                value with which the rule condition is associated.

                                Required in /POST.'
                              example: 256
                              nullable: true
                              type: integer
                            rule_id:
                              description: 'The unique numeric ID of the rule with
                                which the condition is associated.

                                Read-Only'
                              example: 4
                              nullable: true
                              type: integer
                            variant_id:
                              description: 'The unique numeric ID of the variant with
                                which the rule condition is associated.

                                Required in /POST.'
                              example: 1
                              nullable: true
                              type: integer
                          required:
                          - modifier_id
                          - modifier_value_id
                          - variant_id
                          title: Complex Rule Condition
                          type: object
                        type: array
                      enabled:
                        description: 'Flag for determining whether the rule is to
                          be used when adjusting a product''s price, weight, image,
                          or availabilty.

                          '
                        example: true
                        type: boolean
                      id:
                        description: 'The unique numeric ID of the rule; increments
                          sequentially.

                          Read-Only'
                        example: 5
                        type: integer
                      image_url:
                        description: 'The URL for an image displayed on the storefront
                          when the conditions are applied. Limit of 8MB per file.

                          '
                        example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                        type: string
                      price_adjuster:
                        description: Adjuster for Complex Rules.
                        properties:
                          adjuster:
                            description: 'The type of adjuster for either the price
                              or the weight of the variant, when the modifier value
                              is selected on the storefront.

                              '
                            enum:
                            - relative
                            - percentage
                            nullable: true
                            type: string
                          adjuster_value:
                            description: 'The numeric amount by which the adjuster
                              will change either the price or the weight of the variant,
                              when the modifier value is selected on the storefront.

                              '
                            example: 5
                            type: number
                        title: Adjuster
                        type: object
                      product_id:
                        description: 'The unique numeric ID of the product with which
                          the rule is associated; increments sequentially.

                          '
                        example: 67
                        nullable: true
                        type: integer
                        x-required:
                        - post
                        - put
                      purchasing_disabled:
                        description: 'Flag for determining whether the rule should
                          disable purchasing of a product when the conditions are
                          applied.

                          '
                        type: boolean
                      purchasing_disabled_message:
                        description: 'Message displayed on the storefront when a rule
                          disables the purchasing of a product.

                          '
                        example: This product is not available at this time.
                        maxLength: 255
                        minLength: 0
                        type: string
                      purchasing_hidden:
                        description: 'Flag for determining whether the rule should
                          hide purchasing of a product when the conditions are applied.

                          '
                        type: boolean
                      sort_order:
                        description: 'The priority to give this rule when making adjustments
                          to the product properties.

                          '
                        example: 0
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                      stop:
                        description: 'Flag for determining whether other rules should
                          not be applied after this rule has been applied.

                          '
                        type: boolean
                      weight_adjuster:
                        description: Adjuster for Complex Rules.
                        properties:
                          adjuster:
                            description: 'The type of adjuster for either the price
                              or the weight of the variant, when the modifier value
                              is selected on the storefront.

                              '
                            enum:
                            - relative
                            - percentage
                            nullable: true
                            type: string
                          adjuster_value:
                            description: 'The numeric amount by which the adjuster
                              will change either the price or the weight of the variant,
                              when the modifier value is selected on the storefront.

                              '
                            example: 5
                            type: number
                        title: Adjuster
                        type: object
                    title: Complex Rule
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `ComplexRule` was in conflict with another `ComplexRule`.
            This is the result of duplicate conditions.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `ComplexRule` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Complex Rule
      tags:
      - Product Complex Rules
      x-codegen-request-body-name: ComplexRule
  /catalog/products/{product_id}/complex-rules/{complex_rule_id}:
    delete:
      description: Deletes a product *Complex Rule*.
      operationId: deleteComplexRuleById
      parameters:
      - description: 'The ID of the `ComplexRule`.

          '
        in: path
        name: complex_rule_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Complex Rule
      tags:
      - Product Complex Rules
    get:
      description: Returns a single *Complex Rule*. Optional parameters can be passed
        in.
      operationId: getComplexRuleById
      parameters:
      - description: 'The ID of the `ComplexRule`.

          '
        in: path
        name: complex_rule_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: Common ComplexRule properties.
                    properties:
                      conditions:
                        items:
                          description: Complex rules may return with conditions that
                            apply to one or more variants, or with a single modifier
                            value (if the rules were created using the v2 API or the
                            control panel). Complex rules created or updated in the
                            v3 API must have conditions that either reference multiple
                            `modifier_value_id`’s, or else reference a `modifier_value_id`
                            and a `variant_id`.
                          properties:
                            combination_id:
                              description: '(READ-ONLY:) The unique numeric ID of
                                the SKU (v2 API), or Combination, with which the rule
                                condition is associated. This is to maintain cross-compatibility
                                between v2 and v3.

                                '
                              type: integer
                            id:
                              description: 'The unique numeric ID of the rule condition;
                                increments sequentially. Read-Only

                                '
                              example: 3
                              type: integer
                            modifier_id:
                              description: 'The unique numeric ID of the modifier
                                with which the rule condition is associated.

                                Required in /POST.'
                              example: 55
                              type: integer
                            modifier_value_id:
                              description: 'The unique numeric ID of the modifier
                                value with which the rule condition is associated.

                                Required in /POST.'
                              example: 256
                              type: integer
                            rule_id:
                              description: 'The unique numeric ID of the rule with
                                which the condition is associated.

                                Read-Only'
                              example: 4
                              type: integer
                            variant_id:
                              description: 'The unique numeric ID of the variant with
                                which the rule condition is associated.

                                Required in /POST.'
                              example: 1
                              type: integer
                          required:
                          - modifier_id
                          - modifier_value_id
                          - variant_id
                          title: Complex Rule Condition
                          type: object
                        type: array
                      enabled:
                        description: 'Flag for determining whether the rule is to
                          be used when adjusting a product''s price, weight, image,
                          or availabilty.

                          '
                        example: true
                        type: boolean
                      id:
                        description: 'The unique numeric ID of the rule; increments
                          sequentially.

                          Read-Only'
                        example: 5
                        type: integer
                      image_url:
                        description: 'The URL for an image displayed on the storefront
                          when the conditions are applied. Limit of 8MB per file.

                          '
                        example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                        type: string
                      price_adjuster:
                        description: Adjuster for Complex Rules.
                        properties:
                          adjuster:
                            description: 'The type of adjuster for either the price
                              or the weight of the variant, when the modifier value
                              is selected on the storefront.

                              '
                            enum:
                            - relative
                            - percentage
                            type: string
                          adjuster_value:
                            description: 'The numeric amount by which the adjuster
                              will change either the price or the weight of the variant,
                              when the modifier value is selected on the storefront.

                              '
                            example: 5
                            type: number
                        title: Adjuster
                        type: object
                      product_id:
                        description: 'The unique numeric ID of the product with which
                          the rule is associated; increments sequentially.

                          '
                        example: 67
                        type: integer
                        x-required:
                        - post
                        - put
                      purchasing_disabled:
                        description: 'Flag for determining whether the rule should
                          disable purchasing of a product when the conditions are
                          applied.

                          '
                        type: boolean
                      purchasing_disabled_message:
                        description: 'Message displayed on the storefront when a rule
                          disables the purchasing of a product.

                          '
                        example: This product is not available at this time.
                        maxLength: 255
                        minLength: 0
                        type: string
                      purchasing_hidden:
                        description: 'Flag for determining whether the rule should
                          hide purchasing of a product when the conditions are applied.

                          '
                        type: boolean
                      sort_order:
                        description: 'The priority to give this rule when making adjustments
                          to the product properties.

                          '
                        example: 0
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                      stop:
                        description: 'Flag for determining whether other rules should
                          not be applied after this rule has been applied.

                          '
                        type: boolean
                      weight_adjuster:
                        description: Adjuster for Complex Rules.
                        properties:
                          adjuster:
                            description: 'The type of adjuster for either the price
                              or the weight of the variant, when the modifier value
                              is selected on the storefront.

                              '
                            enum:
                            - relative
                            - percentage
                            type: string
                          adjuster_value:
                            description: 'The numeric amount by which the adjuster
                              will change either the price or the weight of the variant,
                              when the modifier value is selected on the storefront.

                              '
                            example: 5
                            type: number
                        title: Adjuster
                        type: object
                    title: Complex Rule
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Complex Rule
      tags:
      - Product Complex Rules
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/ComplexRuleIdParam'
    put:
      description: 'Updates a *Complex Rule*.


        **Required Fields**:

        - none


        **Read-Only Fields**:

        - complex_rule_id

        - conditions_id

        - rule_id

        - combination_id

        - id'
      operationId: updateComplexRule
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `ComplexRule`.

          '
        in: path
        name: complex_rule_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              description: Common ComplexRule properties.
              properties:
                conditions:
                  items:
                    description: Complex rules may return with conditions that apply
                      to one or more variants, or with a single modifier value (if
                      the rules were created using the v2 API or the control panel).
                      Complex rules created or updated in the v3 API must have conditions
                      that either reference multiple `modifier_value_id`’s, or else
                      reference a `modifier_value_id` and a `variant_id`.
                    properties:
                      combination_id:
                        description: '(READ-ONLY:) The unique numeric ID of the SKU
                          (v2 API), or Combination, with which the rule condition
                          is associated. This is to maintain cross-compatibility between
                          v2 and v3.

                          '
                        type: integer
                      id:
                        description: 'The unique numeric ID of the rule condition;
                          increments sequentially. Read-Only

                          '
                        example: 3
                        nullable: true
                        type: integer
                      modifier_id:
                        description: 'The unique numeric ID of the modifier with which
                          the rule condition is associated.

                          Required in /POST.'
                        example: 55
                        nullable: true
                        type: integer
                      modifier_value_id:
                        description: 'The unique numeric ID of the modifier value
                          with which the rule condition is associated.

                          Required in /POST.'
                        example: 256
                        nullable: true
                        type: integer
                      rule_id:
                        description: 'The unique numeric ID of the rule with which
                          the condition is associated.

                          Read-Only'
                        example: 4
                        nullable: true
                        type: integer
                      variant_id:
                        description: 'The unique numeric ID of the variant with which
                          the rule condition is associated.

                          Required in /POST.'
                        example: 1
                        nullable: true
                        type: integer
                    required:
                    - modifier_id
                    - modifier_value_id
                    - variant_id
                    title: Complex Rule Condition
                    type: object
                  type: array
                enabled:
                  description: 'Flag for determining whether the rule is to be used
                    when adjusting a product''s price, weight, image, or availabilty.

                    '
                  example: true
                  type: boolean
                id:
                  description: 'The unique numeric ID of the rule; increments sequentially.

                    Read-Only'
                  example: 5
                  type: integer
                image_url:
                  description: 'The URL for an image displayed on the storefront when
                    the conditions are applied. Limit of 8MB per file.

                    '
                  example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                  type: string
                price_adjuster:
                  description: Adjuster for Complex Rules.
                  properties:
                    adjuster:
                      description: 'The type of adjuster for either the price or the
                        weight of the variant, when the modifier value is selected
                        on the storefront.

                        '
                      enum:
                      - relative
                      - percentage
                      nullable: true
                      type: string
                    adjuster_value:
                      description: 'The numeric amount by which the adjuster will
                        change either the price or the weight of the variant, when
                        the modifier value is selected on the storefront.

                        '
                      example: 5
                      type: number
                  title: Adjuster
                  type: object
                product_id:
                  description: 'The unique numeric ID of the product with which the
                    rule is associated; increments sequentially.

                    '
                  example: 67
                  nullable: true
                  type: integer
                  x-required:
                  - post
                  - put
                purchasing_disabled:
                  description: 'Flag for determining whether the rule should disable
                    purchasing of a product when the conditions are applied.

                    '
                  type: boolean
                purchasing_disabled_message:
                  description: 'Message displayed on the storefront when a rule disables
                    the purchasing of a product.

                    '
                  example: This product is not available at this time.
                  maxLength: 255
                  minLength: 0
                  type: string
                purchasing_hidden:
                  description: 'Flag for determining whether the rule should hide
                    purchasing of a product when the conditions are applied.

                    '
                  type: boolean
                sort_order:
                  description: 'The priority to give this rule when making adjustments
                    to the product properties.

                    '
                  example: 0
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                stop:
                  description: 'Flag for determining whether other rules should not
                    be applied after this rule has been applied.

                    '
                  type: boolean
                weight_adjuster:
                  description: Adjuster for Complex Rules.
                  properties:
                    adjuster:
                      description: 'The type of adjuster for either the price or the
                        weight of the variant, when the modifier value is selected
                        on the storefront.

                        '
                      enum:
                      - relative
                      - percentage
                      nullable: true
                      type: string
                    adjuster_value:
                      description: 'The numeric amount by which the adjuster will
                        change either the price or the weight of the variant, when
                        the modifier value is selected on the storefront.

                        '
                      example: 5
                      type: number
                  title: Adjuster
                  type: object
              title: Complex Rule
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: Common ComplexRule properties.
                    properties:
                      conditions:
                        items:
                          description: Complex rules may return with conditions that
                            apply to one or more variants, or with a single modifier
                            value (if the rules were created using the v2 API or the
                            control panel). Complex rules created or updated in the
                            v3 API must have conditions that either reference multiple
                            `modifier_value_id`’s, or else reference a `modifier_value_id`
                            and a `variant_id`.
                          properties:
                            combination_id:
                              description: '(READ-ONLY:) The unique numeric ID of
                                the SKU (v2 API), or Combination, with which the rule
                                condition is associated. This is to maintain cross-compatibility
                                between v2 and v3.

                                '
                              type: integer
                            id:
                              description: 'The unique numeric ID of the rule condition;
                                increments sequentially. Read-Only

                                '
                              example: 3
                              type: integer
                            modifier_id:
                              description: 'The unique numeric ID of the modifier
                                with which the rule condition is associated.

                                Required in /POST.'
                              example: 55
                              type: integer
                            modifier_value_id:
                              description: 'The unique numeric ID of the modifier
                                value with which the rule condition is associated.

                                Required in /POST.'
                              example: 256
                              type: integer
                            rule_id:
                              description: 'The unique numeric ID of the rule with
                                which the condition is associated.

                                Read-Only'
                              example: 4
                              type: integer
                            variant_id:
                              description: 'The unique numeric ID of the variant with
                                which the rule condition is associated.

                                Required in /POST.'
                              example: 1
                              type: integer
                          required:
                          - modifier_id
                          - modifier_value_id
                          - variant_id
                          title: Complex Rule Condition
                          type: object
                        type: array
                      enabled:
                        description: 'Flag for determining whether the rule is to
                          be used when adjusting a product''s price, weight, image,
                          or availabilty.

                          '
                        example: true
                        type: boolean
                      id:
                        description: 'The unique numeric ID of the rule; increments
                          sequentially.

                          Read-Only'
                        example: 5
                        type: integer
                      image_url:
                        description: 'The URL for an image displayed on the storefront
                          when the conditions are applied. Limit of 8MB per file.

                          '
                        example: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                        type: string
                      price_adjuster:
                        description: Adjuster for Complex Rules.
                        properties:
                          adjuster:
                            description: 'The type of adjuster for either the price
                              or the weight of the variant, when the modifier value
                              is selected on the storefront.

                              '
                            enum:
                            - relative
                            - percentage
                            type: string
                          adjuster_value:
                            description: 'The numeric amount by which the adjuster
                              will change either the price or the weight of the variant,
                              when the modifier value is selected on the storefront.

                              '
                            example: 5
                            type: number
                        title: Adjuster
                        type: object
                      product_id:
                        description: 'The unique numeric ID of the product with which
                          the rule is associated; increments sequentially.

                          '
                        example: 67
                        type: integer
                        x-required:
                        - post
                        - put
                      purchasing_disabled:
                        description: 'Flag for determining whether the rule should
                          disable purchasing of a product when the conditions are
                          applied.

                          '
                        type: boolean
                      purchasing_disabled_message:
                        description: 'Message displayed on the storefront when a rule
                          disables the purchasing of a product.

                          '
                        example: This product is not available at this time.
                        maxLength: 255
                        minLength: 0
                        type: string
                      purchasing_hidden:
                        description: 'Flag for determining whether the rule should
                          hide purchasing of a product when the conditions are applied.

                          '
                        type: boolean
                      sort_order:
                        description: 'The priority to give this rule when making adjustments
                          to the product properties.

                          '
                        example: 0
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                      stop:
                        description: 'Flag for determining whether other rules should
                          not be applied after this rule has been applied.

                          '
                        type: boolean
                      weight_adjuster:
                        description: Adjuster for Complex Rules.
                        properties:
                          adjuster:
                            description: 'The type of adjuster for either the price
                              or the weight of the variant, when the modifier value
                              is selected on the storefront.

                              '
                            enum:
                            - relative
                            - percentage
                            type: string
                          adjuster_value:
                            description: 'The numeric amount by which the adjuster
                              will change either the price or the weight of the variant,
                              when the modifier value is selected on the storefront.

                              '
                            example: 5
                            type: number
                        title: Adjuster
                        type: object
                    title: Complex Rule
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `ComplexRule` was in conflict with another `ComplexRule`.
            This is the result of duplicate conditions.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `ComplexRule` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Complex Rule
      tags:
      - Product Complex Rules
      x-codegen-request-body-name: ComplexRule
  /catalog/products/{product_id}/custom-fields:
    get:
      description: Returns a list of product *Custom Fields*. Optional parameters
        can be passed in.
      operationId: getCustomFields
      parameters:
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - id: 1
                  name: Release year
                  value: '1987'
                meta:
                  pagination:
                    count: 1
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                      next: ?page=1&limit=50
                      previous: ?page=1&limit=50
                    per_page: 50
                    total: 1
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      description: Gets custom fields associated with a product. These
                        allow you to specify additional information that will appear
                        on the product’s page, such as a book’s ISBN or a DVD’s release
                        date.
                      properties:
                        id:
                          description: 'The unique numeric ID of the custom field;
                            increments sequentially.

                            Read-Only'
                          example: 6
                          minimum: 1
                          type: integer
                        name:
                          description: 'The name of the field, shown on the storefront,
                            orders, etc. Required for /POST

                            '
                          example: ISBN
                          maxLength: 250
                          minLength: 1
                          type: string
                          x-required:
                          - post
                        value:
                          description: 'The name of the field, shown on the storefront,
                            orders, etc. Required for /POST

                            '
                          example: '1234567890123'
                          maxLength: 250
                          minLength: 1
                          type: string
                          x-required:
                          - post
                      required:
                      - name
                      - value
                      title: Custom Field
                      type: object
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: ''
      summary: Get Custom Fields
      tags:
      - Product Custom Fields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Custom Field*.


        **Required Fields:**

        - name

        - value


        **Read-Only:**

        - id


        **Limits**

        - 200 custom fields per product limit.

        - 255 characters per custom field limit.'
      operationId: createCustomField
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              description: Gets custom fields associated with a product. These allow
                you to specify additional information that will appear on the product’s
                page, such as a book’s ISBN or a DVD’s release date.
              properties:
                name:
                  description: 'The name of the field, shown on the storefront, orders,
                    etc. Required for /POST

                    '
                  example: ISBN
                  maxLength: 250
                  minLength: 1
                  type: string
                  x-required:
                  - post
                value:
                  description: 'The name of the field, shown on the storefront, orders,
                    etc. Required for /POST

                    '
                  example: '1234567890123'
                  maxLength: 250
                  minLength: 1
                  type: string
                  x-required:
                  - post
              required:
              - name
              - value
              title: Custom Field
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  id: 2
                  name: Release Year
                  value: '1976'
                meta: {}
              schema:
                properties:
                  data:
                    description: Gets custom fields associated with a product. These
                      allow you to specify additional information that will appear
                      on the product’s page, such as a book’s ISBN or a DVD’s release
                      date.
                    properties:
                      id:
                        description: 'The unique numeric ID of the custom field; increments
                          sequentially.

                          Read-Only'
                        example: 6
                        minimum: 1
                        type: integer
                      name:
                        description: 'The name of the field, shown on the storefront,
                          orders, etc. Required for /POST

                          '
                        example: ISBN
                        maxLength: 250
                        minLength: 1
                        type: string
                        x-required:
                        - post
                      value:
                        description: 'The name of the field, shown on the storefront,
                          orders, etc. Required for /POST

                          '
                        example: '1234567890123'
                        maxLength: 250
                        minLength: 1
                        type: string
                        x-required:
                        - post
                    required:
                    - name
                    - value
                    title: Custom Field
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The parent resource was not found.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `CustomField` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Custom Fields
      tags:
      - Product Custom Fields
      x-codegen-request-body-name: CustomField
  /catalog/products/{product_id}/custom-fields/{custom_field_id}:
    delete:
      description: Deletes a product *Custom Field*.
      operationId: deleteCustomFieldById
      parameters:
      - description: 'The ID of the `CustomField`.

          '
        in: path
        name: custom_field_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: '`204 No Content`. Action has been enacted and no further information
            is to be supplied. `null` is returned.'
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Delete a Custom Field
      tags:
      - Product Custom Fields
    get:
      description: Returns a single *Custom Field*. Optional parameters can be passed
        in.
      operationId: getCustomFieldById
      parameters:
      - description: 'The ID of the `CustomField`.

          '
        in: path
        name: custom_field_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  id: 2
                  name: Release Year
                  value: '1976'
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productCustomField_Base'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Custom Field
      tags:
      - Product Custom Fields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/CustomFieldIdParam'
    put:
      description: 'Updates a *Custom Field*.


        **Required Fields**

        - none


        **Read-Only**

        - id'
      operationId: updateCustomField
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `CustomField`.

          '
        in: path
        name: custom_field_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              description: Gets custom fields associated with a product. These allow
                you to specify additional information that will appear on the product’s
                page, such as a book’s ISBN or a DVD’s release date.
              properties:
                id:
                  description: 'The unique numeric ID of the custom field; increments
                    sequentially.

                    Read-Only'
                  example: 6
                  minimum: 1
                  type: integer
                name:
                  description: 'The name of the field, shown on the storefront, orders,
                    etc. Required for /POST

                    '
                  example: ISBN
                  maxLength: 250
                  minLength: 1
                  type: string
                  x-required:
                  - post
                value:
                  description: 'The name of the field, shown on the storefront, orders,
                    etc. Required for /POST

                    '
                  example: '1234567890123'
                  maxLength: 250
                  minLength: 1
                  type: string
                  x-required:
                  - post
              required:
              - name
              - value
              title: Custom Field
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  id: 2
                  name: Release Year
                  value: '1976'
                meta: {}
              schema:
                properties:
                  data:
                    description: Gets custom fields associated with a product. These
                      allow you to specify additional information that will appear
                      on the product’s page, such as a book’s ISBN or a DVD’s release
                      date.
                    properties:
                      id:
                        description: 'The unique numeric ID of the custom field; increments
                          sequentially.

                          Read-Only'
                        example: 6
                        minimum: 1
                        type: integer
                      name:
                        description: 'The name of the field, shown on the storefront,
                          orders, etc. Required for /POST

                          '
                        example: ISBN
                        maxLength: 250
                        minLength: 1
                        type: string
                        x-required:
                        - post
                      value:
                        description: 'The name of the field, shown on the storefront,
                          orders, etc. Required for /POST

                          '
                        example: '1234567890123'
                        maxLength: 250
                        minLength: 1
                        type: string
                        x-required:
                        - post
                    required:
                    - name
                    - value
                    title: Custom Field
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `CustomField` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Custom Field
      tags:
      - Product Custom Fields
      x-codegen-request-body-name: CustomField
  /catalog/products/{product_id}/images:
    get:
      description: Returns a list of *Product Images*. Optional parameters can be
        passed in.
      operationId: getProductImages
      parameters:
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - date_modified: '2018-08-15T14:48:31+00:00'
                  description: ''
                  id: 382
                  image_file: a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg
                  is_thumbnail: true
                  product_id: 158
                  sort_order: 0
                  url_standard: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2
                  url_thumbnail: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2
                  url_tiny: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2
                  url_zoom: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2
                - date_modified: '2018-08-15T14:48:31+00:00'
                  description: ''
                  id: 383
                  image_file: k/050/foglinenbeigestripetowel2b_1024x1024__16082__46564.jpg
                  is_thumbnail: false
                  product_id: 158
                  sort_order: 0
                  url_standard: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.560.850.jpg?c=2
                  url_thumbnail: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.330.500.jpg?c=2
                  url_tiny: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.66.100.jpg?c=2
                  url_zoom: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.1280.1280.jpg?c=2
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 2
                    total_pages: 1
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    items:
                      allOf:
                      - $ref: '#/components/schemas/productImage_Full'
                      title: Product Image
                      type: object
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Product Image Collection Response
                type: object
          description: ''
        '204':
          content: {}
          description: 'There are not any images on this product.

            '
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The product ID does not exist.

            '
      summary: Get All Product Images
      tags:
      - Product Images
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: "Creates a *Product Image*.\n\n **Required Fields**\n- `image_file`,\
        \ or\n- `image_url`\n\n**Usage Notes**\n- `image_url` - `255` character limit\n\
        - For file uploads, use the `multipart/form-data` media type\n- Only one image\
        \ at a time can be created\n- Supported image file types are BMP, GIF, JPEG,\
        \ PNG, WBMP, XBM, and WEBP."
      operationId: createProductImage
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common ProductImage properties.
                properties:
                  date_modified:
                    description: 'The date on which the product image was modified.

                      '
                    format: date-time
                    type: string
                  description:
                    description: 'The description for the image.

                      '
                    type: string
                  image_file:
                    description: 'The local path to the original image file uploaded
                      to BigCommerce.

                      A `multipart/form-data` media type.'
                    type: string
                  is_thumbnail:
                    description: 'Flag for identifying whether the image is used as
                      the product''s thumbnail.

                      '
                    type: boolean
                  product_id:
                    description: 'The unique numeric identifier for the product with
                      which the image is associated.

                      '
                    type: integer
                  sort_order:
                    description: 'The order in which the image will be displayed on
                      the product page. Higher integers give the image a lower priority.
                      When updating, if the image is given a lower priority, all images
                      with a `sort_order` the same as or greater than the image''s
                      new `sort_order` value will have their `sort_order`s reordered.

                      '
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  url_standard:
                    description: 'The standard URL for this image. By default, this
                      is used for product-page images.

                      '
                    readOnly: true
                    type: string
                  url_thumbnail:
                    description: 'The thumbnail URL for this image. By default, this
                      is the image size used on the category page and in side panels.

                      '
                    readOnly: true
                    type: string
                  url_tiny:
                    description: 'The tiny URL for this image. By default, this is
                      the image size used for thumbnails beneath the product image
                      on a product page.

                      '
                    readOnly: true
                    type: string
                  url_zoom:
                    description: 'The zoom URL for this image. By default, this is
                      used as the zoom image on product pages when zoom images are
                      enabled.

                      '
                    readOnly: true
                    type: string
                title: Product Image Base
                type: object
              - properties:
                  image_file:
                    description: 'Must be sent as a multipart/form-data field in the
                      request body. Limit of 1MB per file.

                      '
                    type: string
                  image_url:
                    description: 'Must be a fully qualified URL path, including protocol.
                      Limit of 8MB per file.

                      '
                    type: string
                type: object
              description: The model for a POST to create an image on a product.
              title: Product Image Post
          multipart/form-data:
            schema:
              allOf:
              - description: Common ProductImage properties.
                properties:
                  date_modified:
                    description: 'The date on which the product image was modified.

                      '
                    format: date-time
                    type: string
                  description:
                    description: 'The description for the image.

                      '
                    type: string
                  id:
                    description: 'The unique numeric ID of the image; increments sequentially.

                      '
                    type: integer
                  image_file:
                    description: 'The local path to the original image file uploaded
                      to BigCommerce.

                      A `multipart/form-data` media type.'
                    type: string
                  is_thumbnail:
                    description: 'Flag for identifying whether the image is used as
                      the product''s thumbnail.

                      '
                    type: boolean
                  product_id:
                    description: 'The unique numeric identifier for the product with
                      which the image is associated.

                      '
                    type: integer
                  sort_order:
                    description: 'The order in which the image will be displayed on
                      the product page. Higher integers give the image a lower priority.
                      When updating, if the image is given a lower priority, all images
                      with a `sort_order` the same as or greater than the image''s
                      new `sort_order` value will have their `sort_order`s reordered.

                      '
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  url_standard:
                    description: 'The standard URL for this image. By default, this
                      is used for product-page images.

                      '
                    readOnly: true
                    type: string
                  url_thumbnail:
                    description: 'The thumbnail URL for this image. By default, this
                      is the image size used on the category page and in side panels.

                      '
                    readOnly: true
                    type: string
                  url_tiny:
                    description: 'The tiny URL for this image. By default, this is
                      the image size used for thumbnails beneath the product image
                      on a product page.

                      '
                    readOnly: true
                    type: string
                  url_zoom:
                    description: 'The zoom URL for this image. By default, this is
                      used as the zoom image on product pages when zoom images are
                      enabled.

                      '
                    readOnly: true
                    type: string
                title: Product Image Base
                type: object
              - properties:
                  image_file:
                    description: 'Must be sent as a multipart/form-data field in the
                      request body. Limit of 1MB per file.

                      '
                    type: string
                  image_url:
                    description: 'Must be a fully qualified URL path, including protocol.
                      Limit of 8MB per file.

                      '
                    type: string
                type: object
              description: The model for a POST to create an image on a product.
              title: Product Image Post
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_modified: '2018-09-13T15:57:07+00:00'
                  description: ''
                  id: 485
                  image_file: o/381/product-image__98178.png
                  is_thumbnail: false
                  product_id: 158
                  sort_order: 1
                  url_standard: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2
                  url_thumbnail: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2
                  url_tiny: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2
                  url_zoom: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2
                meta: {}
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    allOf:
                    - description: Common ProductImage properties.
                      properties:
                        date_modified:
                          description: 'The date on which the product image was modified.

                            '
                          format: date-time
                          type: string
                        description:
                          description: 'The description for the image.

                            '
                          type: string
                        id:
                          description: 'The unique numeric ID of the image; increments
                            sequentially.

                            '
                          type: integer
                        image_file:
                          description: 'The local path to the original image file
                            uploaded to BigCommerce.


                            A `multipart/form-data` media type.'
                          type: string
                        is_thumbnail:
                          description: 'Flag for identifying whether the image is
                            used as the product''s thumbnail.

                            '
                          type: boolean
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the image is associated.

                            '
                          type: integer
                        sort_order:
                          description: 'The order in which the image will be displayed
                            on the product page. Higher integers give the image a
                            lower priority. When updating, if the image is given a
                            lower priority, all images with a `sort_order` the same
                            as or greater than the image''s new `sort_order` value
                            will have their `sort_order`s reordered.

                            '
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                        url_standard:
                          description: 'The standard URL for this image. By default,
                            this is used for product-page images.

                            '
                          readOnly: true
                          type: string
                        url_thumbnail:
                          description: 'The thumbnail URL for this image. By default,
                            this is the image size used on the category page and in
                            side panels.

                            '
                          readOnly: true
                          type: string
                        url_tiny:
                          description: 'The tiny URL for this image. By default, this
                            is the image size used for thumbnails beneath the product
                            image on a product page.

                            '
                          readOnly: true
                          type: string
                        url_zoom:
                          description: 'The zoom URL for this image. By default, this
                            is used as the zoom image on product pages when zoom images
                            are enabled.

                            '
                          readOnly: true
                          type: string
                      title: Product Image Base
                      type: object
                    - properties:
                        date_modified:
                          description: 'The date on which the product image was modified.

                            '
                          format: date-time
                          type: string
                        id:
                          description: 'The unique numeric ID of the image; increments
                            sequentially.

                            '
                          type: integer
                        image_file:
                          description: 'The local path to the original image file
                            uploaded to BigCommerce. Use image_url when creating a
                            product.

                            A `multipart/form-data` media type.'
                          type: string
                        image_url:
                          description: 'Publically available URL.

                            Use the image_url when creating a product.'
                          example: https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg
                          type: string
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the image is associated.

                            '
                          type: integer
                        url_standard:
                          description: 'The standard URL for this image. By default,
                            this is used for product-page images.

                            '
                          readOnly: true
                          type: string
                        url_thumbnail:
                          description: 'The thumbnail URL for this image. By default,
                            this is the image size used on the category page and in
                            side panels.

                            '
                          readOnly: true
                          type: string
                        url_tiny:
                          description: 'The tiny URL for this image. By default, this
                            is the image size used for thumbnails beneath the product
                            image on a product page.

                            '
                          readOnly: true
                          type: string
                        url_zoom:
                          description: 'The zoom URL for this image. By default, this
                            is used as the zoom image on product pages when zoom images
                            are enabled.

                            '
                          readOnly: true
                          type: string
                      type: object
                    title: Product Image
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Image Response
                type: object
          description: Success
        '400':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Bad Request. The requested resource could not be downloaded
            and may be invalid. Possible reasons include malformed request syntax
            or the file host blocking requests.
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The product ID does not exist.

            '
        '422':
          content:
            application/json:
              example:
                status: 422
                title: image_url must be present if uploading by url
                type: /api-docs/getting-started/api-status-codes
              schema:
                description: ''
                properties:
                  status:
                    type: number
                  title:
                    minLength: 1
                    type: string
                  type:
                    minLength: 1
                    type: string
                required:
                - status
                - title
                - type
                type: object
          description: "Unprocessable Entity. \n\nMay occur if the `Content-Type`\
            \ header is set to `multipart/form-data` rather than `application/json`\
            \ when creating a product image using `image_url`."
      summary: Create a Product Image
      tags:
      - Product Images
      x-codegen-request-body-name: productImage
  /catalog/products/{product_id}/images/{image_id}:
    delete:
      description: Deletes a *Product Image*.
      operationId: deleteProductImage
      parameters:
      - description: 'The ID of the `Image` that is being operated on.

          '
        in: path
        name: image_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product Image
      tags:
      - Product Images
    get:
      description: Returns a single *Product Image*. Optional parameters can be passed
        in.
      operationId: getProductImageById
      parameters:
      - description: 'The ID of the `Image` that is being operated on.

          '
        in: path
        name: image_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_modified: '2018-09-13T15:57:07+00:00'
                  description: ''
                  id: 485
                  image_file: o/381/product-image__98178.png
                  is_thumbnail: false
                  product_id: 158
                  sort_order: 1
                  url_standard: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2
                  url_thumbnail: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2
                  url_tiny: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2
                  url_zoom: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2
                meta: {}
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    $ref: '#/components/schemas/productImage_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Image Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Image
      tags:
      - Product Images
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/ImageIdParam'
    put:
      description: 'Updates a *Product Image*.


        **Usage Notes**

        - `image_url` - `255` character limit

        - For file uploads, send a POST request using the `multipart/form-data` media
        type'
      operationId: updateProductImage
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Image` that is being operated on.

          '
        in: path
        name: image_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productImage_Put'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_modified: '2018-09-13T15:57:07+00:00'
                  description: ''
                  id: 485
                  image_file: o/381/product-image__98178.png
                  is_thumbnail: false
                  product_id: 158
                  sort_order: 1
                  url_standard: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2
                  url_thumbnail: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2
                  url_tiny: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2
                  url_zoom: https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2
                meta: {}
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    allOf:
                    - description: Common ProductImage properties.
                      properties:
                        date_modified:
                          description: 'The date on which the product image was modified.

                            '
                          format: date-time
                          type: string
                        description:
                          description: 'The description for the image.

                            '
                          type: string
                        id:
                          description: 'The unique numeric ID of the image; increments
                            sequentially.

                            '
                          type: integer
                        image_file:
                          description: 'The local path to the original image file
                            uploaded to BigCommerce.

                            '
                          type: string
                        is_thumbnail:
                          description: 'Flag for identifying whether the image is
                            used as the product''s thumbnail.

                            '
                          type: boolean
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the image is associated.

                            '
                          type: integer
                        sort_order:
                          description: 'The order in which the image will be displayed
                            on the product page. Higher integers give the image a
                            lower priority. When updating, if the image is given a
                            lower priority, all images with a `sort_order` the same
                            as or greater than the image''s new `sort_order` value
                            will have their `sort_order`s reordered.

                            '
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                        url_standard:
                          description: 'The standard URL for this image. By default,
                            this is used for product-page images.

                            '
                          readOnly: true
                          type: string
                        url_thumbnail:
                          description: 'The thumbnail URL for this image. By default,
                            this is the image size used on the category page and in
                            side panels.

                            '
                          readOnly: true
                          type: string
                        url_tiny:
                          description: 'The tiny URL for this image. By default, this
                            is the image size used for thumbnails beneath the product
                            image on a product page.

                            '
                          readOnly: true
                          type: string
                        url_zoom:
                          description: 'The zoom URL for this image. By default, this
                            is used as the zoom image on product pages when zoom images
                            are enabled.

                            '
                          readOnly: true
                          type: string
                      title: Product Image Base
                      type: object
                    - properties:
                        date_modified:
                          description: 'The date on which the product image was modified.

                            '
                          format: date-time
                          type: string
                        id:
                          description: 'The unique numeric ID of the image; increments
                            sequentially.

                            '
                          type: integer
                        image_file:
                          description: 'The local path to the original image file
                            uploaded to BigCommerce. Use image_url when creating a
                            product.

                            '
                          type: string
                        image_url:
                          description: 'Publically available URL.

                            Use the image_url when creating a product.'
                          example: https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg
                          type: string
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the image is associated.

                            '
                          type: integer
                        url_standard:
                          description: 'The standard URL for this image. By default,
                            this is used for product-page images.

                            '
                          readOnly: true
                          type: string
                        url_thumbnail:
                          description: 'The thumbnail URL for this image. By default,
                            this is the image size used on the category page and in
                            side panels.

                            '
                          readOnly: true
                          type: string
                        url_tiny:
                          description: 'The tiny URL for this image. By default, this
                            is the image size used for thumbnails beneath the product
                            image on a product page.

                            '
                          readOnly: true
                          type: string
                        url_zoom:
                          description: 'The zoom URL for this image. By default, this
                            is used as the zoom image on product pages when zoom images
                            are enabled.

                            '
                          readOnly: true
                          type: string
                      type: object
                    title: Product Image
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Image Response
                type: object
          description: ''
        '201':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Created
        '400':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Bad Request. The requested resource could not be downloaded
            and may be invalid. Possible reasons include malformed request syntax
            or the file host blocking requests.
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update a Product Image
      tags:
      - Product Images
      x-codegen-request-body-name: productImage
  /catalog/products/{product_id}/metafields:
    get:
      description: Returns a list of *Product Metafields*. Optional parameters can
        be passed in.
      operationId: getProductMetafieldsByProductId
      parameters:
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: 'Filter based on a metafield''s key.

          '
        in: query
        name: key
        schema:
          type: string
      - description: Filter based on a metafield's namespace.
        in: query
        name: namespace
        schema:
          type: string
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - date_created: '1973-01-20T21:34:57.903Z'
                  date_modified: '1990-12-30T00:29:23.515Z'
                  description: Location in the warehouse
                  id: 6
                  key: Location
                  namespace: Warehouse Locations
                  permission_set: app_only
                  resource_id: 111
                  resource_type: product
                  value: 4HG
                - date_created: '1973-01-20T21:34:57.903Z'
                  date_modified: '1990-12-30T00:29:23.515Z'
                  description: Location in the warehouse
                  id: 7
                  key: Sublocation
                  namespace: Warehouse Locations
                  permission_set: read
                  resource_id: 111
                  resource_type: product
                  value: 4HG
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 2
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Meta Field Collection Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get All Product Metafields
      tags:
      - Product Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Product Metafield*.


        **Required Fields:**

        * permission_set

        * namespace

        * key

        * value


        **Read-Only Fields**

        * id


        **Note:** The maxiumum number of metafields allowed on each order, product,
        category, variant, or brand is 250 per client ID. For more information, see
        [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits)
        in the Help Center.'
      operationId: createProductMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                  description: Where products are located
                  id: 8
                  key: location_id
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_id: 158
                  resource_type: product
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: The HTTP status code.
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was in conflict with another `Metafield`.
            This can be the result of duplicate unique key combinations of the app''s
            client id, namespace, key, resource_type, and resource_id.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Product Metafield
      tags:
      - Product Metafields
  /catalog/products/{product_id}/metafields/{metafield_id}:
    delete:
      description: Deletes a *Product Metafield*.
      operationId: deleteProductMetafieldById
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product Metafield
      tags:
      - Product Metafields
    get:
      description: Returns a single *Product Metafield*. Optional parameters can be
        passed in.
      operationId: getProductMetafieldByProductId
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: product
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Metafield
      tags:
      - Product Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/MetafieldIdParam'
    put:
      description: "Updates a *Product Metafield*.\n\n**Required Fields**\n* none\n\
        \n**Read-Only Fields**\n* id\n* These fields can only be modified using the\
        \ API account that created the metafield:\n\t* `namespace`\n\t* `key`\n\t\
        * `permission_set`\n\t* `value`\n\n**Usage Notes**\n* Attempting to modify\
        \ the `namespace`, `key`, `permission_set`, or `value` field using an API\
        \ account different from the one used to create those metafields will result\
        \ in a `403` error message. "
      operationId: updateProductMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: product
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update a Product Metafield
      tags:
      - Product Metafields
      x-codegen-request-body-name: Metafield
  /catalog/products/{product_id}/modifiers:
    get:
      description: Returns a list of all *Product Modifiers*. Optional parameters
        can be passed in.
      operationId: getModifiers
      parameters:
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - config:
                    checkbox_label: $5 for insurance
                    checked_by_default: false
                  display_name: Insurace
                  id: 206
                  name: Insurance
                  option_values:
                  - adjusters:
                      image_url: ''
                      price: {}
                      purchasing_disabled:
                        message: ''
                        status: false
                      weight: {}
                    id: 183
                    is_default: false
                    label: 'Yes'
                    option_id: 206
                    sort_order: 0
                    value_data:
                      checked_value: true
                  - adjusters:
                      image_url: ''
                      price: {}
                      purchasing_disabled:
                        message: ''
                        status: false
                      weight: {}
                    id: 184
                    is_default: true
                    label: 'No'
                    option_id: 206
                    sort_order: 1
                    value_data:
                      checked_value: false
                  product_id: 158
                  required: true
                  type: checkbox
                meta:
                  pagination:
                    count: 1
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 1
                    total_pages: 1
              schema:
                description: Modifier Collection Response return for /GET All Modifiers.
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/productModifier_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Modifier Collection Response
                type: object
          description: ''
      summary: Get All Product Modifiers
      tags:
      - Product Modifiers
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Product Modifier*.


        **Required Fields**

        * `required`

        * `display_name`

        * `type`


        **Read-Only Fields**

        * `id`


        **Notes**

        It takes two separate requests to create a new checkbox modifier with option
        values. Perform a request to create a modifier, then perform a second request
        to update option values.'
      operationId: createModifier
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Modifier properties.
                properties:
                  config:
                    description: The values for option config can vary based on the
                      Modifier created.
                    properties:
                      checkbox_label:
                        description: '(checkbox) Label displayed for the checkbox
                          option.

                          '
                        type: string
                      checked_by_default:
                        description: '(checkbox) Flag for setting the checkbox to
                          be checked by default.

                          '
                        type: boolean
                      date_earliest_value:
                        description: '(date) The earliest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        example: '2018-08-31T00:00:00+00:00'
                        format: date-time
                        type: string
                      date_latest_value:
                        description: '(date) The latest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        example: '2019-01-01T00:00:00+00:00'
                        format: date-time
                        type: string
                      date_limit_mode:
                        description: '(date) The type of limit that is allowed to
                          be entered on a date option.

                          '
                        enum:
                        - earliest
                        - range
                        - latest
                        example: range
                        type: string
                      date_limited:
                        description: '(date) Flag to limit the dates allowed to be
                          entered on a date option.

                          '
                        type: boolean
                      default_value:
                        description: '(date, text, multi_line_text, numbers_only_text)
                          The default value. Shown on a date option as an ISO-8601–formatted
                          string, or on a text option as a string.

                          '
                        type: string
                      file_max_size:
                        description: '(file) The maximum size for a file that can
                          be used with the file upload option. This will still be
                          limited by the server.

                          '
                        example: 5
                        type: integer
                      file_types_mode:
                        description: '(file) The kind of restriction on the file types
                          that can be uploaded with a file upload option. Values:
                          `specific` - restricts uploads to particular file types;
                          `all` - allows all file types.

                          '
                        enum:
                        - specific
                        - all
                        example: specific
                        type: string
                      file_types_other:
                        description: '(file) A list of other file types allowed with
                          the file upload option.

                          '
                        example:
                        - pdf
                        - txt
                        items:
                          type: string
                        type: array
                      file_types_supported:
                        description: "(file) The type of files allowed to be uploaded\
                          \ if the `file_type_option` is set to `specific`. Values:\n\
                          \  `images` - Allows upload of image MIME types (`bmp`,\
                          \ `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`,\
                          \ `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of\
                          \ document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`,\
                          \ `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`,\
                          \ `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n \
                          \ `other` - Allows file types defined in the `file_types_other`\
                          \ array.\n"
                        example:
                        - images
                        - documents
                        - other
                        items:
                          type: string
                        type: array
                      number_highest_value:
                        description: '(numbers_only_text) The highest allowed value
                          for a number option if `number_limited` is true.

                          '
                        type: number
                      number_integers_only:
                        description: '(numbers_only_text) Flag to limit the input
                          on a number option to whole numbers only.

                          '
                        example: false
                        type: boolean
                      number_limit_mode:
                        description: '(numbers_only_text) The type of limit on values
                          entered for a number option.

                          '
                        enum:
                        - lowest
                        - highest
                        - range
                        example: lowest
                        type: string
                      number_limited:
                        description: '(numbers_only_text) Flag to limit the value
                          of a number option.

                          '
                        example: true
                        type: boolean
                      number_lowest_value:
                        description: '(numbers_only_text) The lowest allowed value
                          for a number option if `number_limited` is true.

                          '
                        example: 100
                        type: number
                      product_list_adjusts_inventory:
                        description: '(product_list, product_list_with_images) Flag
                          for automatically adjusting inventory on a product included
                          in the list.

                          '
                        type: boolean
                      product_list_adjusts_pricing:
                        description: '(product_list, product_list_with_images) Flag
                          to add the optional product''s price to the main product''s
                          price.

                          '
                        type: boolean
                      product_list_shipping_calc:
                        description: '(product_list, product_list_with_images) How
                          to factor the optional product''s weight and package dimensions
                          into the shipping quote. Values: `none` - don''t adjust;
                          `weight` - use shipping weight only; `package` - use weight
                          and dimensions.

                          '
                        enum:
                        - none
                        - weight
                        - package
                        example: weight
                        type: string
                      text_characters_limited:
                        description: '(text, multi_line_text) Flag to validate the
                          length of a text or multi-line text input.

                          '
                        type: boolean
                      text_lines_limited:
                        description: '(multi_line_text) Flag to validate the maximum
                          number of lines allowed on a multi-line text input.

                          '
                        example: true
                        type: boolean
                      text_max_length:
                        description: '(text, multi_line_text) The maximum length allowed
                          for a text or multi line text option.

                          '
                        example: 55
                        type: integer
                      text_max_lines:
                        description: '(multi_line_text) The maximum number of lines
                          allowed on a multi-line text input.

                          '
                        example: 4
                        type: integer
                      text_min_length:
                        description: '(text, multi_line_text) The minimum length allowed
                          for a text or multi-line text option.

                          '
                        example: 1
                        type: integer
                    title: Option Config
                    type: object
                  option_values:
                    items:
                      allOf:
                      - allOf:
                        - description: Common Option Value properties.
                          properties:
                            is_default:
                              description: 'The flag for preselecting a value as the
                                default on the storefront. This field is not supported
                                for swatch options/modifiers.

                                '
                              example: false
                              type: boolean
                            label:
                              description: 'The text display identifying the value
                                on the storefront. Required in a /POST.

                                '
                              example: Green
                              type: string
                              x-required:
                              - post
                            sort_order:
                              description: 'The order in which the value will be displayed
                                on the product page. Required in a /POST.

                                '
                              example: 0
                              maximum: 2147483647
                              minimum: -2147483648
                              type: integer
                              x-required:
                              - post
                            value_data:
                              description: 'Extra data describing the value, based
                                on the type of option or modifier with which the value
                                is associated. The `swatch` type option can accept
                                an array of `colors`, with up to three hexidecimal
                                color keys; or an `image_url`, which is a full image
                                URL path including protocol. The `product list` type
                                option requires a `product_id`. The `checkbox` type
                                option requires a boolean flag, called `checked_value`,
                                to determine which value is considered to be the checked
                                state.

                                '
                              properties: {}
                              type: object
                          required:
                          - label
                          - sort_order
                          title: Option Value Base
                          type: object
                        - properties:
                            adjusters:
                              properties:
                                image_url:
                                  description: 'The URL for an image displayed on
                                    the storefront when the modifier value is selected.Limit
                                    of 8MB per file.

                                    '
                                  example: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                                  type: string
                                price:
                                  description: Adjuster for Complex Rules.
                                  properties:
                                    adjuster:
                                      description: 'The type of adjuster for either
                                        the price or the weight of the variant, when
                                        the modifier value is selected on the storefront.

                                        '
                                      enum:
                                      - relative
                                      - percentage
                                      type: string
                                      x-nullable: true
                                    adjuster_value:
                                      description: 'The numeric amount by which the
                                        adjuster will change either the price or the
                                        weight of the variant, when the modifier value
                                        is selected on the storefront.

                                        '
                                      example: 5
                                      type: number
                                  title: Adjuster
                                  type: object
                                purchasing_disabled:
                                  properties:
                                    message:
                                      description: 'The message displayed on the storefront
                                        when the purchasing disabled status is `true`.

                                        '
                                      type: string
                                    status:
                                      description: 'Flag for whether the modifier
                                        value disables purchasing when selected on
                                        the storefront. This can be used for temporarily
                                        disabling a particular modifier value.

                                        '
                                      type: boolean
                                  type: object
                                weight:
                                  description: Adjuster for Complex Rules.
                                  properties:
                                    adjuster:
                                      description: 'The type of adjuster for either
                                        the price or the weight of the variant, when
                                        the modifier value is selected on the storefront.

                                        '
                                      enum:
                                      - relative
                                      - percentage
                                      type: string
                                      x-nullable: true
                                    adjuster_value:
                                      description: 'The numeric amount by which the
                                        adjuster will change either the price or the
                                        weight of the variant, when the modifier value
                                        is selected on the storefront.

                                        '
                                      example: 5
                                      type: number
                                  title: Adjuster
                                  type: object
                              type: object
                          type: object
                        title: Modifier Value Base
                        type: object
                      - properties:
                          id:
                            description: 'The unique numeric ID of the value; increments
                              sequentially.

                              '
                            type: integer
                        type: object
                      description: 'Part of Modifier Value Response '
                      title: Modifier Value
                      type: object
                    type: array
                  required:
                    description: 'Whether or not this modifer is required or not at
                      checkout. Required in a /POST.

                      '
                    type: boolean
                    x-required:
                    - post
                  sort_order:
                    description: The order the modifiers display on the product detail
                      page.
                    type: integer
                  type:
                    description: 'BigCommerce API, which determines how it will display
                      on the storefront. Acceptable values: `date`, `checkbox`, `file`,
                      `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`,
                      `rectangles`, `dropdown`, `product_list`, `product_list_with_images`,
                      `swatch`. Required in a /POST.

                      '
                    enum:
                    - date
                    - checkbox
                    - file
                    - text
                    - multi_line_text
                    - numbers_only_text
                    - radio_buttons
                    - rectangles
                    - dropdown
                    - product_list
                    - product_list_with_images
                    - swatch
                    type: string
                    x-required:
                    - post
                required:
                - required
                - type
                title: Modifier Base
                type: object
              - properties:
                  display_name:
                    description: 'The name of the option shown on the storefront.

                      '
                    example: Donation
                    type: string
                    x-required:
                    - post
                required:
                - display_name
                type: object
              description: The model for a POST to create a modifier on a product.
              title: Modifier Post
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    allOf:
                    - description: Common Modifier properties.
                      properties:
                        config:
                          description: The values for option config can vary based
                            on the Modifier created.
                          properties:
                            checkbox_label:
                              description: '(checkbox) Label displayed for the checkbox
                                option.

                                '
                              type: string
                            checked_by_default:
                              description: '(checkbox) Flag for setting the checkbox
                                to be checked by default.

                                '
                              type: boolean
                            date_earliest_value:
                              description: '(date) The earliest date allowed to be
                                entered on the date option, as an ISO-8601 formatted
                                string.

                                '
                              format: date
                              type: string
                            date_latest_value:
                              description: '(date) The latest date allowed to be entered
                                on the date option, as an ISO-8601 formatted string.

                                '
                              format: date
                              type: string
                            date_limit_mode:
                              description: '(date) The type of limit that is allowed
                                to be entered on a date option.

                                '
                              enum:
                              - earliest
                              - range
                              - latest
                              example: range
                              type: string
                            date_limited:
                              description: '(date) Flag to limit the dates allowed
                                to be entered on a date option.

                                '
                              type: boolean
                            default_value:
                              description: '(date, text, multi_line_text, numbers_only_text)
                                The default value. Shown on a date option as an ISO-8601–formatted
                                string, or on a text option as a string.

                                '
                              type: string
                            file_max_size:
                              description: '(file) The maximum size for a file that
                                can be used with the file upload option. This will
                                still be limited by the server.

                                '
                              example: 5
                              type: integer
                            file_types_mode:
                              description: '(file) The kind of restriction on the
                                file types that can be uploaded with a file upload
                                option. Values: `specific` - restricts uploads to
                                particular file types; `all` - allows all file types.

                                '
                              enum:
                              - specific
                              - all
                              example: specific
                              type: string
                            file_types_other:
                              description: '(file) A list of other file types allowed
                                with the file upload option.

                                '
                              items:
                                example: pdf
                                type: string
                              type: array
                            file_types_supported:
                              description: "(file) The type of files allowed to be\
                                \ uploaded if the `file_type_option` is set to `specific`.\
                                \ Values:\n  `images` - Allows upload of image MIME\
                                \ types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`,\
                                \ `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents`\
                                \ - Allows upload of document MIME types (`txt`, `pdf`,\
                                \ `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`,\
                                \ `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`,\
                                \ `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows\
                                \ file types defined in the `file_types_other` array.\n"
                              items:
                                example: images, documents, other
                                type: string
                              type: array
                            number_highest_value:
                              description: '(numbers_only_text) The highest allowed
                                value for a number option if `number_limited` is true.

                                '
                              type: number
                            number_integers_only:
                              description: '(numbers_only_text) Flag to limit the
                                input on a number option to whole numbers only.

                                '
                              example: false
                              type: boolean
                            number_limit_mode:
                              description: '(numbers_only_text) The type of limit
                                on values entered for a number option.

                                '
                              enum:
                              - lowest
                              - highest
                              - range
                              example: lowest
                              type: string
                            number_limited:
                              description: '(numbers_only_text) Flag to limit the
                                value of a number option.

                                '
                              example: true
                              type: boolean
                            number_lowest_value:
                              description: '(numbers_only_text) The lowest allowed
                                value for a number option if `number_limited` is true.

                                '
                              example: 100
                              type: number
                            product_list_adjusts_inventory:
                              description: '(product_list, product_list_with_images)
                                Flag for automatically adjusting inventory on a product
                                included in the list.

                                '
                              type: boolean
                            product_list_adjusts_pricing:
                              description: '(product_list, product_list_with_images)
                                Flag to add the optional product''s price to the main
                                product''s price.

                                '
                              type: boolean
                            product_list_shipping_calc:
                              description: '(product_list, product_list_with_images)
                                How to factor the optional product''s weight and package
                                dimensions into the shipping quote. Values: `none`
                                - don''t adjust; `weight` - use shipping weight only;
                                `package` - use weight and dimensions.

                                '
                              enum:
                              - none
                              - weight
                              - package
                              example: weight
                              type: string
                            text_characters_limited:
                              description: '(text, multi_line_text) Flag to validate
                                the length of a text or multi-line text input.

                                '
                              type: boolean
                            text_lines_limited:
                              description: '(multi_line_text) Flag to validate the
                                maximum number of lines allowed on a multi-line text
                                input.

                                '
                              example: true
                              type: boolean
                            text_max_length:
                              description: '(text, multi_line_text) The maximum length
                                allowed for a text or multi line text option.

                                '
                              example: 55
                              type: integer
                            text_max_lines:
                              description: '(multi_line_text) The maximum number of
                                lines allowed on a multi-line text input.

                                '
                              example: 4
                              type: integer
                            text_min_length:
                              description: '(text, multi_line_text) The minimum length
                                allowed for a text or multi-line text option.

                                '
                              example: 1
                              type: integer
                          title: Option Config
                          type: object
                        option_values:
                          items:
                            allOf:
                            - allOf:
                              - description: Common Option Value properties.
                                properties:
                                  is_default:
                                    description: 'The flag for preselecting a value
                                      as the default on the storefront. This field
                                      is not supported for swatch options/modifiers.

                                      '
                                    example: false
                                    type: boolean
                                  label:
                                    description: 'The text display identifying the
                                      value on the storefront. Required in a /POST.

                                      '
                                    example: Green
                                    type: string
                                    x-required:
                                    - post
                                  sort_order:
                                    description: 'The order in which the value will
                                      be displayed on the product page. Required in
                                      a /POST.

                                      '
                                    example: 0
                                    maximum: 2147483647
                                    minimum: -2147483648
                                    type: integer
                                    x-required:
                                    - post
                                  value_data:
                                    description: 'Extra data describing the value,
                                      based on the type of option or modifier with
                                      which the value is associated. The `swatch`
                                      type option can accept an array of `colors`,
                                      with up to three hexidecimal color keys; or
                                      an `image_url`, which is a full image URL path
                                      including protocol. The `product list` type
                                      option requires a `product_id`. The `checkbox`
                                      type option requires a boolean flag, called
                                      `checked_value`, to determine which value is
                                      considered to be the checked state.

                                      '
                                    properties: {}
                                    type: object
                                required:
                                - label
                                - sort_order
                                title: Option Value Base
                                type: object
                              - properties:
                                  adjusters:
                                    properties:
                                      image_url:
                                        description: 'The URL for an image displayed
                                          on the storefront when the modifier value
                                          is selected.Limit of 8MB per file.

                                          '
                                        example: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                                        type: string
                                      price:
                                        description: Adjuster for Complex Rules.
                                        properties:
                                          adjuster:
                                            description: 'The type of adjuster for
                                              either the price or the weight of the
                                              variant, when the modifier value is
                                              selected on the storefront.

                                              '
                                            enum:
                                            - relative
                                            - percentage
                                            type: string
                                            x-nullable: true
                                          adjuster_value:
                                            description: 'The numeric amount by which
                                              the adjuster will change either the
                                              price or the weight of the variant,
                                              when the modifier value is selected
                                              on the storefront.

                                              '
                                            example: 5
                                            type: number
                                        title: Adjuster
                                        type: object
                                      purchasing_disabled:
                                        properties:
                                          message:
                                            description: 'The message displayed on
                                              the storefront when the purchasing disabled
                                              status is `true`.

                                              '
                                            type: string
                                          status:
                                            description: 'Flag for whether the modifier
                                              value disables purchasing when selected
                                              on the storefront. This can be used
                                              for temporarily disabling a particular
                                              modifier value.

                                              '
                                            type: boolean
                                        type: object
                                      weight:
                                        description: Adjuster for Complex Rules.
                                        properties:
                                          adjuster:
                                            description: 'The type of adjuster for
                                              either the price or the weight of the
                                              variant, when the modifier value is
                                              selected on the storefront.

                                              '
                                            enum:
                                            - relative
                                            - percentage
                                            type: string
                                            x-nullable: true
                                          adjuster_value:
                                            description: 'The numeric amount by which
                                              the adjuster will change either the
                                              price or the weight of the variant,
                                              when the modifier value is selected
                                              on the storefront.

                                              '
                                            example: 5
                                            type: number
                                        title: Adjuster
                                        type: object
                                    type: object
                                type: object
                              title: Modifier Value Base
                              type: object
                            - properties:
                                id:
                                  description: 'The unique numeric ID of the value;
                                    increments sequentially.

                                    '
                                  type: integer
                              type: object
                            description: 'Part of Modifier Value Response '
                            title: Modifier Value
                            type: object
                          type: array
                        required:
                          description: 'Whether or not this modifer is required or
                            not at checkout. Required in a /POST.

                            '
                          type: boolean
                          x-required:
                          - post
                        sort_order:
                          description: The order the modifiers display on the product
                            detail page.
                          type: integer
                        type:
                          description: 'BigCommerce API, which determines how it will
                            display on the storefront. Acceptable values: `date`,
                            `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`,
                            `radio_buttons`, `rectangles`, `dropdown`, `product_list`,
                            `product_list_with_images`, `swatch`. Required in a /POST.

                            '
                          enum:
                          - date
                          - checkbox
                          - file
                          - text
                          - multi_line_text
                          - numbers_only_text
                          - radio_buttons
                          - rectangles
                          - dropdown
                          - product_list
                          - product_list_with_images
                          - swatch
                          type: string
                          x-required:
                          - post
                      required:
                      - required
                      - type
                      title: Modifier Base
                      type: object
                    - properties:
                        display_name:
                          description: 'The name of the option shown on the storefront.

                            '
                          example: Donation
                          type: string
                        id:
                          description: 'The unique numeric ID of the modifier; increments
                            sequentially.

                            '
                          example: 12
                          type: integer
                        name:
                          description: 'The unique option name. Auto-generated from
                            the display name, a timestamp, and the product ID.

                            '
                          example: Add-a-$5-Donation1535039590-191
                          type: string
                        product_id:
                          description: 'The unique numeric ID of the product to which
                            the option belongs.

                            '
                          example: 77
                          type: integer
                      type: object
                    description: Product Modifier
                    title: Modifer
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Modifier Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Modifier` was in conflict with another option. This is
            the result of duplicate unique fields, such as `name`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Modifier` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Product Modifier
      tags:
      - Product Modifiers
      x-codegen-request-body-name: Modifier
  /catalog/products/{product_id}/modifiers/{modifier_id}:
    delete:
      description: Deletes a *Product Modifier*.
      operationId: deleteModifierById
      parameters:
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Modifier
      tags:
      - Product Modifiers
    get:
      description: Returns a single *Product Modifier*. Optional parameters can be
        passed in.
      operationId: getModifierById
      parameters:
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productModifier_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Modifier Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Modifier
      tags:
      - Product Modifiers
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/ModifierIdParam'
    put:
      description: Updates a *Product Modifier*.
      operationId: updateModifier
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Modifier properties.
                properties:
                  config:
                    description: The values for option config can vary based on the
                      Modifier created.
                    properties:
                      checkbox_label:
                        description: '(checkbox) Label displayed for the checkbox
                          option.

                          '
                        type: string
                      checked_by_default:
                        description: '(checkbox) Flag for setting the checkbox to
                          be checked by default.

                          '
                        type: boolean
                      date_earliest_value:
                        description: '(date) The earliest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        format: date
                        type: string
                      date_latest_value:
                        description: '(date) The latest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        format: date
                        type: string
                      date_limit_mode:
                        description: '(date) The type of limit that is allowed to
                          be entered on a date option.

                          '
                        enum:
                        - earliest
                        - range
                        - latest
                        example: range
                        type: string
                      date_limited:
                        description: '(date) Flag to limit the dates allowed to be
                          entered on a date option.

                          '
                        type: boolean
                      default_value:
                        description: '(date, text, multi_line_text, numbers_only_text)
                          The default value. Shown on a date option as an ISO-8601–formatted
                          string, or on a text option as a string.

                          '
                        type: string
                      file_max_size:
                        description: '(file) The maximum size for a file that can
                          be used with the file upload option. This will still be
                          limited by the server.

                          '
                        example: 5
                        type: integer
                      file_types_mode:
                        description: '(file) The kind of restriction on the file types
                          that can be uploaded with a file upload option. Values:
                          `specific` - restricts uploads to particular file types;
                          `all` - allows all file types.

                          '
                        enum:
                        - specific
                        - all
                        example: specific
                        type: string
                      file_types_other:
                        description: '(file) A list of other file types allowed with
                          the file upload option.

                          '
                        items:
                          example: pdf
                          type: string
                        type: array
                      file_types_supported:
                        description: "(file) The type of files allowed to be uploaded\
                          \ if the `file_type_option` is set to `specific`. Values:\n\
                          \  `images` - Allows upload of image MIME types (`bmp`,\
                          \ `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`,\
                          \ `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of\
                          \ document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`,\
                          \ `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`,\
                          \ `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n \
                          \ `other` - Allows file types defined in the `file_types_other`\
                          \ array.\n"
                        items:
                          example: images, documents, other
                          type: string
                        type: array
                      number_highest_value:
                        description: '(numbers_only_text) The highest allowed value
                          for a number option if `number_limited` is true.

                          '
                        type: number
                      number_integers_only:
                        description: '(numbers_only_text) Flag to limit the input
                          on a number option to whole numbers only.

                          '
                        example: false
                        type: boolean
                      number_limit_mode:
                        description: '(numbers_only_text) The type of limit on values
                          entered for a number option.

                          '
                        enum:
                        - lowest
                        - highest
                        - range
                        example: lowest
                        type: string
                      number_limited:
                        description: '(numbers_only_text) Flag to limit the value
                          of a number option.

                          '
                        example: true
                        type: boolean
                      number_lowest_value:
                        description: '(numbers_only_text) The lowest allowed value
                          for a number option if `number_limited` is true.

                          '
                        example: 100
                        type: number
                      product_list_adjusts_inventory:
                        description: '(product_list, product_list_with_images) Flag
                          for automatically adjusting inventory on a product included
                          in the list.

                          '
                        type: boolean
                      product_list_adjusts_pricing:
                        description: '(product_list, product_list_with_images) Flag
                          to add the optional product''s price to the main product''s
                          price.

                          '
                        type: boolean
                      product_list_shipping_calc:
                        description: '(product_list, product_list_with_images) How
                          to factor the optional product''s weight and package dimensions
                          into the shipping quote. Values: `none` - don''t adjust;
                          `weight` - use shipping weight only; `package` - use weight
                          and dimensions.

                          '
                        enum:
                        - none
                        - weight
                        - package
                        example: weight
                        type: string
                      text_characters_limited:
                        description: '(text, multi_line_text) Flag to validate the
                          length of a text or multi-line text input.

                          '
                        type: boolean
                      text_lines_limited:
                        description: '(multi_line_text) Flag to validate the maximum
                          number of lines allowed on a multi-line text input.

                          '
                        example: true
                        type: boolean
                      text_max_length:
                        description: '(text, multi_line_text) The maximum length allowed
                          for a text or multi line text option.

                          '
                        example: 55
                        type: integer
                      text_max_lines:
                        description: '(multi_line_text) The maximum number of lines
                          allowed on a multi-line text input.

                          '
                        example: 4
                        type: integer
                      text_min_length:
                        description: '(text, multi_line_text) The minimum length allowed
                          for a text or multi-line text option.

                          '
                        example: 1
                        type: integer
                    title: Option Config
                    type: object
                  option_values:
                    items:
                      description: 'Part of Modifier Value Response '
                      properties:
                        id:
                          description: 'The unique numeric ID of the value; increments
                            sequentially.

                            '
                          type: integer
                      title: Modifier Value
                      type: object
                    type: array
                  required:
                    description: 'Whether or not this modifer is required or not at
                      checkout. Required in a /POST.

                      '
                    type: boolean
                    x-required:
                    - post
                  sort_order:
                    description: The order the modifiers display on the product detail
                      page.
                    type: integer
                  type:
                    description: 'BigCommerce API, which determines how it will display
                      on the storefront. Acceptable values: `date`, `checkbox`, `file`,
                      `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`,
                      `rectangles`, `dropdown`, `product_list`, `product_list_with_images`,
                      `swatch`. Required in a /POST.

                      '
                    enum:
                    - date
                    - checkbox
                    - file
                    - text
                    - multi_line_text
                    - numbers_only_text
                    - radio_buttons
                    - rectangles
                    - dropdown
                    - product_list
                    - product_list_with_images
                    - swatch
                    type: string
                    x-required:
                    - post
                required:
                - required
                - type
                title: Modifier Base
                type: object
              description: The model for a PUT to update a modifier on a product.
              title: Modifier Put
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    allOf:
                    - description: Common Modifier properties.
                      properties:
                        config:
                          description: The values for option config can vary based
                            on the Modifier created.
                          properties:
                            checkbox_label:
                              description: '(checkbox) Label displayed for the checkbox
                                option.

                                '
                              type: string
                            checked_by_default:
                              description: '(checkbox) Flag for setting the checkbox
                                to be checked by default.

                                '
                              type: boolean
                            date_earliest_value:
                              description: '(date) The earliest date allowed to be
                                entered on the date option, as an ISO-8601 formatted
                                string.

                                '
                              format: date
                              type: string
                            date_latest_value:
                              description: '(date) The latest date allowed to be entered
                                on the date option, as an ISO-8601 formatted string.

                                '
                              format: date
                              type: string
                            date_limit_mode:
                              description: '(date) The type of limit that is allowed
                                to be entered on a date option.

                                '
                              enum:
                              - earliest
                              - range
                              - latest
                              example: range
                              type: string
                            date_limited:
                              description: '(date) Flag to limit the dates allowed
                                to be entered on a date option.

                                '
                              type: boolean
                            default_value:
                              description: '(date, text, multi_line_text, numbers_only_text)
                                The default value. Shown on a date option as an ISO-8601–formatted
                                string, or on a text option as a string.

                                '
                              type: string
                            file_max_size:
                              description: '(file) The maximum size for a file that
                                can be used with the file upload option. This will
                                still be limited by the server.

                                '
                              example: 5
                              type: integer
                            file_types_mode:
                              description: '(file) The kind of restriction on the
                                file types that can be uploaded with a file upload
                                option. Values: `specific` - restricts uploads to
                                particular file types; `all` - allows all file types.

                                '
                              enum:
                              - specific
                              - all
                              example: specific
                              type: string
                            file_types_other:
                              description: '(file) A list of other file types allowed
                                with the file upload option.

                                '
                              items:
                                example: pdf
                                type: string
                              type: array
                            file_types_supported:
                              description: "(file) The type of files allowed to be\
                                \ uploaded if the `file_type_option` is set to `specific`.\
                                \ Values:\n  `images` - Allows upload of image MIME\
                                \ types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`,\
                                \ `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents`\
                                \ - Allows upload of document MIME types (`txt`, `pdf`,\
                                \ `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`,\
                                \ `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`,\
                                \ `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows\
                                \ file types defined in the `file_types_other` array.\n"
                              items:
                                example: images, documents, other
                                type: string
                              type: array
                            number_highest_value:
                              description: '(numbers_only_text) The highest allowed
                                value for a number option if `number_limited` is true.

                                '
                              type: number
                            number_integers_only:
                              description: '(numbers_only_text) Flag to limit the
                                input on a number option to whole numbers only.

                                '
                              example: false
                              type: boolean
                            number_limit_mode:
                              description: '(numbers_only_text) The type of limit
                                on values entered for a number option.

                                '
                              enum:
                              - lowest
                              - highest
                              - range
                              example: lowest
                              type: string
                            number_limited:
                              description: '(numbers_only_text) Flag to limit the
                                value of a number option.

                                '
                              example: true
                              type: boolean
                            number_lowest_value:
                              description: '(numbers_only_text) The lowest allowed
                                value for a number option if `number_limited` is true.

                                '
                              example: 100
                              type: number
                            product_list_adjusts_inventory:
                              description: '(product_list, product_list_with_images)
                                Flag for automatically adjusting inventory on a product
                                included in the list.

                                '
                              type: boolean
                            product_list_adjusts_pricing:
                              description: '(product_list, product_list_with_images)
                                Flag to add the optional product''s price to the main
                                product''s price.

                                '
                              type: boolean
                            product_list_shipping_calc:
                              description: '(product_list, product_list_with_images)
                                How to factor the optional product''s weight and package
                                dimensions into the shipping quote. Values: `none`
                                - don''t adjust; `weight` - use shipping weight only;
                                `package` - use weight and dimensions.

                                '
                              enum:
                              - none
                              - weight
                              - package
                              example: weight
                              type: string
                            text_characters_limited:
                              description: '(text, multi_line_text) Flag to validate
                                the length of a text or multi-line text input.

                                '
                              type: boolean
                            text_lines_limited:
                              description: '(multi_line_text) Flag to validate the
                                maximum number of lines allowed on a multi-line text
                                input.

                                '
                              example: true
                              type: boolean
                            text_max_length:
                              description: '(text, multi_line_text) The maximum length
                                allowed for a text or multi line text option.

                                '
                              example: 55
                              type: integer
                            text_max_lines:
                              description: '(multi_line_text) The maximum number of
                                lines allowed on a multi-line text input.

                                '
                              example: 4
                              type: integer
                            text_min_length:
                              description: '(text, multi_line_text) The minimum length
                                allowed for a text or multi-line text option.

                                '
                              example: 1
                              type: integer
                          title: Option Config
                          type: object
                        option_values:
                          items:
                            allOf:
                            - allOf:
                              - description: Common Option Value properties.
                                properties:
                                  is_default:
                                    description: 'The flag for preselecting a value
                                      as the default on the storefront. This field
                                      is not supported for swatch options/modifiers.

                                      '
                                    example: false
                                    type: boolean
                                  label:
                                    description: 'The text display identifying the
                                      value on the storefront. Required in a /POST.

                                      '
                                    example: Green
                                    type: string
                                    x-required:
                                    - post
                                  sort_order:
                                    description: 'The order in which the value will
                                      be displayed on the product page. Required in
                                      a /POST.

                                      '
                                    example: 0
                                    maximum: 2147483647
                                    minimum: -2147483648
                                    type: integer
                                    x-required:
                                    - post
                                  value_data:
                                    description: 'Extra data describing the value,
                                      based on the type of option or modifier with
                                      which the value is associated. The `swatch`
                                      type option can accept an array of `colors`,
                                      with up to three hexidecimal color keys; or
                                      an `image_url`, which is a full image URL path
                                      including protocol. The `product list` type
                                      option requires a `product_id`. The `checkbox`
                                      type option requires a boolean flag, called
                                      `checked_value`, to determine which value is
                                      considered to be the checked state.

                                      '
                                    properties: {}
                                    type: object
                                required:
                                - label
                                - sort_order
                                title: Option Value Base
                                type: object
                              - properties:
                                  adjusters:
                                    properties:
                                      image_url:
                                        description: 'The URL for an image displayed
                                          on the storefront when the modifier value
                                          is selected.Limit of 8MB per file.

                                          '
                                        example: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                                        type: string
                                      price:
                                        description: Adjuster for Complex Rules.
                                        properties:
                                          adjuster:
                                            description: 'The type of adjuster for
                                              either the price or the weight of the
                                              variant, when the modifier value is
                                              selected on the storefront.

                                              '
                                            enum:
                                            - relative
                                            - percentage
                                            type: string
                                            x-nullable: true
                                          adjuster_value:
                                            description: 'The numeric amount by which
                                              the adjuster will change either the
                                              price or the weight of the variant,
                                              when the modifier value is selected
                                              on the storefront.

                                              '
                                            example: 5
                                            type: number
                                        title: Adjuster
                                        type: object
                                      purchasing_disabled:
                                        properties:
                                          message:
                                            description: 'The message displayed on
                                              the storefront when the purchasing disabled
                                              status is `true`.

                                              '
                                            type: string
                                          status:
                                            description: 'Flag for whether the modifier
                                              value disables purchasing when selected
                                              on the storefront. This can be used
                                              for temporarily disabling a particular
                                              modifier value.

                                              '
                                            type: boolean
                                        type: object
                                      weight:
                                        description: Adjuster for Complex Rules.
                                        properties:
                                          adjuster:
                                            description: 'The type of adjuster for
                                              either the price or the weight of the
                                              variant, when the modifier value is
                                              selected on the storefront.

                                              '
                                            enum:
                                            - relative
                                            - percentage
                                            type: string
                                            x-nullable: true
                                          adjuster_value:
                                            description: 'The numeric amount by which
                                              the adjuster will change either the
                                              price or the weight of the variant,
                                              when the modifier value is selected
                                              on the storefront.

                                              '
                                            example: 5
                                            type: number
                                        title: Adjuster
                                        type: object
                                    type: object
                                type: object
                              title: Modifier Value Base
                              type: object
                            - properties:
                                id:
                                  description: 'The unique numeric ID of the value;
                                    increments sequentially.

                                    '
                                  type: integer
                              type: object
                            description: 'Part of Modifier Value Response '
                            title: Modifier Value
                            type: object
                          type: array
                        required:
                          description: 'Whether or not this modifer is required or
                            not at checkout. Required in a /POST.

                            '
                          type: boolean
                          x-required:
                          - post
                        sort_order:
                          description: The order the modifiers display on the product
                            detail page.
                          type: integer
                        type:
                          description: 'BigCommerce API, which determines how it will
                            display on the storefront. Acceptable values: `date`,
                            `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`,
                            `radio_buttons`, `rectangles`, `dropdown`, `product_list`,
                            `product_list_with_images`, `swatch`. Required in a /POST.

                            '
                          enum:
                          - date
                          - checkbox
                          - file
                          - text
                          - multi_line_text
                          - numbers_only_text
                          - radio_buttons
                          - rectangles
                          - dropdown
                          - product_list
                          - product_list_with_images
                          - swatch
                          type: string
                          x-required:
                          - post
                      required:
                      - required
                      - type
                      title: Modifier Base
                      type: object
                    - properties:
                        display_name:
                          description: 'The name of the option shown on the storefront.

                            '
                          example: Donation
                          type: string
                        id:
                          description: 'The unique numeric ID of the modifier; increments
                            sequentially.

                            '
                          example: 12
                          type: integer
                        name:
                          description: 'The unique option name. Auto-generated from
                            the display name, a timestamp, and the product ID.

                            '
                          example: Add-a-$5-Donation1535039590-191
                          type: string
                        product_id:
                          description: 'The unique numeric ID of the product to which
                            the option belongs.

                            '
                          example: 77
                          type: integer
                      type: object
                    description: Product Modifier
                    title: Modifer
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Modifier Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Modifier` was in conflict with another modifier or option.
            This is the result of duplicate unique fields, such as `name`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Modifier` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Modifier
      tags:
      - Product Modifiers
      x-codegen-request-body-name: Modifier
  /catalog/products/{product_id}/modifiers/{modifier_id}/values:
    get:
      description: Returns a list of all product *Modifier Values*. Optional parameters
        can be passed in.
      operationId: getModifierValues
      parameters:
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - adjusters:
                    image_url: ''
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    purchasing_disabled:
                      message: ''
                      status: false
                    weight: {}
                  id: 190
                  is_default: false
                  label: 'Yes'
                  option_id: 222
                  sort_order: 0
                  value_data:
                    checked_value: true
                - adjusters:
                    image_url: ''
                    price: {}
                    purchasing_disabled:
                      message: ''
                      status: false
                    weight: {}
                  id: 191
                  is_default: true
                  label: 'No'
                  option_id: 222
                  sort_order: 1
                  value_data:
                    checked_value: false
                meta:
                  pagination:
                    count: 2
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 2
                    total_pages: 1
              schema:
                description: Returns for GET All Modifier Values on a Product
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/productModifierOptionValue_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Modifier Value Collection Response
                type: object
          description: ''
      summary: Get All Modifier Values
      tags:
      - Product Modifier Values
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/ModifierIdParam'
    post:
      description: 'Creates a *Modifier Value*.


        **Required Fields**

        * label

        * sort_order


        **Read-Only Fields**

        * id'
      operationId: createModifierValue
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - allOf:
                - description: Common Option Value properties.
                  properties:
                    is_default:
                      description: 'The flag for preselecting a value as the default
                        on the storefront. This field is not supported for swatch
                        options/modifiers.

                        '
                      example: false
                      type: boolean
                    label:
                      description: 'The text display identifying the value on the
                        storefront. Required in a /POST.

                        '
                      example: Green
                      type: string
                      x-required:
                      - post
                    sort_order:
                      description: 'The order in which the value will be displayed
                        on the product page. Required in a /POST.

                        '
                      example: 0
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      x-required:
                      - post
                    value_data:
                      description: 'Extra data describing the value, based on the
                        type of option or modifier with which the value is associated.
                        The `swatch` type option can accept an array of `colors`,
                        with up to three hexidecimal color keys; or an `image_url`,
                        which is a full image URL path including protocol. The `product
                        list` type option requires a `product_id`. The `checkbox`
                        type option requires a boolean flag, called `checked_value`,
                        to determine which value is considered to be the checked state.

                        '
                      properties: {}
                      type: object
                  required:
                  - label
                  - sort_order
                  title: Option Value Base
                  type: object
                - properties:
                    adjusters:
                      properties:
                        image_url:
                          description: 'The URL for an image displayed on the storefront
                            when the modifier value is selected.Limit of 8MB per file.

                            '
                          example: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                          type: string
                        price:
                          description: Adjuster for Complex Rules.
                          properties:
                            adjuster:
                              description: 'The type of adjuster for either the price
                                or the weight of the variant, when the modifier value
                                is selected on the storefront.

                                '
                              enum:
                              - relative
                              - percentage
                              nullable: true
                              type: string
                            adjuster_value:
                              description: 'The numeric amount by which the adjuster
                                will change either the price or the weight of the
                                variant, when the modifier value is selected on the
                                storefront.

                                '
                              example: 5
                              type: number
                          title: Adjuster
                          type: object
                        purchasing_disabled:
                          properties:
                            message:
                              description: 'The message displayed on the storefront
                                when the purchasing disabled status is `true`.

                                '
                              type: string
                            status:
                              description: 'Flag for whether the modifier value disables
                                purchasing when selected on the storefront. This can
                                be used for temporarily disabling a particular modifier
                                value.

                                '
                              type: boolean
                          type: object
                        weight:
                          description: Adjuster for Complex Rules.
                          properties:
                            adjuster:
                              description: 'The type of adjuster for either the price
                                or the weight of the variant, when the modifier value
                                is selected on the storefront.

                                '
                              enum:
                              - relative
                              - percentage
                              nullable: true
                              type: string
                            adjuster_value:
                              description: 'The numeric amount by which the adjuster
                                will change either the price or the weight of the
                                variant, when the modifier value is selected on the
                                storefront.

                                '
                              example: 5
                              type: number
                          title: Adjuster
                          type: object
                      type: object
                  type: object
                title: Modifier Value Base
              description: The model for a POST to create a modifier value on a product.
              title: Modifier Value Post
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  adjusters:
                    image_url: ''
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    purchasing_disabled:
                      message: ''
                      status: false
                    weight: {}
                  id: 190
                  is_default: false
                  label: 'Yes'
                  option_id: 222
                  sort_order: 0
                  value_data: {}
                meta: {}
              schema:
                properties:
                  data:
                    allOf:
                    - allOf:
                      - description: Common Option Value properties.
                        properties:
                          is_default:
                            description: 'The flag for preselecting a value as the
                              default on the storefront. This field is not supported
                              for swatch options/modifiers.

                              '
                            example: false
                            type: boolean
                          label:
                            description: 'The text display identifying the value on
                              the storefront. Required in a /POST.

                              '
                            example: Green
                            type: string
                            x-required:
                            - post
                          sort_order:
                            description: 'The order in which the value will be displayed
                              on the product page. Required in a /POST.

                              '
                            example: 0
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            x-required:
                            - post
                          value_data:
                            description: 'Extra data describing the value, based on
                              the type of option or modifier with which the value
                              is associated. The `swatch` type option can accept an
                              array of `colors`, with up to three hexidecimal color
                              keys; or an `image_url`, which is a full image URL path
                              including protocol. The `product list` type option requires
                              a `product_id`. The `checkbox` type option requires
                              a boolean flag, called `checked_value`, to determine
                              which value is considered to be the checked state.

                              '
                            properties: {}
                            type: object
                        required:
                        - label
                        - sort_order
                        title: Option Value Base
                        type: object
                      - properties:
                          adjusters:
                            properties:
                              image_url:
                                description: 'The URL for an image displayed on the
                                  storefront when the modifier value is selected.Limit
                                  of 8MB per file.

                                  '
                                example: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                                type: string
                              price:
                                description: Adjuster for Complex Rules.
                                properties:
                                  adjuster:
                                    description: 'The type of adjuster for either
                                      the price or the weight of the variant, when
                                      the modifier value is selected on the storefront.

                                      '
                                    enum:
                                    - relative
                                    - percentage
                                    type: string
                                    x-nullable: true
                                  adjuster_value:
                                    description: 'The numeric amount by which the
                                      adjuster will change either the price or the
                                      weight of the variant, when the modifier value
                                      is selected on the storefront.

                                      '
                                    example: 5
                                    type: number
                                title: Adjuster
                                type: object
                              purchasing_disabled:
                                properties:
                                  message:
                                    description: 'The message displayed on the storefront
                                      when the purchasing disabled status is `true`.

                                      '
                                    type: string
                                  status:
                                    description: 'Flag for whether the modifier value
                                      disables purchasing when selected on the storefront.
                                      This can be used for temporarily disabling a
                                      particular modifier value.

                                      '
                                    type: boolean
                                type: object
                              weight:
                                description: Adjuster for Complex Rules.
                                properties:
                                  adjuster:
                                    description: 'The type of adjuster for either
                                      the price or the weight of the variant, when
                                      the modifier value is selected on the storefront.

                                      '
                                    enum:
                                    - relative
                                    - percentage
                                    type: string
                                    x-nullable: true
                                  adjuster_value:
                                    description: 'The numeric amount by which the
                                      adjuster will change either the price or the
                                      weight of the variant, when the modifier value
                                      is selected on the storefront.

                                      '
                                    example: 5
                                    type: number
                                title: Adjuster
                                type: object
                            type: object
                        type: object
                      title: Modifier Value Base
                      type: object
                    - properties:
                        id:
                          description: 'The unique numeric ID of the value; increments
                            sequentially.

                            '
                          type: integer
                      type: object
                    description: 'Part of Modifier Value Response '
                    title: Modifier Value
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Modifier Value Response
                type: object
          description: ''
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `ModifierValue` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create Modifier Value
      tags:
      - Product Modifier Values
      x-codegen-request-body-name: ModifierValue
  /catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}:
    delete:
      description: Deletes a *Modifier Value*.
      operationId: deleteModifierValueById
      parameters:
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Modifier/Option Value`.

          '
        in: path
        name: value_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete Modifier Value
      tags:
      - Product Modifier Values
    get:
      description: Returns a single *Modifier Value*. Optional parameters can be passed
        in.
      operationId: getModifierValueById
      parameters:
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Modifier/Option Value`.

          '
        in: path
        name: value_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  adjusters:
                    image_url: ''
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    purchasing_disabled:
                      message: ''
                      status: false
                    weight: {}
                  id: 190
                  is_default: false
                  label: 'Yes'
                  option_id: 222
                  sort_order: 0
                  value_data: {}
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productModifierOptionValue_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Modifier Value Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      security:
      - X-Auth-Token: []
      summary: Get a Modifier Value
      tags:
      - Product Modifier Values
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/ModifierIdParam'
    - $ref: '#/components/parameters/ValueIdParam'
    put:
      description: 'Updates a *Modifier Value*.


        **Required Fields**

        * none


        **Read-Only Fields**

        * id'
      operationId: updateModifierValue
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Modifier/Option Value`.

          '
        in: path
        name: value_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - allOf:
                - description: Common Option Value properties.
                  properties:
                    is_default:
                      description: 'The flag for preselecting a value as the default
                        on the storefront. This field is not supported for swatch
                        options/modifiers.

                        '
                      example: false
                      type: boolean
                    label:
                      description: 'The text display identifying the value on the
                        storefront. Required in a /POST.

                        '
                      example: Green
                      type: string
                      x-required:
                      - post
                    sort_order:
                      description: 'The order in which the value will be displayed
                        on the product page. Required in a /POST.

                        '
                      example: 0
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      x-required:
                      - post
                    value_data:
                      description: 'Extra data describing the value, based on the
                        type of option or modifier with which the value is associated.
                        The `swatch` type option can accept an array of `colors`,
                        with up to three hexidecimal color keys; or an `image_url`,
                        which is a full image URL path including protocol. The `product
                        list` type option requires a `product_id`. The `checkbox`
                        type option requires a boolean flag, called `checked_value`,
                        to determine which value is considered to be the checked state.

                        '
                      properties: {}
                      type: object
                  required:
                  - label
                  - sort_order
                  title: Option Value Base
                  type: object
                - properties:
                    adjusters:
                      properties:
                        image_url:
                          description: 'The URL for an image displayed on the storefront
                            when the modifier value is selected.Limit of 8MB per file.

                            '
                          example: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                          type: string
                        price:
                          description: Adjuster for Complex Rules.
                          properties:
                            adjuster:
                              description: 'The type of adjuster for either the price
                                or the weight of the variant, when the modifier value
                                is selected on the storefront.

                                '
                              enum:
                              - relative
                              - percentage
                              nullable: true
                              type: string
                            adjuster_value:
                              description: 'The numeric amount by which the adjuster
                                will change either the price or the weight of the
                                variant, when the modifier value is selected on the
                                storefront.

                                '
                              example: 5
                              type: number
                          title: Adjuster
                          type: object
                        purchasing_disabled:
                          properties:
                            message:
                              description: 'The message displayed on the storefront
                                when the purchasing disabled status is `true`.

                                '
                              type: string
                            status:
                              description: 'Flag for whether the modifier value disables
                                purchasing when selected on the storefront. This can
                                be used for temporarily disabling a particular modifier
                                value.

                                '
                              type: boolean
                          type: object
                        weight:
                          description: Adjuster for Complex Rules.
                          properties:
                            adjuster:
                              description: 'The type of adjuster for either the price
                                or the weight of the variant, when the modifier value
                                is selected on the storefront.

                                '
                              enum:
                              - relative
                              - percentage
                              nullable: true
                              type: string
                            adjuster_value:
                              description: 'The numeric amount by which the adjuster
                                will change either the price or the weight of the
                                variant, when the modifier value is selected on the
                                storefront.

                                '
                              example: 5
                              type: number
                          title: Adjuster
                          type: object
                      type: object
                  type: object
                title: Modifier Value Base
              - properties:
                  id:
                    description: 'The unique numeric ID of the value; increments sequentially.

                      '
                    type: integer
                    x-required:
                    - put
                type: object
              description: The model for a PUT to update a modifier value on a product.
              title: Modifier Value Put
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  adjusters:
                    image_url: ''
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    purchasing_disabled:
                      message: ''
                      status: false
                    weight: {}
                  id: 190
                  is_default: false
                  label: 'Yes'
                  option_id: 222
                  sort_order: 0
                  value_data: {}
                meta: {}
              schema:
                properties:
                  data:
                    allOf:
                    - allOf:
                      - description: Common Option Value properties.
                        properties:
                          is_default:
                            description: 'The flag for preselecting a value as the
                              default on the storefront. This field is not supported
                              for swatch options/modifiers.

                              '
                            example: false
                            type: boolean
                          label:
                            description: 'The text display identifying the value on
                              the storefront. Required in a /POST.

                              '
                            example: Green
                            type: string
                            x-required:
                            - post
                          sort_order:
                            description: 'The order in which the value will be displayed
                              on the product page. Required in a /POST.

                              '
                            example: 0
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            x-required:
                            - post
                          value_data:
                            description: 'Extra data describing the value, based on
                              the type of option or modifier with which the value
                              is associated. The `swatch` type option can accept an
                              array of `colors`, with up to three hexidecimal color
                              keys; or an `image_url`, which is a full image URL path
                              including protocol. The `product list` type option requires
                              a `product_id`. The `checkbox` type option requires
                              a boolean flag, called `checked_value`, to determine
                              which value is considered to be the checked state.

                              '
                            properties: {}
                            type: object
                        required:
                        - label
                        - sort_order
                        title: Option Value Base
                        type: object
                      - properties:
                          adjusters:
                            properties:
                              image_url:
                                description: 'The URL for an image displayed on the
                                  storefront when the modifier value is selected.Limit
                                  of 8MB per file.

                                  '
                                example: https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2
                                type: string
                              price:
                                description: Adjuster for Complex Rules.
                                properties:
                                  adjuster:
                                    description: 'The type of adjuster for either
                                      the price or the weight of the variant, when
                                      the modifier value is selected on the storefront.

                                      '
                                    enum:
                                    - relative
                                    - percentage
                                    type: string
                                    x-nullable: true
                                  adjuster_value:
                                    description: 'The numeric amount by which the
                                      adjuster will change either the price or the
                                      weight of the variant, when the modifier value
                                      is selected on the storefront.

                                      '
                                    example: 5
                                    type: number
                                title: Adjuster
                                type: object
                              purchasing_disabled:
                                properties:
                                  message:
                                    description: 'The message displayed on the storefront
                                      when the purchasing disabled status is `true`.

                                      '
                                    type: string
                                  status:
                                    description: 'Flag for whether the modifier value
                                      disables purchasing when selected on the storefront.
                                      This can be used for temporarily disabling a
                                      particular modifier value.

                                      '
                                    type: boolean
                                type: object
                              weight:
                                description: Adjuster for Complex Rules.
                                properties:
                                  adjuster:
                                    description: 'The type of adjuster for either
                                      the price or the weight of the variant, when
                                      the modifier value is selected on the storefront.

                                      '
                                    enum:
                                    - relative
                                    - percentage
                                    type: string
                                    x-nullable: true
                                  adjuster_value:
                                    description: 'The numeric amount by which the
                                      adjuster will change either the price or the
                                      weight of the variant, when the modifier value
                                      is selected on the storefront.

                                      '
                                    example: 5
                                    type: number
                                title: Adjuster
                                type: object
                            type: object
                        type: object
                      title: Modifier Value Base
                      type: object
                    - properties:
                        id:
                          description: 'The unique numeric ID of the value; increments
                            sequentially.

                            '
                          type: integer
                      type: object
                    description: 'Part of Modifier Value Response '
                    title: Modifier Value
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Modifier Value Response
                type: object
          description: ''
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `ModifierValue` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Modifier Value
      tags:
      - Product Modifier Values
      x-codegen-request-body-name: ModifierValue
  /catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}/image:
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/ModifierIdParam'
    - $ref: '#/components/parameters/ValueIdParam'
    post:
      description: "Creates a *Modifier Image*.\n\nThe image will show on the storefront\
        \ when the value is selected.\n\n **Required Fields**\n- image_file: Form\
        \ posts are the only accepted upload option."
      operationId: createModifierImage
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: modifier_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Modifier`.

          '
        in: path
        name: value_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image_file:
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  image_url: https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png
                meta: {}
              schema:
                description: 'Image Response returns for:

                  * Create Variant Image

                  * Create Modifier Image

                  * Create Category Image

                  * Create Brand Image'
                properties:
                  data:
                    description: An object containing a publicly accessible image
                      URL, or a form post that contains an image file.
                    properties:
                      image_url:
                        description: 'A public URL for a GIF, JPEG, or PNG image.
                          Limit of 8MB per file.

                          '
                        type: string
                    title: Resource Image
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Image Response
                type: object
          description: ''
        '400':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Bad Request. The requested resource could not be downloaded
            and may be invalid. Possible reasons include malformed request syntax
            or the file host blocking requests.
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'Modifier image was not valid. This is the result of missing
            `image_file` fields, or of a non-URL value for the `image_file` field.
            See the response for more details.

            '
      summary: Create Modifier Image
      tags:
      - Product Modifier Images
  /catalog/products/{product_id}/options:
    get:
      description: 'Returns a list of product *Variant Options*. Optional parameters
        can be passed in. '
      operationId: getOptions
      parameters:
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Get all product options
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/productOption_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Option Collection Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get All Product Variant Options
      tags:
      - Product Variant Options
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Variant Option*.


        **Required Fields**

        * display_name

        * type

        * option_values


        **Read-Only Fields**

        * id


        **Limits**

        * 255 characters option name length.


        **Notes**


        * Only one variant option at a time can be created; individual variant options
        will contain an array of multiple values.

        * There are several examples listed below that create options, but the SKU’s
        are not updated and they are not a variant on the product. Variant SKUs must
        be created with a separate request.

        * Variant options will show on the storefront as an option that can be selected
        by the customer. A request like this could be used to add new choices to a
        variant that has already been created.

        * If more than one variant needs to be created use the [Create a Product](/docs/rest-management/catalog/products#create-a-product)
        endpoint.'
      operationId: createOption
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Option properties.
                properties:
                  config:
                    description: The values for option config can vary based on the
                      Modifier created.
                    properties:
                      checkbox_label:
                        description: '(checkbox) Label displayed for the checkbox
                          option.

                          '
                        type: string
                      checked_by_default:
                        description: '(checkbox) Flag for setting the checkbox to
                          be checked by default.

                          '
                        type: boolean
                      date_earliest_value:
                        description: '(date) The earliest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        example: '2018-08-31T00:00:00+00:00'
                        format: date-time
                        type: string
                      date_latest_value:
                        description: '(date) The latest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        example: '2019-01-01T00:00:00+00:00'
                        format: date-time
                        type: string
                      date_limit_mode:
                        description: '(date) The type of limit that is allowed to
                          be entered on a date option.

                          '
                        enum:
                        - earliest
                        - range
                        - latest
                        example: range
                        type: string
                      date_limited:
                        description: '(date) Flag to limit the dates allowed to be
                          entered on a date option.

                          '
                        type: boolean
                      default_value:
                        description: '(date, text, multi_line_text, numbers_only_text)
                          The default value. Shown on a date option as an ISO-8601–formatted
                          string, or on a text option as a string.

                          '
                        type: string
                      file_max_size:
                        description: '(file) The maximum size for a file that can
                          be used with the file upload option. This will still be
                          limited by the server.

                          '
                        example: 5
                        type: integer
                      file_types_mode:
                        description: '(file) The kind of restriction on the file types
                          that can be uploaded with a file upload option. Values:
                          `specific` - restricts uploads to particular file types;
                          `all` - allows all file types.

                          '
                        enum:
                        - specific
                        - all
                        example: specific
                        type: string
                      file_types_other:
                        description: '(file) A list of other file types allowed with
                          the file upload option.

                          '
                        example:
                        - pdf
                        - txt
                        items:
                          type: string
                        type: array
                      file_types_supported:
                        description: "(file) The type of files allowed to be uploaded\
                          \ if the `file_type_option` is set to `specific`. Values:\n\
                          \  `images` - Allows upload of image MIME types (`bmp`,\
                          \ `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`,\
                          \ `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of\
                          \ document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`,\
                          \ `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`,\
                          \ `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n \
                          \ `other` - Allows file types defined in the `file_types_other`\
                          \ array.\n"
                        example:
                        - images
                        - documents
                        - other
                        items:
                          type: string
                        type: array
                      number_highest_value:
                        description: '(numbers_only_text) The highest allowed value
                          for a number option if `number_limited` is true.

                          '
                        type: number
                      number_integers_only:
                        description: '(numbers_only_text) Flag to limit the input
                          on a number option to whole numbers only.

                          '
                        example: false
                        type: boolean
                      number_limit_mode:
                        description: '(numbers_only_text) The type of limit on values
                          entered for a number option.

                          '
                        enum:
                        - lowest
                        - highest
                        - range
                        example: lowest
                        type: string
                      number_limited:
                        description: '(numbers_only_text) Flag to limit the value
                          of a number option.

                          '
                        example: true
                        type: boolean
                      number_lowest_value:
                        description: '(numbers_only_text) The lowest allowed value
                          for a number option if `number_limited` is true.

                          '
                        example: 100
                        type: number
                      product_list_adjusts_inventory:
                        description: '(product_list, product_list_with_images) Flag
                          for automatically adjusting inventory on a product included
                          in the list.

                          '
                        type: boolean
                      product_list_adjusts_pricing:
                        description: '(product_list, product_list_with_images) Flag
                          to add the optional product''s price to the main product''s
                          price.

                          '
                        type: boolean
                      product_list_shipping_calc:
                        description: '(product_list, product_list_with_images) How
                          to factor the optional product''s weight and package dimensions
                          into the shipping quote. Values: `none` - don''t adjust;
                          `weight` - use shipping weight only; `package` - use weight
                          and dimensions.

                          '
                        enum:
                        - none
                        - weight
                        - package
                        example: weight
                        type: string
                      text_characters_limited:
                        description: '(text, multi_line_text) Flag to validate the
                          length of a text or multi-line text input.

                          '
                        type: boolean
                      text_lines_limited:
                        description: '(multi_line_text) Flag to validate the maximum
                          number of lines allowed on a multi-line text input.

                          '
                        example: true
                        type: boolean
                      text_max_length:
                        description: '(text, multi_line_text) The maximum length allowed
                          for a text or multi line text option.

                          '
                        example: 55
                        type: integer
                      text_max_lines:
                        description: '(multi_line_text) The maximum number of lines
                          allowed on a multi-line text input.

                          '
                        example: 4
                        type: integer
                      text_min_length:
                        description: '(text, multi_line_text) The minimum length allowed
                          for a text or multi-line text option.

                          '
                        example: 1
                        type: integer
                    title: Option Config
                    type: object
                  display_name:
                    description: 'The name of the option shown on the storefront.

                      '
                    example: Add-a-$5-Donation1535042499-187
                    maxLength: 255
                    minLength: 1
                    type: string
                    x-required:
                    - post
                    - put
                  image_url:
                    description: Publicly available image url
                    type: string
                  option_values:
                    items:
                      allOf:
                      - description: Common Option Value properties.
                        properties:
                          is_default:
                            description: 'The flag for preselecting a value as the
                              default on the storefront. This field is not supported
                              for swatch options/modifiers.

                              '
                            example: false
                            type: boolean
                          label:
                            description: 'The text display identifying the value on
                              the storefront. Required in a /POST.

                              '
                            example: Green
                            type: string
                            x-required:
                            - post
                          sort_order:
                            description: 'The order in which the value will be displayed
                              on the product page. Required in a /POST.

                              '
                            example: 0
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            x-required:
                            - post
                          value_data:
                            description: 'Extra data describing the value, based on
                              the type of option or modifier with which the value
                              is associated. The `swatch` type option can accept an
                              array of `colors`, with up to three hexidecimal color
                              keys; or an `image_url`, which is a full image URL path
                              including protocol. The `product list` type option requires
                              a `product_id`. The `checkbox` type option requires
                              a boolean flag, called `checked_value`, to determine
                              which value is considered to be the checked state.

                              '
                            properties: {}
                            type: object
                        required:
                        - label
                        - sort_order
                        title: Option Value Base
                      - properties:
                          id:
                            description: 'The unique numeric ID of the value; increments
                              sequentially.

                              '
                            type: integer
                      title: Option Value
                      type: object
                    minItems: 1
                    type: array
                    x-required:
                    - post
                    - put
                  product_id:
                    description: 'The unique numerical ID of the product to which
                      the option belongs.

                      '
                    example: 4
                    type: integer
                    x-required:
                    - post
                    - put
                  sort_order:
                    description: 'Order in which the option is displayed on the storefront. '
                    example: 1
                    type: integer
                  type:
                    description: 'The type of option, which determines how it will
                      display on the storefront. Acceptable values: `radio_buttons`,
                      `rectangles`, `dropdown`, `product_list`, `product_list_with_images`,
                      `swatch`. For reference, the former v2 API values are: RB =
                      radio_buttons, RT = rectangles, S = dropdown, P = product_list,
                      PI = product_list_with_images, CS = swatch.

                      '
                    enum:
                    - radio_buttons
                    - rectangles
                    - dropdown
                    - product_list
                    - product_list_with_images
                    - swatch
                    type: string
                    x-required:
                    - post
                    - put
                title: Option Base
              description: The model for a POST to create options on a product.
              title: Option Post
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      config:
                        checkbox_label: string
                        checked_by_default: true
                        date_earliest_value: '2022-08-24T00:00:00+00:00'
                        date_latest_value: '2022-08-27T00:00:00+00:00'
                        date_limit_mode: earliest
                        date_limited: true
                        default_value: string
                        file_max_size: 5
                        file_types_mode: specific
                        file_types_other:
                        - pdf
                        file_types_supported:
                        - images, documents, other
                        number_highest_value: 0
                        number_integers_only: false
                        number_limit_mode: lowest
                        number_limited: true
                        number_lowest_value: 100
                        product_list_adjusts_inventory: true
                        product_list_adjusts_pricing: true
                        product_list_shipping_calc: none
                        text_characters_limited: true
                        text_lines_limited: true
                        text_max_length: 55
                        text_max_lines: 4
                        text_min_length: 1
                      display_name: Add-a-$5-Donation1535042499-187
                      id: 55
                      image_url: string
                      name: Add-a-$5-Donation1535042499-187
                      option_values:
                      - id: 0
                        is_default: false
                        label: Green
                        sort_order: 0
                        value_data: {}
                      product_id: 4
                      sort_order: 1
                      type: radio_buttons
                    meta: {}
                example-2:
                  value:
                    data:
                      config: {}
                      display_name: Color
                      id: 220
                      name: Color (Colors only)
                      option_values:
                      - id: 174
                        is_default: false
                        label: Beige
                        sort_order: 1
                        value_data:
                          colors:
                          - '#FAFAEB'
                      - id: 175
                        is_default: false
                        label: Grey
                        sort_order: 2
                        value_data:
                          colors:
                          - '#BDBDBD'
                      - id: 176
                        is_default: false
                        label: Black
                        sort_order: 3
                        value_data:
                          colors:
                          - '#000000'
                      - id: 189
                        is_default: false
                        label: Black-Walnut
                        sort_order: 4
                        value_data:
                          colors:
                          - '#e80ee8'
                      product_id: 192
                      sort_order: 0
                      type: swatch
                    meta: {}
              schema:
                properties:
                  data:
                    allOf:
                    - description: Common Option properties.
                      properties:
                        config:
                          description: The values for option config can vary based
                            on the Modifier created.
                          properties:
                            checkbox_label:
                              description: '(checkbox) Label displayed for the checkbox
                                option.

                                '
                              type: string
                            checked_by_default:
                              description: '(checkbox) Flag for setting the checkbox
                                to be checked by default.

                                '
                              type: boolean
                            date_earliest_value:
                              description: '(date) The earliest date allowed to be
                                entered on the date option, as an ISO-8601 formatted
                                string.

                                '
                              format: date-time
                              type: string
                            date_latest_value:
                              description: '(date) The latest date allowed to be entered
                                on the date option, as an ISO-8601 formatted string.

                                '
                              format: date-time
                              type: string
                            date_limit_mode:
                              description: '(date) The type of limit that is allowed
                                to be entered on a date option.

                                '
                              enum:
                              - earliest
                              - range
                              - latest
                              example: range
                              type: string
                            date_limited:
                              description: '(date) Flag to limit the dates allowed
                                to be entered on a date option.

                                '
                              type: boolean
                            default_value:
                              description: '(date, text, multi_line_text, numbers_only_text)
                                The default value. Shown on a date option as an ISO-8601–formatted
                                string, or on a text option as a string.

                                '
                              type: string
                            file_max_size:
                              description: '(file) The maximum size for a file that
                                can be used with the file upload option. This will
                                still be limited by the server.

                                '
                              example: 5
                              type: integer
                            file_types_mode:
                              description: '(file) The kind of restriction on the
                                file types that can be uploaded with a file upload
                                option. Values: `specific` - restricts uploads to
                                particular file types; `all` - allows all file types.

                                '
                              enum:
                              - specific
                              - all
                              example: specific
                              type: string
                            file_types_other:
                              description: '(file) A list of other file types allowed
                                with the file upload option.

                                '
                              items:
                                example: pdf
                                type: string
                              type: array
                            file_types_supported:
                              description: "(file) The type of files allowed to be\
                                \ uploaded if the `file_type_option` is set to `specific`.\
                                \ Values:\n  `images` - Allows upload of image MIME\
                                \ types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`,\
                                \ `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents`\
                                \ - Allows upload of document MIME types (`txt`, `pdf`,\
                                \ `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`,\
                                \ `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`,\
                                \ `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows\
                                \ file types defined in the `file_types_other` array.\n"
                              items:
                                example: images, documents, other
                                type: string
                              type: array
                            number_highest_value:
                              description: '(numbers_only_text) The highest allowed
                                value for a number option if `number_limited` is true.

                                '
                              type: number
                            number_integers_only:
                              description: '(numbers_only_text) Flag to limit the
                                input on a number option to whole numbers only.

                                '
                              example: false
                              type: boolean
                            number_limit_mode:
                              description: '(numbers_only_text) The type of limit
                                on values entered for a number option.

                                '
                              enum:
                              - lowest
                              - highest
                              - range
                              example: lowest
                              type: string
                            number_limited:
                              description: '(numbers_only_text) Flag to limit the
                                value of a number option.

                                '
                              example: true
                              type: boolean
                            number_lowest_value:
                              description: '(numbers_only_text) The lowest allowed
                                value for a number option if `number_limited` is true.

                                '
                              example: 100
                              type: number
                            product_list_adjusts_inventory:
                              description: '(product_list, product_list_with_images)
                                Flag for automatically adjusting inventory on a product
                                included in the list.

                                '
                              type: boolean
                            product_list_adjusts_pricing:
                              description: '(product_list, product_list_with_images)
                                Flag to add the optional product''s price to the main
                                product''s price.

                                '
                              type: boolean
                            product_list_shipping_calc:
                              description: '(product_list, product_list_with_images)
                                How to factor the optional product''s weight and package
                                dimensions into the shipping quote. Values: `none`
                                - don''t adjust; `weight` - use shipping weight only;
                                `package` - use weight and dimensions.

                                '
                              enum:
                              - none
                              - weight
                              - package
                              example: weight
                              type: string
                            text_characters_limited:
                              description: '(text, multi_line_text) Flag to validate
                                the length of a text or multi-line text input.

                                '
                              type: boolean
                            text_lines_limited:
                              description: '(multi_line_text) Flag to validate the
                                maximum number of lines allowed on a multi-line text
                                input.

                                '
                              example: true
                              type: boolean
                            text_max_length:
                              description: '(text, multi_line_text) The maximum length
                                allowed for a text or multi line text option.

                                '
                              example: 55
                              type: integer
                            text_max_lines:
                              description: '(multi_line_text) The maximum number of
                                lines allowed on a multi-line text input.

                                '
                              example: 4
                              type: integer
                            text_min_length:
                              description: '(text, multi_line_text) The minimum length
                                allowed for a text or multi-line text option.

                                '
                              example: 1
                              type: integer
                          title: Option Config
                          type: object
                        display_name:
                          description: 'The name of the option shown on the storefront.

                            '
                          example: Add-a-$5-Donation1535042499-187
                          maxLength: 255
                          minLength: 1
                          type: string
                          x-required:
                          - post
                          - put
                        id:
                          description: 'The unique numerical ID of the option, increments
                            sequentially.

                            '
                          example: 55
                          type: integer
                          x-nullable: true
                        image_url:
                          description: Publicly available image url
                          type: string
                        option_values:
                          items:
                            allOf:
                            - description: Common Option Value properties.
                              properties:
                                is_default:
                                  description: 'The flag for preselecting a value
                                    as the default on the storefront. This field is
                                    not supported for swatch options/modifiers.

                                    '
                                  example: false
                                  type: boolean
                                label:
                                  description: 'The text display identifying the value
                                    on the storefront. Required in a /POST.

                                    '
                                  example: Green
                                  type: string
                                  x-required:
                                  - post
                                sort_order:
                                  description: 'The order in which the value will
                                    be displayed on the product page. Required in
                                    a /POST.

                                    '
                                  example: 0
                                  maximum: 2147483647
                                  minimum: -2147483648
                                  type: integer
                                  x-required:
                                  - post
                                value_data:
                                  description: 'Extra data describing the value, based
                                    on the type of option or modifier with which the
                                    value is associated. The `swatch` type option
                                    can accept an array of `colors`, with up to three
                                    hexidecimal color keys; or an `image_url`, which
                                    is a full image URL path including protocol. The
                                    `product list` type option requires a `product_id`.
                                    The `checkbox` type option requires a boolean
                                    flag, called `checked_value`, to determine which
                                    value is considered to be the checked state.

                                    '
                                  properties: {}
                                  type: object
                              required:
                              - label
                              - sort_order
                              title: Option Value Base
                            - properties:
                                id:
                                  description: 'The unique numeric ID of the value;
                                    increments sequentially.

                                    '
                                  type: integer
                            title: Option Value
                            type: object
                          minItems: 1
                          type: array
                          x-required:
                          - post
                          - put
                        product_id:
                          description: 'The unique numerical ID of the product to
                            which the option belongs.

                            '
                          example: 4
                          type: integer
                          x-required:
                          - post
                          - put
                        sort_order:
                          description: 'Order in which the option is displayed on
                            the storefront. '
                          example: 1
                          type: integer
                        type:
                          description: 'The type of option, which determines how it
                            will display on the storefront. Acceptable values: `radio_buttons`,
                            `rectangles`, `dropdown`, `product_list`, `product_list_with_images`,
                            `swatch`. For reference, the former v2 API values are:
                            RB = radio_buttons, RT = rectangles, S = dropdown, P =
                            product_list, PI = product_list_with_images, CS = swatch.

                            '
                          enum:
                          - radio_buttons
                          - rectangles
                          - dropdown
                          - product_list
                          - product_list_with_images
                          - swatch
                          type: string
                          x-required:
                          - post
                          - put
                      title: Option Base
                      type: object
                    - properties:
                        name:
                          description: 'The unique option name, auto-generated from
                            the display name, a timestamp, and the product ID.

                            '
                          example: Add-a-$5-Donation1535042499-187
                          type: string
                      type: object
                    title: Option
                    type: object
                  meta:
                    description: Empty meta object; may be used later.
                    properties: {}
                    title: Meta
                    type: object
                title: Option Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'Option was in conflict with another option. This is the result
            of duplicate unique fields, such as `name`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'Option was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.

            '
      summary: Create a Product Variant Option
      tags:
      - Product Variant Options
      x-codegen-request-body-name: Option
  /catalog/products/{product_id}/options/{option_id}:
    delete:
      description: Deletes a *Variant Option*.
      operationId: deleteOptionById
      parameters:
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product Variant Option
      tags:
      - Product Variant Options
    get:
      description: Returns a single *Variant Option*. Optional parameters can be passed
        in.
      operationId: getOptionById
      parameters:
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productOption_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Option Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Variant Option
      tags:
      - Product Variant Options
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/OptionIdParam'
    put:
      description: 'Updates a *Variant Option*.


        **Read-Only Fields**

        * id'
      operationId: updateOption
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Option properties.
                properties:
                  config:
                    description: The values for option config can vary based on the
                      Modifier created.
                    properties:
                      checkbox_label:
                        description: '(checkbox) Label displayed for the checkbox
                          option.

                          '
                        type: string
                      checked_by_default:
                        description: '(checkbox) Flag for setting the checkbox to
                          be checked by default.

                          '
                        type: boolean
                      date_earliest_value:
                        description: '(date) The earliest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        example: '2018-08-31T00:00:00+00:00'
                        format: date-time
                        type: string
                      date_latest_value:
                        description: '(date) The latest date allowed to be entered
                          on the date option, as an ISO-8601 formatted string.

                          '
                        example: '2019-01-01T00:00:00+00:00'
                        format: date-time
                        type: string
                      date_limit_mode:
                        description: '(date) The type of limit that is allowed to
                          be entered on a date option.

                          '
                        enum:
                        - earliest
                        - range
                        - latest
                        example: range
                        type: string
                      date_limited:
                        description: '(date) Flag to limit the dates allowed to be
                          entered on a date option.

                          '
                        type: boolean
                      default_value:
                        description: '(date, text, multi_line_text, numbers_only_text)
                          The default value. Shown on a date option as an ISO-8601–formatted
                          string, or on a text option as a string.

                          '
                        type: string
                      file_max_size:
                        description: '(file) The maximum size for a file that can
                          be used with the file upload option. This will still be
                          limited by the server.

                          '
                        example: 5
                        type: integer
                      file_types_mode:
                        description: '(file) The kind of restriction on the file types
                          that can be uploaded with a file upload option. Values:
                          `specific` - restricts uploads to particular file types;
                          `all` - allows all file types.

                          '
                        enum:
                        - specific
                        - all
                        example: specific
                        type: string
                      file_types_other:
                        description: '(file) A list of other file types allowed with
                          the file upload option.

                          '
                        example:
                        - pdf
                        - txt
                        items:
                          type: string
                        type: array
                      file_types_supported:
                        description: "(file) The type of files allowed to be uploaded\
                          \ if the `file_type_option` is set to `specific`. Values:\n\
                          \  `images` - Allows upload of image MIME types (`bmp`,\
                          \ `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`,\
                          \ `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of\
                          \ document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`,\
                          \ `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`,\
                          \ `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n \
                          \ `other` - Allows file types defined in the `file_types_other`\
                          \ array.\n"
                        example:
                        - images
                        - documents
                        - other
                        items:
                          type: string
                        type: array
                      number_highest_value:
                        description: '(numbers_only_text) The highest allowed value
                          for a number option if `number_limited` is true.

                          '
                        type: number
                      number_integers_only:
                        description: '(numbers_only_text) Flag to limit the input
                          on a number option to whole numbers only.

                          '
                        example: false
                        type: boolean
                      number_limit_mode:
                        description: '(numbers_only_text) The type of limit on values
                          entered for a number option.

                          '
                        enum:
                        - lowest
                        - highest
                        - range
                        example: lowest
                        type: string
                      number_limited:
                        description: '(numbers_only_text) Flag to limit the value
                          of a number option.

                          '
                        example: true
                        type: boolean
                      number_lowest_value:
                        description: '(numbers_only_text) The lowest allowed value
                          for a number option if `number_limited` is true.

                          '
                        example: 100
                        type: number
                      product_list_adjusts_inventory:
                        description: '(product_list, product_list_with_images) Flag
                          for automatically adjusting inventory on a product included
                          in the list.

                          '
                        type: boolean
                      product_list_adjusts_pricing:
                        description: '(product_list, product_list_with_images) Flag
                          to add the optional product''s price to the main product''s
                          price.

                          '
                        type: boolean
                      product_list_shipping_calc:
                        description: '(product_list, product_list_with_images) How
                          to factor the optional product''s weight and package dimensions
                          into the shipping quote. Values: `none` - don''t adjust;
                          `weight` - use shipping weight only; `package` - use weight
                          and dimensions.

                          '
                        enum:
                        - none
                        - weight
                        - package
                        example: weight
                        type: string
                      text_characters_limited:
                        description: '(text, multi_line_text) Flag to validate the
                          length of a text or multi-line text input.

                          '
                        type: boolean
                      text_lines_limited:
                        description: '(multi_line_text) Flag to validate the maximum
                          number of lines allowed on a multi-line text input.

                          '
                        example: true
                        type: boolean
                      text_max_length:
                        description: '(text, multi_line_text) The maximum length allowed
                          for a text or multi line text option.

                          '
                        example: 55
                        type: integer
                      text_max_lines:
                        description: '(multi_line_text) The maximum number of lines
                          allowed on a multi-line text input.

                          '
                        example: 4
                        type: integer
                      text_min_length:
                        description: '(text, multi_line_text) The minimum length allowed
                          for a text or multi-line text option.

                          '
                        example: 1
                        type: integer
                    title: Option Config
                    type: object
                  display_name:
                    description: 'The name of the option shown on the storefront.

                      '
                    example: Add-a-$5-Donation1535042499-187
                    maxLength: 255
                    minLength: 1
                    type: string
                    x-required:
                    - post
                    - put
                  id:
                    description: 'The unique numerical ID of the option, increments
                      sequentially.

                      '
                    example: 55
                    nullable: true
                    type: integer
                  image_url:
                    description: Publicly available image url
                    type: string
                  option_values:
                    items:
                      allOf:
                      - description: Common Option Value properties.
                        properties:
                          is_default:
                            description: 'The flag for preselecting a value as the
                              default on the storefront. This field is not supported
                              for swatch options/modifiers.

                              '
                            example: false
                            type: boolean
                          label:
                            description: 'The text display identifying the value on
                              the storefront. Required in a /POST.

                              '
                            example: Green
                            type: string
                            x-required:
                            - post
                          sort_order:
                            description: 'The order in which the value will be displayed
                              on the product page. Required in a /POST.

                              '
                            example: 0
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            x-required:
                            - post
                          value_data:
                            description: 'Extra data describing the value, based on
                              the type of option or modifier with which the value
                              is associated. The `swatch` type option can accept an
                              array of `colors`, with up to three hexidecimal color
                              keys; or an `image_url`, which is a full image URL path
                              including protocol. The `product list` type option requires
                              a `product_id`. The `checkbox` type option requires
                              a boolean flag, called `checked_value`, to determine
                              which value is considered to be the checked state.

                              '
                            properties: {}
                            type: object
                        required:
                        - label
                        - sort_order
                        title: Option Value Base
                        type: object
                      - properties:
                          id:
                            description: 'The unique numeric ID of the value; increments
                              sequentially.

                              '
                            type: integer
                        type: object
                      title: Option Value
                      type: object
                    minItems: 1
                    type: array
                    x-required:
                    - post
                    - put
                  product_id:
                    description: 'The unique numerical ID of the product to which
                      the option belongs.

                      '
                    example: 4
                    type: integer
                    x-required:
                    - post
                    - put
                  sort_order:
                    description: 'Order in which the option is displayed on the storefront. '
                    example: 1
                    type: integer
                  type:
                    description: 'The type of option, which determines how it will
                      display on the storefront. Acceptable values: `radio_buttons`,
                      `rectangles`, `dropdown`, `product_list`, `product_list_with_images`,
                      `swatch`. For reference, the former v2 API values are: RB =
                      radio_buttons, RT = rectangles, S = dropdown, P = product_list,
                      PI = product_list_with_images, CS = swatch.

                      '
                    enum:
                    - radio_buttons
                    - rectangles
                    - dropdown
                    - product_list
                    - product_list_with_images
                    - swatch
                    type: string
                    x-required:
                    - post
                    - put
                title: Option Base
                type: object
              description: The model for a PUT to update options on a product.
              title: Option Put
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  config: {}
                  display_name: Color
                  id: 220
                  name: Color (Colors only)
                  option_values:
                  - id: 174
                    is_default: false
                    label: Beige
                    sort_order: 1
                    value_data:
                      colors:
                      - '#FAFAEB'
                  - id: 175
                    is_default: false
                    label: Grey
                    sort_order: 2
                    value_data:
                      colors:
                      - '#BDBDBD'
                  - id: 176
                    is_default: false
                    label: Black
                    sort_order: 3
                    value_data:
                      colors:
                      - '#000000'
                  - id: 189
                    is_default: false
                    label: Black-Walnut
                    sort_order: 4
                    value_data:
                      colors:
                      - '#e80ee8'
                  product_id: 192
                  sort_order: 0
                  type: swatch
                meta: {}
              schema:
                properties:
                  data:
                    allOf:
                    - description: Common Option properties.
                      properties:
                        config:
                          description: The values for option config can vary based
                            on the Modifier created.
                          properties:
                            checkbox_label:
                              description: '(checkbox) Label displayed for the checkbox
                                option.

                                '
                              type: string
                            checked_by_default:
                              description: '(checkbox) Flag for setting the checkbox
                                to be checked by default.

                                '
                              type: boolean
                            date_earliest_value:
                              description: '(date) The earliest date allowed to be
                                entered on the date option, as an ISO-8601 formatted
                                string.

                                '
                              format: date
                              type: string
                            date_latest_value:
                              description: '(date) The latest date allowed to be entered
                                on the date option, as an ISO-8601 formatted string.

                                '
                              format: date
                              type: string
                            date_limit_mode:
                              description: '(date) The type of limit that is allowed
                                to be entered on a date option.

                                '
                              enum:
                              - earliest
                              - range
                              - latest
                              example: range
                              type: string
                            date_limited:
                              description: '(date) Flag to limit the dates allowed
                                to be entered on a date option.

                                '
                              type: boolean
                            default_value:
                              description: '(date, text, multi_line_text, numbers_only_text)
                                The default value. Shown on a date option as an ISO-8601–formatted
                                string, or on a text option as a string.

                                '
                              type: string
                            file_max_size:
                              description: '(file) The maximum size for a file that
                                can be used with the file upload option. This will
                                still be limited by the server.

                                '
                              example: 5
                              type: integer
                            file_types_mode:
                              description: '(file) The kind of restriction on the
                                file types that can be uploaded with a file upload
                                option. Values: `specific` - restricts uploads to
                                particular file types; `all` - allows all file types.

                                '
                              enum:
                              - specific
                              - all
                              example: specific
                              type: string
                            file_types_other:
                              description: "(file) A list of other file types allowed\
                                \ with the file upload option.                   \
                                \         \n"
                              items:
                                example: pdf
                                type: string
                              type: array
                            file_types_supported:
                              description: "(file) The type of files allowed to be\
                                \ uploaded if the `file_type_option` is set to `specific`.\
                                \ Values:\n  `images` - Allows upload of image MIME\
                                \ types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`,\
                                \ `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents`\
                                \ - Allows upload of document MIME types (`txt`, `pdf`,\
                                \ `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`,\
                                \ `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`,\
                                \ `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows\
                                \ file types defined in the `file_types_other` array.\
                                \                            \n"
                              items:
                                example: images, documents, other
                                type: string
                              type: array
                            number_highest_value:
                              description: '(numbers_only_text) The highest allowed
                                value for a number option if `number_limited` is true.

                                '
                              type: number
                            number_integers_only:
                              description: '(numbers_only_text) Flag to limit the
                                input on a number option to whole numbers only.

                                '
                              example: false
                              type: boolean
                            number_limit_mode:
                              description: '(numbers_only_text) The type of limit
                                on values entered for a number option.

                                '
                              enum:
                              - lowest
                              - highest
                              - range
                              example: lowest
                              type: string
                            number_limited:
                              description: '(numbers_only_text) Flag to limit the
                                value of a number option.

                                '
                              example: true
                              type: boolean
                            number_lowest_value:
                              description: '(numbers_only_text) The lowest allowed
                                value for a number option if `number_limited` is true.

                                '
                              example: 100
                              type: number
                            product_list_adjusts_inventory:
                              description: '(product_list, product_list_with_images)
                                Flag for automatically adjusting inventory on a product
                                included in the list.

                                '
                              type: boolean
                            product_list_adjusts_pricing:
                              description: '(product_list, product_list_with_images)
                                Flag to add the optional product''s price to the main
                                product''s price.

                                '
                              type: boolean
                            product_list_shipping_calc:
                              description: '(product_list, product_list_with_images)
                                How to factor the optional product''s weight and package
                                dimensions into the shipping quote. Values: `none`
                                - don''t adjust; `weight` - use shipping weight only;
                                `package` - use weight and dimensions.

                                '
                              enum:
                              - none
                              - weight
                              - package
                              example: weight
                              type: string
                            text_characters_limited:
                              description: '(text, multi_line_text) Flag to validate
                                the length of a text or multi-line text input.

                                '
                              type: boolean
                            text_lines_limited:
                              description: '(multi_line_text) Flag to validate the
                                maximum number of lines allowed on a multi-line text
                                input.

                                '
                              example: true
                              type: boolean
                            text_max_length:
                              description: '(text, multi_line_text) The maximum length
                                allowed for a text or multi line text option.

                                '
                              example: 55
                              type: integer
                            text_max_lines:
                              description: '(multi_line_text) The maximum number of
                                lines allowed on a multi-line text input.

                                '
                              example: 4
                              type: integer
                            text_min_length:
                              description: '(text, multi_line_text) The minimum length
                                allowed for a text or multi-line text option.

                                '
                              example: 1
                              type: integer
                          title: Option Config
                          type: object
                        display_name:
                          description: 'The name of the option shown on the storefront.

                            '
                          example: Add-a-$5-Donation1535042499-187
                          maxLength: 255
                          minLength: 1
                          type: string
                          x-required:
                          - post
                          - put
                        id:
                          description: 'The unique numerical ID of the option, increments
                            sequentially.

                            '
                          example: 55
                          type: integer
                          x-nullable: true
                        image_url:
                          description: Publicly available image url
                          type: string
                        option_values:
                          items:
                            allOf:
                            - description: Common Option Value properties.
                              properties:
                                is_default:
                                  description: 'The flag for preselecting a value
                                    as the default on the storefront. This field is
                                    not supported for swatch options/modifiers.

                                    '
                                  example: false
                                  type: boolean
                                label:
                                  description: 'The text display identifying the value
                                    on the storefront. Required in a /POST.

                                    '
                                  example: Green
                                  type: string
                                  x-required:
                                  - post
                                sort_order:
                                  description: 'The order in which the value will
                                    be displayed on the product page. Required in
                                    a /POST.

                                    '
                                  example: 0
                                  maximum: 2147483647
                                  minimum: -2147483648
                                  type: integer
                                  x-required:
                                  - post
                                value_data:
                                  description: 'Extra data describing the value, based
                                    on the type of option or modifier with which the
                                    value is associated. The `swatch` type option
                                    can accept an array of `colors`, with up to three
                                    hexidecimal color keys; or an `image_url`, which
                                    is a full image URL path including protocol. The
                                    `product list` type option requires a `product_id`.
                                    The `checkbox` type option requires a boolean
                                    flag, called `checked_value`, to determine which
                                    value is considered to be the checked state.

                                    '
                                  properties: {}
                                  type: object
                                  x-nullable: true
                              required:
                              - label
                              - sort_order
                              title: Option Value Base
                              type: object
                            - properties:
                                id:
                                  description: 'The unique numeric ID of the value;
                                    increments sequentially.

                                    '
                                  type: integer
                              type: object
                            title: Option Value
                            type: object
                          minItems: 1
                          type: array
                          x-required:
                          - post
                          - put
                        product_id:
                          description: 'The unique numerical ID of the product to
                            which the option belongs.

                            '
                          example: 4
                          type: integer
                          x-required:
                          - post
                          - put
                        sort_order:
                          description: 'Order in which the option is displayed on
                            the storefront. '
                          example: 1
                          type: integer
                        type:
                          description: 'The type of option, which determines how it
                            will display on the storefront. Acceptable values: `radio_buttons`,
                            `rectangles`, `dropdown`, `product_list`, `product_list_with_images`,
                            `swatch`. For reference, the former v2 API values are:
                            RB = radio_buttons, RT = rectangles, S = dropdown, P =
                            product_list, PI = product_list_with_images, CS = swatch.

                            '
                          enum:
                          - radio_buttons
                          - rectangles
                          - dropdown
                          - product_list
                          - product_list_with_images
                          - swatch
                          type: string
                          x-required:
                          - post
                          - put
                      title: Option Base
                      type: object
                    - properties:
                        name:
                          description: 'The unique option name, auto-generated from
                            the display name, a timestamp, and the product ID.

                            '
                          example: Add-a-$5-Donation1535042499-187
                          type: string
                      type: object
                    title: Option
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Option Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Option` was in conflict with another option. This is
            the result of duplicate unique fields, such as `name`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Option` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Product Variant Option
      tags:
      - Product Variant Options
      x-codegen-request-body-name: option
  /catalog/products/{product_id}/options/{option_id}/values:
    get:
      description: Returns a list of all *Variant Option Values*. Optional parameters
        can be passed in.
      operationId: getOptionValues
      parameters:
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - id: 174
                  is_default: false
                  label: Beige
                  sort_order: 1
                  value_data:
                    colors:
                    - '#FAFAEB'
                - id: 175
                  is_default: false
                  label: Grey
                  sort_order: 2
                  value_data:
                    colors:
                    - '#BDBDBD'
                - id: 176
                  is_default: false
                  label: Black
                  sort_order: 3
                  value_data:
                    colors:
                    - '#000000'
                - id: 189
                  is_default: false
                  label: Black-Walnut
                  sort_order: 4
                  value_data:
                    colors:
                    - '#e80ee8'
                meta:
                  pagination:
                    count: 4
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 4
                    total_pages: 1
              schema:
                description: Get Option Values response.
                properties:
                  data:
                    items:
                      allOf:
                      - description: Common Option Value properties.
                        properties:
                          is_default:
                            description: 'The flag for preselecting a value as the
                              default on the storefront. This field is not supported
                              for swatch options/modifiers.

                              '
                            example: false
                            type: boolean
                          label:
                            description: 'The text display identifying the value on
                              the storefront. Required in a /POST.

                              '
                            example: Green
                            type: string
                            x-required:
                            - post
                          sort_order:
                            description: 'The order in which the value will be displayed
                              on the product page. Required in a /POST.

                              '
                            example: 0
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            x-required:
                            - post
                          value_data:
                            description: 'Extra data describing the value, based on
                              the type of option or modifier with which the value
                              is associated. The `swatch` type option can accept an
                              array of `colors`, with up to three hexidecimal color
                              keys; or an `image_url`, which is a full image URL path
                              including protocol. The `product list` type option requires
                              a `product_id`. The `checkbox` type option requires
                              a boolean flag, called `checked_value`, to determine
                              which value is considered to be the checked state.

                              '
                            properties: {}
                            type: object
                            x-nullable: true
                        required:
                        - label
                        - sort_order
                        title: Option Value Base
                        type: object
                      - properties:
                          id:
                            description: 'The unique numeric ID of the value; increments
                              sequentially.

                              '
                            type: integer
                        type: object
                      title: Option Value
                      type: object
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Option Value Collection Response
                type: object
          description: ''
      summary: Get All Product Variant Option Values
      tags:
      - Product Variant Option Values
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/OptionIdParam'
    post:
      description: 'Creates a *Variant Option Value*.


        **Required Fields**

        * label

        * sort_order


        **Read-Only Fields**

        * id


        **Limits**

        * 250 option values per option limit.'
      operationId: createOptionValue
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Option Value properties.
                properties:
                  is_default:
                    description: 'The flag for preselecting a value as the default
                      on the storefront. This field is not supported for swatch options/modifiers.

                      '
                    example: false
                    type: boolean
                  label:
                    description: 'The text display identifying the value on the storefront.
                      Required in a /POST.

                      '
                    example: Green
                    type: string
                    x-required:
                    - post
                  sort_order:
                    description: 'The order in which the value will be displayed on
                      the product page. Required in a /POST.

                      '
                    example: 0
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                    x-required:
                    - post
                  value_data:
                    description: 'Extra data describing the value, based on the type
                      of option or modifier with which the value is associated. The
                      `swatch` type option can accept an array of `colors`, with up
                      to three hexidecimal color keys; or an `image_url`, which is
                      a full image URL path including protocol. The `product list`
                      type option requires a `product_id`. The `checkbox` type option
                      requires a boolean flag, called `checked_value`, to determine
                      which value is considered to be the checked state.

                      '
                    properties: {}
                    type: object
                required:
                - label
                - sort_order
                title: Option Value Base
                type: object
              description: The model for a POST to create option values on a product.
              title: Option Value Post
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  id: 44
                  is_default: false
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                    - '#123c91, #FFFF00, #397a44'
              schema:
                properties:
                  data:
                    allOf:
                    - description: Common Option Value properties.
                      properties:
                        is_default:
                          description: 'The flag for preselecting a value as the default
                            on the storefront. This field is not supported for swatch
                            options/modifiers.

                            '
                          example: false
                          type: boolean
                        label:
                          description: 'The text display identifying the value on
                            the storefront. Required in a /POST.

                            '
                          example: Green
                          type: string
                          x-required:
                          - post
                        sort_order:
                          description: 'The order in which the value will be displayed
                            on the product page. Required in a /POST.

                            '
                          example: 0
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          x-required:
                          - post
                        value_data:
                          description: 'Extra data describing the value, based on
                            the type of option or modifier with which the value is
                            associated. The `swatch` type option can accept an array
                            of `colors`, with up to three hexidecimal color keys;
                            or an `image_url`, which is a full image URL path including
                            protocol. The `product list` type option requires a `product_id`.
                            The `checkbox` type option requires a boolean flag, called
                            `checked_value`, to determine which value is considered
                            to be the checked state.

                            '
                          properties: {}
                          type: object
                          x-nullable: true
                      required:
                      - label
                      - sort_order
                      title: Option Value Base
                      type: object
                    - properties:
                        id:
                          description: 'The unique numeric ID of the value; increments
                            sequentially.

                            '
                          type: integer
                      type: object
                    title: Option Value
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Option Value Response
                type: object
          description: ''
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `OptionValue` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Product Variant Option Value
      tags:
      - Product Variant Option Values
      x-codegen-request-body-name: OptionValue
  /catalog/products/{product_id}/options/{option_id}/values/{value_id}:
    delete:
      description: Deletes a *Variant Option Value*.
      operationId: deleteOptionValueById
      parameters:
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Modifier/Option Value`.

          '
        in: path
        name: value_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product Variant Option Value
      tags:
      - Product Variant Option Values
    get:
      description: Returns a single *Variant Option Value*. Optional parameters can
        be passed in.
      operationId: getOptionValueById
      parameters:
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Modifier/Option Value`.

          '
        in: path
        name: value_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  id: 44
                  is_default: false
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                    - '#123c91, #FFFF00, #397a44'
              schema:
                properties:
                  data:
                    allOf:
                    - description: Common Option Value properties.
                      properties:
                        is_default:
                          description: 'The flag for preselecting a value as the default
                            on the storefront. This field is not supported for swatch
                            options/modifiers.

                            '
                          example: false
                          type: boolean
                        label:
                          description: 'The text display identifying the value on
                            the storefront. Required in a /POST.

                            '
                          example: Green
                          type: string
                          x-required:
                          - post
                        sort_order:
                          description: 'The order in which the value will be displayed
                            on the product page. Required in a /POST.

                            '
                          example: 0
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          x-required:
                          - post
                        value_data:
                          description: 'Extra data describing the value, based on
                            the type of option or modifier with which the value is
                            associated. The `swatch` type option can accept an array
                            of `colors`, with up to three hexidecimal color keys;
                            or an `image_url`, which is a full image URL path including
                            protocol. The `product list` type option requires a `product_id`.
                            The `checkbox` type option requires a boolean flag, called
                            `checked_value`, to determine which value is considered
                            to be the checked state.

                            '
                          properties: {}
                          type: object
                          x-nullable: true
                      required:
                      - label
                      - sort_order
                      title: Option Value Base
                      type: object
                    - properties:
                        id:
                          description: 'The unique numeric ID of the value; increments
                            sequentially.

                            '
                          type: integer
                      type: object
                    title: Option Value
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Option Value Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Variant Option Value
      tags:
      - Product Variant Option Values
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/OptionIdParam'
    - $ref: '#/components/parameters/ValueIdParam'
    put:
      description: 'Updates a *Variant Option Value*.


        **Read-Only Fields**

        * id'
      operationId: updateOptionValue
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Option`.

          '
        in: path
        name: option_id
        required: true
        schema:
          type: integer
      - description: 'The ID of the `Modifier/Option Value`.

          '
        in: path
        name: value_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Option Value properties.
                properties:
                  is_default:
                    description: 'The flag for preselecting a value as the default
                      on the storefront. This field is not supported for swatch options/modifiers.

                      '
                    example: false
                    type: boolean
                  label:
                    description: 'The text display identifying the value on the storefront.
                      Required in a /POST.

                      '
                    example: Green
                    type: string
                    x-required:
                    - post
                  sort_order:
                    description: 'The order in which the value will be displayed on
                      the product page. Required in a /POST.

                      '
                    example: 0
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                    x-required:
                    - post
                  value_data:
                    description: 'Extra data describing the value, based on the type
                      of option or modifier with which the value is associated. The
                      `swatch` type option can accept an array of `colors`, with up
                      to three hexidecimal color keys; or an `image_url`, which is
                      a full image URL path including protocol. The `product list`
                      type option requires a `product_id`. The `checkbox` type option
                      requires a boolean flag, called `checked_value`, to determine
                      which value is considered to be the checked state.

                      '
                    properties: {}
                    type: object
                required:
                - label
                - sort_order
                title: Option Value Base
                type: object
              - properties:
                  id:
                    description: 'The unique numeric ID of the value; increments sequentially.

                      '
                    type: integer
                    x-required:
                    - put
                type: object
              description: The model for a PUT to update option values on a product.
              title: Option Value Put
        description: 'A BigCommerce `OptionValue` object.

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  id: 44
                  is_default: false
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                    - '#123c91, #FFFF00, #397a44'
              schema:
                properties:
                  data:
                    allOf:
                    - description: Common Option Value properties.
                      properties:
                        is_default:
                          description: 'The flag for preselecting a value as the default
                            on the storefront. This field is not supported for swatch
                            options/modifiers.

                            '
                          example: false
                          type: boolean
                        label:
                          description: 'The text display identifying the value on
                            the storefront. Required in a /POST.

                            '
                          example: Green
                          type: string
                          x-required:
                          - post
                        sort_order:
                          description: 'The order in which the value will be displayed
                            on the product page. Required in a /POST.

                            '
                          example: 0
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          x-required:
                          - post
                        value_data:
                          description: 'Extra data describing the value, based on
                            the type of option or modifier with which the value is
                            associated. The `swatch` type option can accept an array
                            of `colors`, with up to three hexidecimal color keys;
                            or an `image_url`, which is a full image URL path including
                            protocol. The `product list` type option requires a `product_id`.
                            The `checkbox` type option requires a boolean flag, called
                            `checked_value`, to determine which value is considered
                            to be the checked state.

                            '
                          properties: {}
                          type: object
                          x-nullable: true
                      required:
                      - label
                      - sort_order
                      title: Option Value Base
                      type: object
                    - properties:
                        id:
                          description: 'The unique numeric ID of the value; increments
                            sequentially.

                            '
                          type: integer
                      type: object
                    title: Option Value
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Option Value Response
                type: object
          description: ''
        '404':
          content: {}
          description: No option(s) were found with this query.
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `OptionValue` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Product Variant Option Value
      tags:
      - Product Variant Option Values
      x-codegen-request-body-name: OptionValue
  /catalog/products/{product_id}/reviews:
    get:
      description: Returns a list of all *Product Reviews*. Optional parameters can
        be passed in.
      operationId: getProductReviews
      parameters:
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Filter items by status. `1` for approved, `0` for pending.
        in: query
        name: status
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      allOf:
                      - properties:
                          date_reviewed:
                            description: 'Date the product was reviewed. Required
                              in /POST.

                              '
                            format: date-time
                            type: string
                          email:
                            description: The email of the reviewer. Must be a valid
                              email, or an empty string.
                            type: string
                          name:
                            description: The name of the reviewer.
                            maxLength: 255
                            minLength: 0
                            type: string
                          rating:
                            description: The rating of the product review. Must be
                              one of 0, 1, 2, 3, 4, 5.
                            type: integer
                          status:
                            description: 'The status of the product review. Must be
                              one of `approved`, `disapproved` or `pending`.

                              '
                            type: string
                          text:
                            description: 'The text for the product review.

                              '
                            type: string
                          title:
                            description: 'The title for the product review.

                              Required in /POST.'
                            maxLength: 255
                            minLength: 0
                            type: string
                        required:
                        - date_reviewed
                        - title
                        title: Product Review Base
                        type: object
                      - properties:
                          date_created:
                            description: 'Date the product review was created.

                              '
                            format: date-time
                            type: string
                          date_modified:
                            description: 'Date the product review was modified.

                              '
                            format: date-time
                            type: string
                          id:
                            description: 'The unique numeric ID of the product review;
                              increments sequentially.

                              '
                            type: integer
                          product_id:
                            description: 'The unique numeric identifier for the product
                              with which the review is associated.

                              '
                            type: integer
                        type: object
                      description: 'A product review model.

                        '
                      title: Product Review
                      type: object
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Product Review Collection Response
                type: object
          description: ''
        '204':
          content: {}
          description: 'There are no reviews on this product.

            '
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The product ID does not exist.

            '
      summary: Get Product Reviews
      tags:
      - Product Reviews
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Product Review*.


        **Required Fields**

        - title

        - date_reviewed


        **Read-Only Fields**

        * id'
      operationId: createProductReview
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - properties:
                  date_reviewed:
                    description: 'Date the product was reviewed. Required in /POST.

                      '
                    format: date-time
                    type: string
                  email:
                    description: The email of the reviewer. Must be a valid email,
                      or an empty string.
                    type: string
                  name:
                    description: The name of the reviewer.
                    maxLength: 255
                    minLength: 0
                    type: string
                  rating:
                    description: The rating of the product review. Must be one of
                      0, 1, 2, 3, 4, 5.
                    type: integer
                  status:
                    description: 'The status of the product review. Must be one of
                      `approved`, `disapproved` or `pending`.

                      '
                    type: string
                  text:
                    description: 'The text for the product review.

                      '
                    type: string
                  title:
                    description: 'The title for the product review.

                      Required in /POST.'
                    maxLength: 255
                    minLength: 0
                    type: string
                required:
                - date_reviewed
                - title
                title: Product Review Base
                type: object
              description: 'The model for a POST to create a product review.

                '
              title: Product Review Post
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  email: esse Lorem laborum aute
                  id: 82495037
                  name: 'ut in '
                  product_id: 22609026
                  rating: 3
                  status: Lorem ad sed voluptate
                  text: anim aute
                  title: irur
                meta: {}
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    allOf:
                    - properties:
                        date_reviewed:
                          description: 'Date the product was reviewed. Required in
                            /POST.

                            '
                          format: date-time
                          type: string
                        email:
                          description: The email of the reviewer. Must be a valid
                            email, or an empty string.
                          type: string
                        name:
                          description: The name of the reviewer.
                          maxLength: 255
                          minLength: 0
                          type: string
                        rating:
                          description: The rating of the product review. Must be one
                            of 0, 1, 2, 3, 4, 5.
                          type: integer
                        status:
                          description: 'The status of the product review. Must be
                            one of `approved`, `disapproved` or `pending`.

                            '
                          type: string
                        text:
                          description: 'The text for the product review.

                            '
                          type: string
                        title:
                          description: 'The title for the product review.

                            Required in /POST.'
                          maxLength: 255
                          minLength: 0
                          type: string
                      required:
                      - date_reviewed
                      - title
                      title: Product Review Base
                      type: object
                    - properties:
                        date_created:
                          description: 'Date the product review was created.

                            '
                          format: date-time
                          type: string
                        date_modified:
                          description: 'Date the product review was modified.

                            '
                          format: date-time
                          type: string
                        id:
                          description: 'The unique numeric ID of the product review;
                            increments sequentially.

                            '
                          type: integer
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the review is associated.

                            '
                          type: integer
                      type: object
                    description: 'A product review model.

                      '
                    title: Product Review
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Review Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The product ID does not exist.

            '
      summary: Create a Product Review
      tags:
      - Product Reviews
      x-codegen-request-body-name: productReview
  /catalog/products/{product_id}/reviews/{review_id}:
    delete:
      description: Deletes a *Product Review*.
      operationId: deleteProductReview
      parameters:
      - description: 'The ID of the `review` that is being operated on.

          '
        in: path
        name: review_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product Review
      tags:
      - Product Reviews
    get:
      description: Returns a single *Product Review*. Optional parameters maybe passed
        in.
      operationId: getProductReviewById
      parameters:
      - description: 'The ID of the `review` that is being operated on.

          '
        in: path
        name: review_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  email: esse Lorem laborum aute
                  id: 82495037
                  name: 'ut in '
                  product_id: 22609026
                  rating: 3
                  status: Lorem ad sed voluptate
                  text: anim aute
                  title: irur
                meta: {}
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    allOf:
                    - properties:
                        date_reviewed:
                          description: 'Date the product was reviewed. Required in
                            /POST.

                            '
                          format: date-time
                          type: string
                        email:
                          description: The email of the reviewer. Must be a valid
                            email, or an empty string.
                          type: string
                        name:
                          description: The name of the reviewer.
                          maxLength: 255
                          minLength: 0
                          type: string
                        rating:
                          description: The rating of the product review. Must be one
                            of 0, 1, 2, 3, 4, 5.
                          type: integer
                        status:
                          description: 'The status of the product review. Must be
                            one of `approved`, `disapproved` or `pending`.

                            '
                          type: string
                        text:
                          description: 'The text for the product review.

                            '
                          type: string
                        title:
                          description: 'The title for the product review.

                            Required in /POST.'
                          maxLength: 255
                          minLength: 0
                          type: string
                      required:
                      - date_reviewed
                      - title
                      title: Product Review Base
                      type: object
                    - properties:
                        date_created:
                          description: 'Date the product review was created.

                            '
                          format: date-time
                          type: string
                        date_modified:
                          description: 'Date the product review was modified.

                            '
                          format: date-time
                          type: string
                        id:
                          description: 'The unique numeric ID of the product review;
                            increments sequentially.

                            '
                          type: integer
                      type: object
                    description: 'A product review model.

                      '
                    title: Product Review
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Review Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Review
      tags:
      - Product Reviews
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/ReviewIdParam'
    put:
      description: 'Updates a *Product Review*.


        **Required Fields**

        * none


        **Read-Only Fields**

        * id'
      operationId: updateProductReview
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `review` that is being operated on.

          '
        in: path
        name: review_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - properties:
                  date_reviewed:
                    description: 'Date the product was reviewed. Required in /POST.

                      '
                    format: date-time
                    type: string
                  email:
                    description: The email of the reviewer. Must be a valid email,
                      or an empty string.
                    type: string
                  name:
                    description: The name of the reviewer.
                    maxLength: 255
                    minLength: 0
                    type: string
                  rating:
                    description: The rating of the product review. Must be one of
                      0, 1, 2, 3, 4, 5.
                    type: integer
                  status:
                    description: 'The status of the product review. Must be one of
                      `approved`, `disapproved` or `pending`.

                      '
                    type: string
                  text:
                    description: 'The text for the product review.

                      '
                    type: string
                  title:
                    description: 'The title for the product review.

                      Required in /POST.'
                    maxLength: 255
                    minLength: 0
                    type: string
                required:
                - date_reviewed
                - title
                title: Product Review Base
                type: object
              description: 'The model for a PUT to update a product review.

                '
              title: Product Review Put
        description: 'A BigCommerce `ProductReview` object.

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  email: esse Lorem laborum aute
                  id: 82495037
                  name: 'ut in '
                  product_id: 22609026
                  rating: 3
                  status: Lorem ad sed voluptate
                  text: anim aute
                  title: irur
                meta: {}
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    allOf:
                    - properties:
                        date_reviewed:
                          description: 'Date the product was reviewed. Required in
                            /POST.

                            '
                          format: date-time
                          type: string
                        email:
                          description: The email of the reviewer. Must be a valid
                            email, or an empty string.
                          type: string
                        name:
                          description: The name of the reviewer.
                          maxLength: 255
                          minLength: 0
                          type: string
                        rating:
                          description: The rating of the product review. Must be one
                            of 0, 1, 2, 3, 4, 5.
                          type: integer
                        status:
                          description: 'The status of the product review. Must be
                            one of `approved`, `disapproved` or `pending`.

                            '
                          type: string
                        text:
                          description: 'The text for the product review.

                            '
                          type: string
                        title:
                          description: 'The title for the product review.

                            Required in /POST.'
                          maxLength: 255
                          minLength: 0
                          type: string
                      required:
                      - date_reviewed
                      - title
                      title: Product Review Base
                      type: object
                    - properties:
                        date_created:
                          description: 'Date the product review was created.

                            '
                          format: date-time
                          type: string
                        date_modified:
                          description: 'Date the product review was modified.

                            '
                          format: date-time
                          type: string
                        id:
                          description: 'The unique numeric ID of the product review;
                            increments sequentially.

                            '
                          type: integer
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the review is associated.

                            '
                          type: integer
                      type: object
                    description: 'A product review model.

                      '
                    title: Product Review
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Review Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update a Product Review
      tags:
      - Product Reviews
      x-codegen-request-body-name: productReview
  /catalog/products/{product_id}/variants:
    get:
      description: Returns a list of product *Variants*. Optional parameters can be
        passed in.
      operationId: getVariantsByProductId
      parameters:
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - bin_picking_number: ''
                  calculated_price: 10
                  calculated_weight: 2
                  cost_price: 0
                  depth: 5
                  fixed_cost_shipping_price: 10
                  gtin: ''
                  height: 5
                  id: 382
                  image_url: ''
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: false
                  map_price: {}
                  mpn: ''
                  option_values:
                  - id: 174
                    label: Beige
                    option_display_name: Color
                    option_id: 220
                  price: 10
                  product_id: 192
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  retail_price: 10
                  sale_price: 8
                  sku: SMIT
                  sku_id: 348
                  upc: ''
                  weight: 4
                  width: 5
                - bin_picking_number: ''
                  calculated_price: 25
                  calculated_weight: 1
                  cost_price: 25
                  depth: 5
                  fixed_cost_shipping_price: 10
                  gtin: ''
                  height: 5
                  id: 383
                  image_url: ''
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: false
                  map_price: {}
                  mpn: ''
                  option_values:
                  - id: 175
                    label: Grey
                    option_display_name: Color
                    option_id: 220
                  price: 25
                  product_id: 192
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  retail_price: 25
                  sale_price: 20
                  sku: SMIT-1
                  sku_id: 349
                  upc: ''
                  weight: 2
                  width: 5
                - bin_picking_number: ''
                  calculated_price: 25
                  calculated_weight: 1
                  cost_price: 25
                  depth: 5
                  fixed_cost_shipping_price: 10
                  gtin: ''
                  height: 5
                  id: 384
                  image_url: ''
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: false
                  map_price: {}
                  mpn: ''
                  option_values:
                  - id: 176
                    label: Black
                    option_display_name: Color
                    option_id: 220
                  price: 25
                  product_id: 192
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  retail_price: 25
                  sale_price: 20
                  sku: SMIT-2
                  sku_id: 350
                  upc: ''
                  weight: 2
                  width: 5
                meta:
                  pagination:
                    count: 3
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 3
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/productVariant_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Variant Collection Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get All Product Variants
      tags:
      - Product Variants
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Product Variant*.


        **Required Fields**

        * sku

        * option_values


        **Read-Only Fields**

        * id


        **Limits**

        * 600 SKUs per product limit.

        * 255 characters SKU length limit.


        Variants need to be created one at a time using this endpoint. To use a variant
        array and create products and variants in the same call use the [Create Products](/docs/rest-management/catalog/products#create-a-product)
        during the initial product creation.'
      operationId: createVariant
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productVariant_Post'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      bin_picking_number: string
                      calculated_price: 0
                      calculated_weight: 0
                      cost_price: 0
                      depth: 0
                      fixed_cost_shipping_price: 0
                      gtin: 012345678905
                      height: 0
                      id: 0
                      inventory_level: 0
                      inventory_warning_level: 0
                      is_free_shipping: true
                      mpn: string
                      option_values:
                      - id: 146
                        label: Beige
                        option_display_name: Color
                        option_id: 151
                      price: 0
                      product_id: 0
                      purchasing_disabled: true
                      purchasing_disabled_message: string
                      retail_price: 0
                      sale_price: 0
                      sku: string
                      sku_id: 0
                      upc: string
                      weight: 0
                      width: 0
                    meta: {}
                example-2:
                  value:
                    data:
                      bin_picking_number: ''
                      calculated_price: 25
                      calculated_weight: 1
                      cost_price: 25
                      depth: 5
                      fixed_cost_shipping_price: 10
                      gtin: ''
                      height: 5
                      id: 384
                      image_url: ''
                      inventory_level: 0
                      inventory_warning_level: 0
                      is_free_shipping: false
                      map_price: {}
                      mpn: ''
                      option_values:
                      - id: 176
                        label: Black
                        option_display_name: Color
                        option_id: 220
                      price: 25
                      product_id: 192
                      purchasing_disabled: false
                      purchasing_disabled_message: ''
                      retail_price: 25
                      sale_price: 20
                      sku: SMIT-2
                      sku_id: 350
                      upc: ''
                      weight: 2
                      width: 5
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Variant Response
                type: object
          description: ''
        '207':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  errors:
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: "Multi-status. The product information was updated successfully,\
            \ but the inventory data failed to update. \n\nVerify that the inventory-related\
            \ updates are well-formed and correct; for example, that they donʼt result\
            \ in negative stock levels. Then consider updating the inventory data\
            \ again."
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Create a Product Variant
      tags:
      - Product Variants
      x-codegen-request-body-name: Variant
  /catalog/products/{product_id}/variants/{variant_id}:
    delete:
      description: Deletes a product *Variant*.
      operationId: deleteVariantById
      parameters:
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product Variant
      tags:
      - Product Variants
    get:
      description: Returns a single product *Variant*. Optional parameters can be
        passed in.
      operationId: getVariantById
      parameters:
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  bin_picking_number: ''
                  calculated_price: 25
                  calculated_weight: 1
                  cost_price: 25
                  depth: 5
                  fixed_cost_shipping_price: 10
                  gtin: ''
                  height: 5
                  id: 384
                  image_url: ''
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: false
                  map_price: {}
                  mpn: ''
                  option_values:
                  - id: 176
                    label: Black
                    option_display_name: Color
                    option_id: 220
                  price: 25
                  product_id: 192
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  retail_price: 25
                  sale_price: 20
                  sku: SMIT-2
                  sku_id: 350
                  upc: ''
                  weight: 2
                  width: 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Variant Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Variant
      tags:
      - Product Variants
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/VariantIdParam'
    put:
      description: Updates a product *Variant*.
      operationId: updateVariant
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productVariant_Put'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  bin_picking_number: '0'
                  calculated_price: 85
                  calculated_weight: 1
                  cost_price: 0
                  depth: 22
                  fixed_cost_shipping_price: 0
                  gtin: ''
                  height: 14.6
                  id: 65
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: false
                  map_price: 0
                  mpn: TR-SML02
                  option_values: []
                  price: 89
                  product_id: 81
                  purchasing_disabled: true
                  purchasing_disabled_message: This item is not available.
                  retail_price: 89
                  sale_price: 85
                  sku: OTS
                  sku_id: 10
                  upc: ''
                  weight: 1
                  width: 2
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Variant Response
                type: object
          description: ''
        '207':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  errors:
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                type: object
          description: "Multi-status. The product information was updated successfully,\
            \ but the inventory data failed to update. \n\nVerify that the inventory-related\
            \ updates are well-formed and correct; for example, that they donʼt result\
            \ in negative stock levels. Then consider updating the inventory data\
            \ again."
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update a Product Variant
      tags:
      - Product Variants
      x-codegen-request-body-name: Variant
  /catalog/products/{product_id}/variants/{variant_id}/image:
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/VariantIdParam'
    post:
      description: "Creates a *Variant Image*.\n\nThe image will show on the storefront\
        \ when the value is selected.\n\n **Required Fields**\n- image_file: Form\
        \ posts. Files larger than 1 MB are not accepted\n- image_url: Any publicly\
        \ available URL"
      operationId: createVariantImage
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              description: An object containing a publicly accessible image URL, or
                a form post that contains an image file.
              properties:
                image_url:
                  description: 'A public URL for a GIF, JPEG, or PNG image. Limit
                    of 8MB per file.

                    '
                  type: string
              type: object
          multipart/form-data:
            schema:
              description: An object containing a publicly accessible image URL, or
                a form post that contains an image file.
              properties:
                image_url:
                  description: 'A public URL for a GIF, JPEG, or PNG image. Limit
                    of 8MB per file.

                    '
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  image_url: https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png
                meta: {}
              schema:
                description: 'Image Response returns for:

                  * Create Variant Image

                  * Create Modifier Image

                  * Create Category Image

                  * Create Brand Image'
                properties:
                  data:
                    description: An object containing a publicly accessible image
                      URL, or a form post that contains an image file.
                    properties:
                      image_url:
                        description: 'A public URL for a GIF, JPEG, or PNG image.
                          Limit of 8MB per file.

                          '
                        type: string
                    title: Resource Image
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Image Response
                type: object
          description: '`image_url` is returned for both `image_file` and `image_url`.'
        '400':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Bad Request. The requested resource could not be downloaded
            and may be invalid. Possible reasons include malformed request syntax
            or the file host blocking requests.
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'Image was not valid. This is the result of a missing `image_file`
            field or of an incorrect file type. See the response for more details.

            '
        '500':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: Returns for an `image_file` larger than 1 MB.
      summary: Create a Variant Image
      tags:
      - Product Variants
      x-codegen-request-body-name: body
  /catalog/products/{product_id}/variants/{variant_id}/metafields:
    get:
      description: Returns a list of product variant *Metafields*. Optional parameters
        can be passed in.
      operationId: getVariantMetafieldsByProductIdAndVariantId
      parameters:
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: 'Filter based on a metafield''s key.

          '
        in: query
        name: key
        schema:
          type: string
      - description: Filter based on a metafield's namespace.
        in: query
        name: namespace
        schema:
          type: string
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/categoriesTree_Resp'
                title: Meta Field Collection Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get All Product Variant Metafields
      tags:
      - Product Variants Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/VariantIdParam'
    post:
      description: 'Creates a product variant *Metafield*.


        **Required Fields:**

        * permission_set

        * namespace

        * key

        * value


        **Read-Only Fields**

        * id


        **Note:** The maxiumum number of metafields allowed on each order, product,
        category, variant, or brand is 250 per client ID. For more information, see
        [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits)
        in the Help Center.'
      operationId: createVariantMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                  description: Where products are located
                  id: 4
                  key: location_id
                  namespace: App Namespace
                  permission_set: app_only
                  resource_id: 137
                  resource_type: variant
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was in conflict with another `Metafield`.
            This can be the result of duplicate unique-key combinations of the app''s
            client id, namespace, key, resource_type, and resource_id.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Metafield` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Product Variant Metafield
      tags:
      - Product Variants Metafields
      x-codegen-request-body-name: Metafield
  /catalog/products/{product_id}/variants/{variant_id}/metafields/{metafield_id}:
    delete:
      description: Deletes a product variant *Metafield*.
      operationId: deleteVariantMetafieldById
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Variant Metafield
      tags:
      - Product Variants Metafields
    get:
      description: Returns a single product variant *Metafield*. Optional parameters
        can be passed in.
      operationId: getVariantMetafieldByProductIdAndVariantId
      parameters:
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                  description: Where products are located
                  id: 8
                  key: location_id
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_id: 158
                  resource_type: variant
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Variant Metafields
      tags:
      - Product Variants Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/VariantIdParam'
    - $ref: '#/components/parameters/MetafieldIdParam'
    put:
      description: "Updates a product variant *Metafield*.\n\n**Required Fields:**\n\
        * none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified\
        \ by the app (API credentials) that created the metafield:\n\t* namespace\n\
        \t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`,\
        \ `key`, and `permission_set` fields using a client ID different from the\
        \ one used to create those metafields will result in a 403 error message. "
      operationId: updateVariantMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: 'The ID of the `Metafield`.

          '
        in: path
        name: metafield_id
        required: true
        schema:
          type: integer
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                  description: Where products are located
                  id: 8
                  key: location_id
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_id: 158
                  resource_type: variant
                  value: Shelf 3, Bin 5
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Metafield Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update Product Variant Metafields
      tags:
      - Product Variants Metafields
      x-codegen-request-body-name: Metafield
  /catalog/products/{product_id}/videos:
    get:
      description: Returns a list of *Product Videos*. Optional parameters can be
        passed in.
      operationId: getProductVideos
      parameters:
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - description: Learn how to create and edit marketing banners. Marketing
                    banners are a great way to advertise sales, display coupon codes,
                    and add design elements. Let’s take a look at how you can leverage
                    banners to convert your store’s visitors into paying customers.
                  id: 6
                  length: 01:54
                  product_id: 192
                  sort_order: 1
                  title: Creating and Editing Banners | BigCommerce Tutorials
                  type: youtube
                  video_id: PqBTp23RLhI
                - description: 'These are the core principles upon which BigCommerce
                    was built, guiding what we do and how we do it. Each employee
                    learns them, loves them and lives them. Our merchants benefit
                    from them every time they use our product or get help from our
                    support team.


                    Join the BigCommerce team and help us build software that changes
                    lives!


                    https://www.bigcommerce.com/careers/'
                  id: 7
                  length: 03:30
                  product_id: 192
                  sort_order: 2
                  title: BigCommerce Company Values
                  type: youtube
                  video_id: EhYBjzqd-nI
                - description: 'We''ve been named one of Austin American-Statesman''s
                    Top WorkPlaces for the 5th year in a row! Here''s what some employees
                    have to say:


                    “I am given the freedom and trust to make a difference.”


                    “Everyone believes in the product and growing the company.”


                    “I''m appreciated for the work I do and there is room to grown
                    within the company.”


                    Work With Us!

                    http://www.bigcommerce.com/careers.php'
                  id: 8
                  length: 01:37
                  product_id: 192
                  sort_order: 3
                  title: TOP WORKPLACES 2016 - Austin American Statesman + BigCommerce
                  type: youtube
                  video_id: vAUdo4kRjrU
                meta:
                  pagination:
                    count: 3
                    current_page: 1
                    links:
                      current: ?page=1&limit=50
                    per_page: 50
                    total: 3
                    total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/productVideo_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Product Video Collection Response
                type: object
          description: ''
      summary: Get All Product Videos
      tags:
      - Product Videos
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    post:
      description: 'Creates a *Product Video*.


        **Required Fields**

        * video_id


        **Read-Only Fields**

        * id


        Publicly accessible URLs are valid parameters.

        Videos must be loaded through YouTube at this time.'
      operationId: createProductVideo
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Product Video properties.
                properties:
                  description:
                    description: 'The description for the video. If left blank, this
                      will be filled in according to data on a host site.

                      '
                    example: A video about documenation
                    type: string
                  sort_order:
                    description: 'The order in which the video will be displayed on
                      the product page. Higher integers give the video a lower priority.
                      When updating, if the video is given a lower priority, all videos
                      with a `sort_order` the same as or greater than the video''s
                      new `sort_order` value will have their `sort_order`s reordered.

                      '
                    example: 1
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  title:
                    description: 'The title for the video. If left blank, this will
                      be filled in according to data on a host site.

                      '
                    example: Writing Great Documentation
                    maxLength: 255
                    minLength: 0
                    type: string
                  type:
                    description: 'The video type (a short name of a host site).

                      '
                    enum:
                    - youtube
                    type: string
                title: Product Video Base
              - properties:
                  video_id:
                    description: 'The ID of the video on a host site.

                      '
                    example: z3fRu9pkuXE
                    maxLength: 25
                    minLength: 0
                    type: string
                    x-required:
                    - post
              description: 'The model for a POST to create a video on a product.

                '
              title: Product Video Post
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                description: Company Values
                sort_order: 1
                title: Your Video
                type: youtube
                video_id: 123345AA
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    allOf:
                    - description: Common Product Video properties.
                      properties:
                        description:
                          description: 'The description for the video. If left blank,
                            this will be filled in according to data on a host site.

                            '
                          type: string
                        sort_order:
                          description: 'The order in which the video will be displayed
                            on the product page. Higher integers give the video a
                            lower priority. When updating, if the video is given a
                            lower priority, all videos with a `sort_order` the same
                            as or greater than the video''s new `sort_order` value
                            will have their `sort_order`s reordered.

                            '
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                        title:
                          description: 'The title for the video. If left blank, this
                            will be filled in according to data on a host site.

                            '
                          maxLength: 255
                          minLength: 0
                          type: string
                        type:
                          description: 'The video type (a short name of a host site).

                            '
                          enum:
                          - youtube
                          type: string
                      title: Product Video Base
                      type: object
                    - properties:
                        id:
                          description: 'The unique numeric ID of the product video;
                            increments sequentially.

                            '
                          type: integer
                        length:
                          description: 'Length of the video. This will be filled in
                            according to data on a host site.

                            '
                          type: string
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the image is associated.

                            '
                          type: integer
                        video_id:
                          description: 'The ID of the video on a host site.

                            '
                          type: string
                      type: object
                    description: 'A product video model.

                      '
                    title: Product Video
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Video Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Create a Product Video
      tags:
      - Product Videos
      x-codegen-request-body-name: productVideo
  /catalog/products/{product_id}/videos/{id}:
    delete:
      description: Deletes a *Product Video*.
      operationId: deleteProductVideo
      parameters:
      - description: The BigCommerce ID of the `Video`
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Product Video
      tags:
      - Product Videos
    get:
      description: Returns a single *Product Video*. Optional parameters can be passed
        in.
      operationId: getProductVideoById
      parameters:
      - description: The BigCommerce ID of the `Video`
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                description: Company Values
                sort_order: 1
                title: Your Video
                type: youtube
                video_id: 123345AA
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    $ref: '#/components/schemas/productVideo_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Video Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Product Video
      tags:
      - Product Videos
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ProductIdParam'
    - $ref: '#/components/parameters/VideoIdParam'
    put:
      description: 'Updates a *Product Video.


        **Required Fields**

        * none


        **Read-Only Fields**

        * id'
      operationId: updateProductVideo
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: The BigCommerce ID of the `Video`
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Product Video properties.
                properties:
                  description:
                    description: 'The description for the video. If left blank, this
                      will be filled in according to data on a host site.

                      '
                    type: string
                  sort_order:
                    description: 'The order in which the video will be displayed on
                      the product page. Higher integers give the video a lower priority.
                      When updating, if the video is given a lower priority, all videos
                      with a `sort_order` the same as or greater than the video''s
                      new `sort_order` value will have their `sort_order`s reordered.

                      '
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  title:
                    description: 'The title for the video. If left blank, this will
                      be filled in according to data on a host site.

                      '
                    maxLength: 255
                    minLength: 0
                    type: string
                  type:
                    description: 'The video type (a short name of a host site).

                      '
                    enum:
                    - youtube
                    type: string
                title: Product Video Base
                type: object
              - properties:
                  id:
                    description: 'The unique numeric ID of the product video; increments
                      sequentially.

                      '
                    type: integer
                    x-required:
                    - put
                type: object
              description: 'The model for a PUT to update a video on a product.

                '
              title: Product Video Put
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                description: Company Values
                sort_order: 1
                title: Your Video
                type: youtube
                video_id: 123345AA
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    allOf:
                    - description: Common Product Video properties.
                      properties:
                        description:
                          description: 'The description for the video. If left blank,
                            this will be filled in according to data on a host site.

                            '
                          type: string
                        sort_order:
                          description: 'The order in which the video will be displayed
                            on the product page. Higher integers give the video a
                            lower priority. When updating, if the video is given a
                            lower priority, all videos with a `sort_order` the same
                            as or greater than the video''s new `sort_order` value
                            will have their `sort_order`s reordered.

                            '
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                        title:
                          description: 'The title for the video. If left blank, this
                            will be filled in according to data on a host site.

                            '
                          maxLength: 255
                          minLength: 0
                          type: string
                        type:
                          description: 'The video type (a short name of a host site).

                            '
                          enum:
                          - youtube
                          type: string
                      title: Product Video Base
                      type: object
                    - properties:
                        id:
                          description: 'The unique numeric ID of the product video;
                            increments sequentially.

                            '
                          type: integer
                        length:
                          description: 'Length of the video. This will be filled in
                            according to data on a host site.

                            '
                          type: string
                        product_id:
                          description: 'The unique numeric identifier for the product
                            with which the image is associated.

                            '
                          type: integer
                        video_id:
                          description: 'The ID of the video on a host site.

                            '
                          type: string
                      type: object
                    description: 'A product video model.

                      '
                    title: Product Video
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Product Video Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Update a Product Video
      tags:
      - Product Videos
      x-codegen-request-body-name: productVideo
  /catalog/summary:
    get:
      description: 'Returns a lightweight inventory summary from the BigCommerce Catalog.


        The inventory summary includes:

        * "inventory_count"

        * "variant_count"

        * "inventory_value"

        * "highest_variant_price"

        * "average_variant_price"

        * "lowest_variant_price"

        * "oldest_variant_date"

        * "newest_variant_date"

        * "primary_category_id"

        * "primary_category_name"'
      operationId: getCatalogSummary
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: Catalog Summary object describes a lightweight summary
                      of the catalog.
                    properties:
                      average_variant_price:
                        description: Average price of all variants
                        example: 83.07978261
                        format: double
                        type: number
                      highest_variant_price:
                        description: Highest priced variant
                        example: 249
                        format: double
                        type: number
                      inventory_count:
                        description: 'A count of all inventory items in the catalog.

                          '
                        example: 2000
                        type: integer
                      inventory_value:
                        description: 'Total value of store''s inventory.

                          '
                        example: 267000
                        format: double
                        type: number
                      lowest_variant_price:
                        description: Lowest priced variant in the store
                        example: '7'
                        type: string
                      newest_variant_date:
                        example: '2018-08-16T00:00:00+00:00'
                        type: string
                      oldest_variant_date:
                        example: '2018-08-15T00:00:00+00:00'
                        type: string
                      primary_category_id:
                        description: 'ID of the category containing the most products.

                          '
                        example: 23
                        type: integer
                      primary_category_name:
                        description: 'Name of the category containing the most products.

                          '
                        example: Shop All
                        type: string
                      variant_count:
                        description: Total number of variants
                        example: 46
                        type: integer
                    title: Catalog Summary
                    type: object
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                title: Catalog Summary Response
                type: object
          description: ''
      summary: Get a Catalog Summary
      tags:
      - Summary
    parameters:
    - $ref: '#/components/parameters/Accept'
  /catalog/trees:
    delete:
      description: Deletes *Category Trees*. A filter must be supplied with the endpoint.
      operationId: DeleteCategoryTrees
      parameters:
      - in: query
        name: id:in
        schema:
          type: string
      responses:
        '204':
          description: Deleted
      summary: Delete Category Trees
      tags:
      - Category Trees
    get:
      description: Returns a list of *Category Trees*.
      operationId: GetCategoryTrees
      parameters:
      - in: query
        name: id:in
        schema:
          type: string
      - in: query
        name: channel_id:in
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - channels:
                  - 0
                  id: 0
                  name: string
                meta:
                  pagination:
                    count: 5
                    current_page: 1
                    links:
                      current: ?limit=5&page=1
                      next: ?limit=5&page=2
                    per_page: 5
                    total: 246
                    total_pages: 50
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Tree'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
                type: object
          description: List of category trees.
      summary: Get All Category Trees
      tags:
      - Category Trees
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Upserts *Category Trees*. \n\nIf a tree object contains an ID,\
        \ it is processed as an update operation using that ID. If no ID is provided,\
        \ a new tree is created.\n\n**Usage Notes**\n* `channel_id` is required to\
        \ create a *Category Tree*. You can assign one `channel_id` to one category\
        \ tree.\n"
      operationId: UpsertCategoryTrees
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            example:
            - channels:
              - 0
              id: 0
              name: string
            schema:
              items:
                $ref: '#/components/schemas/Tree'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  channels:
                  - 0
                  id: 0
                  name: string
                meta:
                  description: Empty meta object; reserved for use later.
                  properties: {}
                  type: object
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Tree'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: Created a category tree.
        '422':
          content:
            application/json:
              example:
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
                instance: string
                status: 0
                title: string
                type: string
              schema:
                $ref: '#/components/schemas/beta4ErrorResponse'
          description: The Channel was not valid. See the response for more details.
      summary: Upsert Category Trees
      tags:
      - Category Trees
  /catalog/trees/categories:
    delete:
      description: "Deletes categories. \n\nTo delete a specific category in a tree,\
        \ provide a category id."
      operationId: deleteTreeCategories
      parameters:
      - in: query
        name: category_uuid:in
        schema:
          type: string
      - in: query
        name: category_id:in
        schema:
          type: string
      - in: query
        name: tree_id:in
        schema:
          type: string
      - in: query
        name: parent_id:in
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessNoContentResponse'
          description: Categories are deleted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Bad request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Server error
      summary: Delete Categories
      tags:
      - Categories Batch
    get:
      description: "Returns a list of categories. \n\nTo get a specific category in\
        \ a tree, provide a category id."
      operationId: getAllCategories
      parameters:
      - in: query
        name: category_uuid:in
        schema:
          type: string
      - in: query
        name: category_uuid:not_in
        schema:
          type: string
      - in: query
        name: category_id:in
        schema:
          type: string
      - in: query
        name: category_id:not_in
        schema:
          type: string
      - in: query
        name: tree_id:in
        schema:
          type: string
      - in: query
        name: tree_id:not_in
        schema:
          type: string
      - in: query
        name: parent_id:in
        schema:
          type: string
      - in: query
        name: parent_id:not_in
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name:like
        schema:
          type: string
      - in: query
        name: page_title
        schema:
          type: string
      - in: query
        name: page_title:like
        schema:
          type: string
      - in: query
        name: keyword
        schema:
          type: string
      - in: query
        name: is_visible
        schema:
          type: boolean
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: include_fields
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                    - default_product_sort: use_store_settings
                      description: <p>We offer a wide variety of products perfect
                        for relaxing</p>
                      id: 0
                      image_url: https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png
                      is_visible: true
                      layout_file: category.html
                      meta_description: string
                      meta_keywords:
                      - string
                      name: Bath
                      page_title: Bath
                      parent_id: 2
                      search_keywords: string
                      sort_order: 3
                      url:
                        is_customized: true
                        path: string
                      views: 1050
                    meta:
                      pagination:
                        count: 5
                        current_page: 1
                        links:
                          current: ?limit=5&page=2
                          next: ?limit=5&page=3
                          previous: ?limit=5&page=1
                        per_page: 5
                        total: 246
                        total_pages: 50
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Category'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPagination'
                type: object
          description: List of categories.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Internal Server Error
      summary: Get All Categories
      tags:
      - Categories Batch
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Creates new categories. \n\nCreating a category requires:\n -\
        \ `name`\n - `url` \n - `tree_id` or `parent_id` "
      operationId: createCategories
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategories'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Created
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialSuccessResponse'
          description: Multi-Status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Bad Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The Category was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Internal Server Error
      summary: Create Categories
      tags:
      - Categories Batch
    put:
      description: "Updates existing categories. \n\n To update a specific category\
        \ in a tree, provide a category id."
      operationId: updateCategories
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategories'
        required: true
      responses:
        '200':
          description: OK
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessNoContentResponse'
          description: No Content
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialSuccessNoContentResponse'
          description: Partial success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Bad request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The Category was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
          description: Internal Server Error
      summary: Update Categories
      tags:
      - Categories Batch
  /catalog/trees/{tree_id}/categories:
    get:
      description: Returns a *Category Tree*.
      operationId: GetCategoryTreeByTreeId
      parameters:
      - description: Max depth for a tree of categories.
        in: query
        name: depth
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - children:
                  - string
                  depth: 0
                  id: 0
                  is_visible: true
                  name: string
                  parent_id: 0
                  path:
                  - 0
                meta:
                  description: Empty meta object; reserved for use later.
                  properties: {}
                  type: object
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/CategoryNode'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                type: object
          description: Categories tree
        '404':
          content:
            application/json:
              example:
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
                instance: string
                status: 0
                title: string
                type: string
              schema:
                $ref: '#/components/schemas/beta4ErrorResponse'
          description: The tree was not found.
      summary: Get a Category Tree
      tags:
      - Category Trees
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: tree_id
      required: true
      schema:
        type: string
  /catalog/variants:
    get:
      description: Returns a list of all variants in your catalog. Optional parameters
        can be passed in.
      operationId: getVariants
      parameters:
      - description: 'Filter items by id.

          '
        in: query
        name: id
        schema:
          type: integer
      - description: 'Filter items by sku.

          '
        in: query
        name: sku
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Fields to include, in a comma-separated list. The ID and the
          specified fields will be returned.
        in: query
        name: include_fields
        schema:
          type: string
      - description: Fields to exclude, in a comma-separated list. The specified fields
          will be excluded from a response. The ID cannot be excluded.
        in: query
        name: exclude_fields
        schema:
          type: string
      - description: A comma-separated list of IDs of products whose variants were
          requested. For example:`?product_id=:id``?product_id:in=77,80,81`
        in: query
        name: product_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      allOf:
                      - description: Common Variant properties.
                        properties:
                          bin_picking_number:
                            description: Identifies where in a warehouse the variant
                              is located.
                            maxLength: 255
                            minLength: 0
                            type: string
                            x-nullable: true
                          cost_price:
                            description: The cost price of the variant. Not affected
                              by Price List prices.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          depth:
                            description: 'Depth of the variant, which can be used
                              when calculating shipping costs. If this value is `null`,
                              the product''s default depth (set in the Product resource''s
                              `depth` field) will be used as the base depth.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          fixed_cost_shipping_price:
                            description: 'A fixed shipping cost for the variant. If
                              defined, this value will be used during checkout instead
                              of normal shipping-cost calculation.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          height:
                            description: 'Height of the variant, which can be used
                              when calculating shipping costs. If this value is `null`,
                              the product''s default height (set in the Product resource''s
                              `height` field) will be used as the base height.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          inventory_level:
                            description: Inventory level for the variant, which is
                              used when the product’s inventory_tracking is set to
                              `variant`.
                            type: integer
                            x-nullable: true
                          inventory_warning_level:
                            description: When the variant hits this inventory level,
                              it is considered low stock.
                            type: integer
                            x-nullable: true
                          is_free_shipping:
                            description: 'Flag used to indicate whether the variant
                              has free shipping. If `true`, the shipping cost for
                              the variant will be zero.

                              '
                            type: boolean
                          price:
                            description: This variant’s base price on the storefront.
                              If a Price List ID is used, the Price List value will
                              be used. If a Price List ID is not used, and this value
                              is `null`, the product’s default price (set in the Product
                              resource’s `price` field) will be used as the base price.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          purchasing_disabled:
                            description: If `true`, this variant will not be purchasable
                              on the storefront.
                            type: boolean
                          purchasing_disabled_message:
                            description: If `purchasing_disabled` is `true`, this
                              message should show on the storefront when the variant
                              is selected.
                            maxLength: 255
                            minLength: 0
                            type: string
                          retail_price:
                            description: This variant’s retail price on the storefront.
                              If a Price List ID is used, the Price List value will
                              be used. If a Price List ID is not used, and this value
                              is null, the product’s retail price (set in the Product
                              resource’s `price` field) will be used as the retail
                              price.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          sale_price:
                            description: This variant’s sale price on the storefront.
                              If a Price List ID is used, the Price List value will
                              be used. If a Price List ID is not used, and this value
                              is null, the product’s sale price (set in the Product
                              resource’s `price` field) will be used as the sale price.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          upc:
                            description: The UPC code used in feeds for shopping comparison
                              sites and external channel integrations.
                            type: string
                            x-nullable: true
                          weight:
                            description: This variant’s base weight on the storefront.
                              If this value is null, the product’s default weight
                              (set in the Product resource’s weight field) will be
                              used as the base weight.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          width:
                            description: 'Width of the variant, which can be used
                              when calculating shipping costs. If this value is `null`,
                              the product''s default width (set in the Product resource''s
                              `width` field) will be used as the base width.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                        title: Variant Base
                        type: object
                      - properties:
                          calculated_price:
                            description: 'The price of the variant as seen on the
                              storefront. This price takes into account `sale_price`
                              and any price adjustment rules that are applicable to
                              this variant.

                              '
                            format: double
                            type: number
                          id:
                            type: integer
                          option_values:
                            description: Array of option and option values IDs that
                              make up this variant. Will be empty if the variant is
                              the product's base variant.
                            items:
                              allOf:
                              - description: Common Option Value Product properties.
                                properties:
                                  label:
                                    description: 'The label of the option value.

                                      '
                                    example: Beige
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    x-required:
                                    - post
                                  option_display_name:
                                    description: 'The name of the option.

                                      '
                                    example: Color
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    x-required:
                                    - post
                                title: Option Value Product Base
                                type: object
                              - properties:
                                  id:
                                    type: integer
                                  option_id:
                                    type: integer
                                type: object
                              title: Option Value Variant
                              type: object
                            type: array
                          product_id:
                            type: integer
                          sku:
                            type: string
                          sku_id:
                            description: Read-only reference to v2 API's SKU ID. Null
                              if it is a base variant.
                            type: integer
                            x-nullable: true
                        type: object
                      type: object
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                title: Variant Collection Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: The resource was not found.
      summary: Get All Variants
      tags:
      - Variants
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Updates a batch of `variant` objects. At the time of writing, the
        limit is 50 variants. This limit is subject to change.
      operationId: updateVariantsBatch
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                allOf:
                - description: Common Variant properties.
                  properties:
                    bin_picking_number:
                      description: Identifies where in a warehouse the variant is
                        located.
                      maxLength: 255
                      minLength: 0
                      type: string
                      x-nullable: true
                    cost_price:
                      description: The cost price of the variant. Not affected by
                        Price List prices.
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    depth:
                      description: 'Depth of the variant, which can be used when calculating
                        shipping costs. If this value is `null`, the product''s default
                        depth (set in the Product resource''s `depth` field) will
                        be used as the base depth.

                        '
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    fixed_cost_shipping_price:
                      description: 'A fixed shipping cost for the variant. If defined,
                        this value will be used during checkout instead of normal
                        shipping-cost calculation.

                        '
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    height:
                      description: 'Height of the variant, which can be used when
                        calculating shipping costs. If this value is `null`, the product''s
                        default height (set in the Product resource''s `height` field)
                        will be used as the base height.

                        '
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    inventory_level:
                      description: Inventory level for the variant, which is used
                        when the product’s inventory_tracking is set to `variant`.
                      type: integer
                      x-nullable: true
                    inventory_warning_level:
                      description: When the variant hits this inventory level, it
                        is considered low stock.
                      type: integer
                      x-nullable: true
                    is_free_shipping:
                      description: 'Flag used to indicate whether the variant has
                        free shipping. If `true`, the shipping cost for the variant
                        will be zero.

                        '
                      type: boolean
                    price:
                      description: This variant’s base price on the storefront. If
                        a Price List ID is used, the Price List value will be used.
                        If a Price List ID is not used, and this value is `null`,
                        the product’s default price (set in the Product resource’s
                        `price` field) will be used as the base price.
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    purchasing_disabled:
                      description: If `true`, this variant will not be purchasable
                        on the storefront.
                      type: boolean
                    purchasing_disabled_message:
                      description: If `purchasing_disabled` is `true`, this message
                        should show on the storefront when the variant is selected.
                      maxLength: 255
                      minLength: 0
                      type: string
                    retail_price:
                      description: This variant’s retail price on the storefront.
                        If a Price List ID is used, the Price List value will be used.
                        If a Price List ID is not used, and this value is null, the
                        product’s retail price (set in the Product resource’s `price`
                        field) will be used as the retail price.
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    sale_price:
                      description: This variant’s sale price on the storefront. If
                        a Price List ID is used, the Price List value will be used.
                        If a Price List ID is not used, and this value is null, the
                        product’s sale price (set in the Product resource’s `price`
                        field) will be used as the sale price.
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    upc:
                      description: The UPC code used in feeds for shopping comparison
                        sites and external channel integrations.
                      type: string
                      x-nullable: true
                    weight:
                      description: This variant’s base weight on the storefront. If
                        this value is null, the product’s default weight (set in the
                        Product resource’s weight field) will be used as the base
                        weight.
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                    width:
                      description: 'Width of the variant, which can be used when calculating
                        shipping costs. If this value is `null`, the product''s default
                        width (set in the Product resource''s `width` field) will
                        be used as the base width.

                        '
                      format: double
                      minimum: 0
                      type: number
                      x-nullable: true
                  title: Variant Base
                  type: object
                - properties:
                    id:
                      type: integer
                      x-required:
                      - put
                  type: object
                description: 'The model for a PUT to update variants on a product.

                  '
                title: Variant Put
                type: object
              title: Variants Collection Put
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      allOf:
                      - description: Common Variant properties.
                        properties:
                          bin_picking_number:
                            description: Identifies where in a warehouse the variant
                              is located.
                            maxLength: 255
                            minLength: 0
                            type: string
                            x-nullable: true
                          cost_price:
                            description: The cost price of the variant. Not affected
                              by Price List prices.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          depth:
                            description: 'Depth of the variant, which can be used
                              when calculating shipping costs. If this value is `null`,
                              the product''s default depth (set in the Product resource''s
                              `depth` field) will be used as the base depth.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          fixed_cost_shipping_price:
                            description: 'A fixed shipping cost for the variant. If
                              defined, this value will be used during checkout instead
                              of normal shipping-cost calculation.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          height:
                            description: 'Height of the variant, which can be used
                              when calculating shipping costs. If this value is `null`,
                              the product''s default height (set in the Product resource''s
                              `height` field) will be used as the base height.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          inventory_level:
                            description: Inventory level for the variant, which is
                              used when the product’s inventory_tracking is set to
                              `variant`.
                            type: integer
                            x-nullable: true
                          inventory_warning_level:
                            description: When the variant hits this inventory level,
                              it is considered low stock.
                            type: integer
                            x-nullable: true
                          is_free_shipping:
                            description: 'Flag used to indicate whether the variant
                              has free shipping. If `true`, the shipping cost for
                              the variant will be zero.

                              '
                            type: boolean
                          price:
                            description: This variant’s base price on the storefront.
                              If a Price List ID is used, the Price List value will
                              be used. If a Price List ID is not used, and this value
                              is `null`, the product’s default price (set in the Product
                              resource’s `price` field) will be used as the base price.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          purchasing_disabled:
                            description: If `true`, this variant will not be purchasable
                              on the storefront.
                            type: boolean
                          purchasing_disabled_message:
                            description: If `purchasing_disabled` is `true`, this
                              message should show on the storefront when the variant
                              is selected.
                            maxLength: 255
                            minLength: 0
                            type: string
                          retail_price:
                            description: This variant’s retail price on the storefront.
                              If a Price List ID is used, the Price List value will
                              be used. If a Price List ID is not used, and this value
                              is null, the product’s retail price (set in the Product
                              resource’s `price` field) will be used as the retail
                              price.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          sale_price:
                            description: This variant’s sale price on the storefront.
                              If a Price List ID is used, the Price List value will
                              be used. If a Price List ID is not used, and this value
                              is null, the product’s sale price (set in the Product
                              resource’s `price` field) will be used as the sale price.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          upc:
                            description: The UPC code used in feeds for shopping comparison
                              sites and external channel integrations.
                            type: string
                            x-nullable: true
                          weight:
                            description: This variant’s base weight on the storefront.
                              If this value is null, the product’s default weight
                              (set in the Product resource’s weight field) will be
                              used as the base weight.
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                          width:
                            description: 'Width of the variant, which can be used
                              when calculating shipping costs. If this value is `null`,
                              the product''s default width (set in the Product resource''s
                              `width` field) will be used as the base width.

                              '
                            format: double
                            minimum: 0
                            type: number
                            x-nullable: true
                        title: Variant Base
                        type: object
                      - properties:
                          calculated_price:
                            description: 'The price of the variant as seen on the
                              storefront. This price takes into account `sale_price`
                              and any price adjustment rules that are applicable to
                              this variant.

                              '
                            format: double
                            type: number
                          id:
                            type: integer
                          option_values:
                            description: Array of option and option values IDs that
                              make up this variant. Will be empty if the variant is
                              the product's base variant.
                            items:
                              allOf:
                              - description: Common Option Value Product properties.
                                properties:
                                  label:
                                    description: 'The label of the option value.

                                      '
                                    example: Beige
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    x-required:
                                    - post
                                  option_display_name:
                                    description: 'The name of the option.

                                      '
                                    example: Color
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    x-required:
                                    - post
                                title: Option Value Product Base
                                type: object
                              - properties:
                                  id:
                                    type: integer
                                  option_id:
                                    type: integer
                                type: object
                              title: Option Value Variant
                              type: object
                            type: array
                          product_id:
                            type: integer
                          sku:
                            type: string
                          sku_id:
                            description: Read-only reference to v2 API's SKU ID. Null
                              if it is a base variant.
                            type: integer
                            x-nullable: true
                        type: object
                      type: object
                    type: array
                  meta:
                    description: Data about the response, including pagination and
                      collection totals.
                    properties:
                      pagination:
                        description: Data about the response, including pagination
                          and collection totals.
                        properties:
                          count:
                            description: 'Total number of items in the collection
                              response.

                              '
                            example: 36
                            type: integer
                          current_page:
                            description: 'The page you are currently on within the
                              collection.

                              '
                            example: 1
                            type: integer
                          links:
                            description: 'Pagination links for the previous and next
                              parts of the whole collection.

                              '
                            properties:
                              current:
                                description: 'Link to the current page returned in
                                  the response.

                                  '
                                example: ?page=1&limit=50
                                type: string
                              next:
                                description: 'Link to the next page returned in the
                                  response.

                                  '
                                type: string
                              previous:
                                description: 'Link to the previous page returned in
                                  the response.

                                  '
                                type: string
                            type: object
                          per_page:
                            description: 'The amount of items returned in the collection
                              per page, controlled by the limit parameter.

                              '
                            example: 50
                            type: integer
                          total:
                            description: 'Total number of items in the result set.

                              '
                            example: 36
                            type: integer
                          total_pages:
                            description: 'The total number of pages in the collection.

                              '
                            example: 1
                            type: integer
                        title: Pagination
                        type: object
                    title: Collection Meta
                    type: object
                title: Variant Collection Response
                type: object
          description: ''
        '413':
          content:
            application/json:
              example:
                errors: {}
                status: 413
                title: The request payload is too large. The maximum items allowed
                  in the array is 50
                type: /api-docs/getting-started/api-status-codes
          description: ''
        '422':
          content:
            application/json:
              schema:
                description: 'Errors during batch usage for the BigCommerce API.

                  '
                properties:
                  batch_errors:
                    items:
                      allOf:
                      - description: 'Error payload for the BigCommerce API.

                          '
                        properties:
                          instance:
                            type: string
                          status:
                            description: 'The HTTP status code.

                              '
                            type: integer
                          title:
                            description: 'The error title describing the particular
                              error.

                              '
                            type: string
                          type:
                            type: string
                        title: Base Error
                        type: object
                      - properties:
                          errors:
                            additionalProperties: true
                            properties: {}
                            title: Detailed Errors
                            type: object
                        type: object
                      title: Error Response
                      type: object
                    type: array
                title: Variants Batch Error Response
                type: object
          description: 'This is the result of missing required fields, or of invalid
            data. See the response for more details.

            '
      summary: Update Variants (Batch)
      tags:
      - Variants
      x-codegen-request-body-name: body
  /channels:
    get:
      description: 'Returns a list of *Channels*.


        Will always return the default BigCommerce storefront with an ID of `1`. This
        storefront is created by default when you provision a BigCommerce store.'
      operationId: listChannels
      parameters:
      - $ref: '#/components/parameters/include'
      - $ref: '#/components/parameters/available'
      - $ref: '#/components/parameters/status_in'
      - $ref: '#/components/parameters/type_in'
      - $ref: '#/components/parameters/platform_in'
      - $ref: '#/components/parameters/date_created'
      - $ref: '#/components/parameters/date_created_min'
      - $ref: '#/components/parameters/date_created_max'
      - $ref: '#/components/parameters/date_modified'
      - $ref: '#/components/parameters/date_modified_min'
      - $ref: '#/components/parameters/date_modified_max'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_without_currencies_resp'
        '422':
          $ref: '#/components/responses/invalid_filter_value_resp'
      summary: Get All Channels
      tags:
      - Channels
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: Creates a *Channel*.
      operationId: createChannel
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Create eBay Channel:
                $ref: '#/components/examples/create_channel_req_example'
            schema:
              $ref: '#/components/schemas/CreateChannelReq'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_without_currencies_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_channel_data_resp'
      summary: Create a Channel
      tags:
      - Channels
  /channels/currency-assignments:
    get:
      description: Returns a list of currency assignments for all channels.
      operationId: listAllCurrencyAssignments
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
      summary: Get All Channels Currency Assignments
      tags:
      - Channel Currency Assignments
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: Sets enabled currencies and default currency for multiple channels.
        Note that currencies must be added first in the **Settings > Setup > Currencies**
        settings from an active MSF-enabled BigCommerce Control Panel before the currencies
        can be assigned to a channel.
      operationId: createMultipleChannelsCurrencyAssignments
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Create Currency Assignments for Multiple Channels:
                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'
            schema:
              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'
      summary: Create Multiple Channels Currency Assignments
      tags:
      - Channel Currency Assignments
    put:
      description: Updates enabled currencies and default currency for multiple channels.
        Note that currencies must be added first in the **Settings > Setup > Currencies**
        settings from an active MSF-enabled BigCommerce Control Panel before the currencies
        can be assigned to a channel.
      operationId: updateMultipleChannelsCurrencyAssignments
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Update Currency Assignments for Multiple Channels:
                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'
            schema:
              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'
      summary: Update Multiple Channels Currency Assignments
      tags:
      - Channel Currency Assignments
  /channels/{channel_id}:
    get:
      description: Returns a *Channel*. Channel ID `1` returns the default BigCommerce
        storefront.
      operationId: getChannel
      parameters:
      - $ref: '#/components/parameters/include'
      responses:
        '200':
          $ref: '#/components/responses/single_channel_with_currencies_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
      summary: Get a Channel
      tags:
      - Channels
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    put:
      description: 'Updates a *Channel*.


        ## Updatable Fields


        The following fields can be updated.

        * `name`

        * `external_id`

        * `status`

        * `is_listable_from_ui`

        * `is_visible`

        * `config_meta`



        > #### Note

        > * Partial updates are supported. In most cases, if a field that *cannot*
        be updated is passed in, the API **will not** respond with an error. It returns
        a 200 response with the object, in which you will see the field(s) were not
        updated.

        > * `platform` and `type` cannot be updated after a channel is created.

        > * A channel with status `deleted` or `terminated` cannot be updated.'
      operationId: updateChannel
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Update a Facebook by Meta Channel:
                $ref: '#/components/examples/update_channel_req_example'
            schema:
              $ref: '#/components/schemas/UpdateChannelReq'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_without_currencies_resp'
        '404':
          $ref: '#/components/responses/channel_entity_not_found_resp'
        '409':
          $ref: '#/components/responses/duplicate_channel_resp'
        '422':
          $ref: '#/components/responses/invalid_channel_update_field_resp'
      summary: Update a Channel
      tags:
      - Channels
  /channels/{channel_id}/active-theme:
    get:
      description: 'Returns details of the theme active on the specified channel.

        Does not support active Blueprint (legacy) themes.'
      operationId: getChannelActiveTheme
      responses:
        '200':
          $ref: '#/components/responses/channel_active_theme_resp'
        '404':
          $ref: '#/components/responses/active_theme_not_found_resp'
      summary: Get a Channel Active Theme
      tags:
      - Channel Active Theme
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
  /channels/{channel_id}/channel-menus:
    delete:
      description: Deletes control panel side navigation menus for a channel.
      operationId: DeleteChannelMenus
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: integer
                  meta:
                    $ref: '#/components/schemas/EmptyMeta'
                type: object
                x-examples:
                  example-1:
                    data: 1
                    meta: {}
          description: ''
      summary: Delete Channel Menus
      tags:
      - Channel Menus
    get:
      description: 'Returns list of Control Panel side navigation menus for a channel.

        '
      operationId: get-channel-menus
      responses:
        '200':
          $ref: '#/components/responses/channel_menus_Resp'
      summary: Get Channel Menus
      tags:
      - Channel Menus
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    post:
      description: Creates or replaces list of control panel side navigation menus
        for a channel.
      operationId: postChannelMenus
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/channel_menus_Post'
      responses:
        '200':
          $ref: '#/components/responses/channel_menus_Resp'
      summary: Create Channel Menus
      tags:
      - Channel Menus
  /channels/{channel_id}/currency-assignments:
    delete:
      description: Deletes currency assignments for a specific channel. Once done,
        this channel will inherit the store’s currency settings.
      operationId: deleteSingleChannelCurrencyAssignments
      responses:
        '200':
          $ref: '#/components/responses/delete_currency_assignments_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
      summary: Delete Channel Currency Assignments
      tags:
      - Channel Currency Assignments
    get:
      description: Returns a list of currency assignments for a specific channel.
      operationId: getSingleChannelCurrencyAssignments
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
      summary: Get Channel Currency Assignments
      tags:
      - Channel Currency Assignments
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    post:
      description: Sets enabled currencies and default currency for a specific channel.
        Note that currencies must be added first in the **Settings > Setup > Currencies**
        settings from an active MSF-enabled BigCommerce Control Panel before the currencies
        can be assigned to a channel.
      operationId: createSingleChannelCurrencyAssignments
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Create Currency Assignments for a Channel:
                $ref: '#/components/examples/single_channel_currency_assignments_req_example'
            schema:
              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'
      summary: Create Channel Currency Assignments
      tags:
      - Channel Currency Assignments
    put:
      description: Updates enabled currencies and default currency for a specific
        channel. Note that currencies must be added first in the **Settings > Setup
        > Currencies** settings from an active MSF-enabled BigCommerce Control Panel
        before the currencies can be assigned to a channel.
      operationId: updateSingleChannelCurrencyAssignments
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Update Currency Assignments for a Channel:
                $ref: '#/components/examples/single_channel_currency_assignments_req_example'
            schema:
              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'
      summary: Update Channel Currency Assignments
      tags:
      - Channel Currency Assignments
  /channels/{channel_id}/listings:
    get:
      description: Returns a list of all *Channel Listings* for a specific channel.
        Note that if the *Channel* is not found or there is no listing associated
        to the *Channel*, it will return a 200 response with empty data.
      operationId: listChannelListings
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/after'
      - $ref: '#/components/parameters/product_id_in'
      - $ref: '#/components/parameters/date_created'
      - $ref: '#/components/parameters/date_created_min'
      - $ref: '#/components/parameters/date_created_max'
      - $ref: '#/components/parameters/date_modified'
      - $ref: '#/components/parameters/date_modified_min'
      - $ref: '#/components/parameters/date_modified_max'
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '400':
          $ref: '#/components/responses/invalid_channel_id_resp'
        '422':
          $ref: '#/components/responses/invalid_filters_resp'
      summary: Get Channel Listings
      tags:
      - Channel Listings
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    post:
      description: Creates one or more *Channel Listings* for a specific channel.
      operationId: createChannelListings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Create Multiple Listings:
                $ref: '#/components/examples/create_multiple_listings_req_example'
              Create Single Listing:
                $ref: '#/components/examples/create_single_listing_req_example'
            schema:
              $ref: '#/components/schemas/CreateMultipleListingsReq'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_post_resp'
      summary: Create Channel Listings
      tags:
      - Channel Listings
    put:
      description: 'Updates one or more *Channel Listings* for a specific channel.


        > #### Note

        > * Partial updates are supported. In most cases, if a field that *cannot*
        be updated is passed in, the API **will not** respond with an error. It returns
        a 200 response with the object, in which you will see the field(s) were not
        updated.

        > * If a new variant is provided, the API will append the variant to the list.
        If a variant already exists, the API will update the existing variant. Other
        variants that are not provided in the payload remains unchanged.

        > * If `listing_id` does not exist, the API will return a 200 response with
        empty data.

        > * `listing_id` is required and cannot be less than or equal to zero.

        > * `product_id` cannot be updated after a channel listing is created.

        > * `product_id` of a variant must match the `product_id` of the channel listing.'
      operationId: updateChannelListings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Update Multiple Listings:
                $ref: '#/components/examples/update_multiple_listings_req_example'
              Update Single Listing:
                $ref: '#/components/examples/update_single_listing_req_example'
            schema:
              $ref: '#/components/schemas/UpdateMultipleListingsReq'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_put_resp'
      summary: Update Channel Listings
      tags:
      - Channel Listings
  /channels/{channel_id}/listings/{listing_id}:
    get:
      description: Returns a *Channel Listing* for a specific channel.
      operationId: getChannelListing
      responses:
        '200':
          $ref: '#/components/responses/single_listing_resp'
        '404':
          $ref: '#/components/responses/listing_not_found_resp'
      summary: Get a Channel Listing
      tags:
      - Channel Listings
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    - $ref: '#/components/parameters/listing_id_path_param'
  /channels/{channel_id}/metafields:
    get:
      description: Returns a list of metafields on a channel. Optional filter parameters
        can be passed in.
      operationId: get-channels-channel_id-metafields
      parameters:
      - $ref: '#/components/parameters/PageParam'
      - $ref: ./catalog.v3.yml#/components/parameters/LimitParam
      - $ref: ./catalog.v3.yml#/components/parameters/MetafieldKeyParam
      - $ref: '#/components/parameters/MetafieldNamespaceParam'
      - $ref: ./catalog.v3.yml#/components/parameters/DirectionParam
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      summary: Get Channel Metafields
      tags:
      - Channel Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    post:
      description: 'Creates a channel metafield.


        **Note:** The maxiumum number of metafields allowed on each order, product,
        category, variant, channel, or brand is 250 per client ID. For more information,
        see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits)
        in the Help Center.'
      operationId: post-channels-channel_id-metafields
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/metafield_Post'
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      summary: Create a Channel Metafield
      tags:
      - Channel Metafields
  /channels/{channel_id}/metafields/{metafield_id}:
    delete:
      description: Deletes a single channel metafield.
      operationId: delete-channels-channel_id-metafields-metafield_id
      responses:
        '204':
          description: No Content
      summary: Delete a Channel Metafield
      tags:
      - Channel Metafields
    get:
      description: Returns a single channel metafield.
      operationId: get-channels-channel_id-metafields-metafield_id
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      summary: Get a Channel Metafield
      tags:
      - Channel Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    - in: path
      name: metafield_id
      required: true
      schema:
        type: string
    put:
      description: 'Updates a single channel metafield.


        **Usage Notes**

        * Attempting to modify `namespace`, `key`, and `permission_set` fields using
        a client ID different from the one used to create those metafields will result
        in a `403` error message. '
      operationId: put-channels-channel_id-metafields-metafield_id
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Put'
      responses:
        '200':
          $ref: '#/components/responses/metafield_200'
      summary: Update a Channel Metafield
      tags:
      - Channel Metafields
  /channels/{channel_id}/site:
    delete:
      description: Deletes the Channel's site.
      operationId: DeleteChannelSite
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: ''
      summary: Delete a Channel Site
      tags:
      - Channel Site
    get:
      description: 'Alias of `GET /sites?channel_id=channel_id`


        Returns site data for the specified channel.

        '
      operationId: get-channel-site
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      summary: Get a Channel Site
      tags:
      - Channel Site
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    post:
      description: Alias of POST `/sites`. Creates a site for provided channel.
      operationId: postChannelSite
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_Post'
        x-examples:
          application/json:
            channel_id: 123
            url: http://kittens.mybigcommerce.com/
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      summary: Create a Channel Site
      tags:
      - Channel Site
    put:
      description: Updates a site for provided channel.
      operationId: put-channel-site
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_Put'
        x-examples:
          application/json:
            url: https://example.com/
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      summary: Update a Channel Site
      tags:
      - Channel Site
  /channels/{channel_id}/site/checkout-url:
    delete:
      description: Deletes a siteʼs checkout URL. After deletion, a shared checkout
        URL is used.
      operationId: delete-checkout-url
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties: {}
                    type: object
                  meta:
                    $ref: '#/components/schemas/EmptyMeta'
                type: object
          description: OK. `data` and `meta` are empty objects.
      summary: Delete a Site's Checkout URL
      tags:
      - Channel Site Checkout Url
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/channel_id_path_param'
    put:
      description: Creates or updates (upserts) a site's checkout URL
      operationId: putCheckoutUrl
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCheckoutUrl'
        description: ''
      responses:
        '200':
          content:
            Example 1:
              examples:
                response:
                  value: "{\n    \"id\": 1,\n    \"url\": \"https://kittens.mybigcommerce.com/\"\
                    ,\n    \"channel_id\": 1,\n    \"created_at\": \"2018-01-04T04:15:50.000Z\"\
                    ,\n    \"updated_at\": \"2018-01-04T04:15:50.000Z\",\n    \"urls\"\
                    : [\n        {\n            \"url\": \"https://kittens.mybigcommerce.com\"\
                    ,\n            \"type\": \"primary\",\n            \"created_at\"\
                    : \"2022-03-22T13:08:59Z\",\n            \"updated_at\": \"2022-03-22T13:08:59Z\"\
                    \n        },\n        {\n            \"url\": \"https://store-abc.store.bcdev\"\
                    ,\n            \"type\": \"canonical\",\n            \"created_at\"\
                    : \"2022-03-22T13:08:59Z\",\n            \"updated_at\": \"2022-03-22T13:08:59Z\"\
                    \n        },\n        {\n            \"url\": \"https://checkout.kittens.mybigcommerce.com\"\
                    ,\n            \"type\": \"checkout\",\n            \"created_at\"\
                    : \"2022-03-23T10:21:11Z\",\n            \"updated_at\": \"2022-03-29T13:44:22Z\"\
                    \n        }\n    ],\n    \"is_checkout_url_customized\": true\n\
                    }"
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: OK
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: object
                  status:
                    default: 422
                    type: integer
                  title:
                    example: Incorrect checkout url https://checkout.example.com.
                      Your checkout and storefront must be within the same main domain
                      like “main.com” and “subdomain.main.com
                    type: string
                  type:
                    default: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
                    type: string
                type: object
                x-examples:
                  example-1:
                    errors: {}
                    status: 422
                    title: Incorrect checkout url https://bc.kittykat.me. Your checkout
                      and storefront must be within the same main domain like “main.com”
                      and “subdomain.main.com”
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
          description: Unprocessable Entity. Your checkout and storefront must be
            within the same main domain like `example.com` and `subdomain.example.com`
      summary: Upsert a Site's Checkout URL
      tags:
      - Channel Site Checkout Url
  /checkouts/settings:
    get:
      description: Get checkout settings
      operationId: GetCheckoutSettings
      responses:
        '200':
          content:
            WebDAV protocol:
              example:
                data:
                  custom_checkout_script_url: webdav:vtz-checkout/dist/auto-loader.js
                  custom_order_confirmation_script_url: webdav:vtz-order-confirmation/dist/auto-loader.js
                  order_confirmation_use_custom_checkout_script: false
                meta: {}
            application/json:
              example:
                data:
                  custom_checkout_script_url: https://example.com/custom-checkout-script.js
                  custom_checkout_supports_uco_settings: false
                  custom_order_confirmation_script_url: https://example.com/custom-order-confirmation-script.js
                  order_confirmation_use_custom_checkout_script: false
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CheckoutsSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Get Checkout Settings
      tags:
      - Checkout Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Update checkout settings
      operationId: UpdateCheckoutSettings
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutsSettingsRequest'
        required: true
      responses:
        '200':
          content:
            WebDAV protocol:
              example:
                data:
                  custom_checkout_script_url: webdav:vtz-checkout/dist/auto-loader.js
                  custom_order_confirmation_script_url: webdav:vtz-order-confirmation/dist/auto-loader.js
                  order_confirmation_use_custom_checkout_script: false
                meta: {}
            application/json:
              example:
                data:
                  custom_checkout_script_url: https://example.com/custom-checkout-script.js
                  custom_checkout_supports_uco_settings: false
                  custom_order_confirmation_script_url: https://example.com/custom-order-confirmation-script.js
                  order_confirmation_use_custom_checkout_script: false
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CheckoutsSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Update Checkout Settings
      tags:
      - Checkout Settings
  /checkouts/{checkoutId}:
    get:
      description: 'Returns a *Checkout*.


        **Notes**


        The cart ID and checkout ID are the same.'
      operationId: CheckoutsByCheckoutIdGet
      parameters:
      - description: '* `cart.line_items.physical_items.options` - physical options

          * `cart.line_items.digital_items.options` - digital options

          * `consignments.available_shipping_options` - shipping options

          * `promotions.banners` - promotion options'
        in: query
        name: include
        schema:
          enum:
          - cart.line_items.physical_items.options
          - cart.line_items.digital_items.options
          - consignments.available_shipping_options
          - promotions.banners
          type: string
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              examples: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    description: ''
                    items:
                      properties:
                        detail:
                          description: ''
                          type: string
                        status:
                          description: ''
                          format: int32
                          type: integer
                        title:
                          description: ''
                          type: string
                        type:
                          description: ''
                          type: string
                      title: ErrorDetail
                      type: object
                    type: array
                title: Checkout Error
                type: object
          description: Error code that is displayed when a given checkout ID is not
            found.
      summary: Get a Checkout
      tags:
      - Checkout
    parameters:
    - $ref: '#/components/parameters/checkoutId'
    - $ref: '#/components/parameters/Accept'
    put:
      description: 'Change customer message pertaining to an existing *Checkout*.


        **Limits:**

        * 2000 characters for customer message'
      operationId: CheckoutsByCheckoutIdPut
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checkout_Put'
        description: '`customer_message` is required (maximum length is 2000).'
        required: true
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Update Customer Messages
      tags:
      - Checkout
      x-codegen-request-body-name: body
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /checkouts/{checkoutId}/billing-address:
    post:
      description: 'Adds a billing address to an existing checkout.


        **Required Fields**

        * email

        * country_code'
      operationId: CheckoutsBillingAddressByCheckoutIdPost
      parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressProperties'
        required: true
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Add Checkout Billing Address
      tags:
      - Checkout Billing Address
      x-codegen-request-body-name: body
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /checkouts/{checkoutId}/billing-address/{addressId}:
    put:
      description: Updates an existing billing address on a checkout.
      operationId: CheckoutsBillingAddressByCheckoutIdAndAddressIdPut
      parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      - in: path
        name: addressId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressProperties'
        required: true
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Update Checkout Billing Address
      tags:
      - Checkout Billing Address
      x-codegen-request-body-name: body
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /checkouts/{checkoutId}/consignments:
    post:
      description: "Adds a new consignment to a checkout.\n\nFor more information\
        \ about working with consignments, see [Checkout consignment](/api-docs/checkouts/checkout-consignment).\
        \  \n\nThough the only required `address` properties to create a consignment\
        \ are `email` and `country_code`, to successfully [create an order](/docs/rest-management/checkouts/checkout-orders#create-an-order)\
        \ the `address` requires the following properties:\n* `first_name`\n* `last_name`\n\
        * `address1`\n* `city`\n* `country`\n* `email`\n* `country_code`\n\nDepending\
        \ on the country, the following `address` properties may also be required:\n\
        \n* `postal_code`\n* `state_or_province`"
      operationId: CheckoutsConsignmentsByCheckoutIdPost
      parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      - in: query
        name: include
        schema:
          enum:
          - consignments.available_shipping_options
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsignmentRequest'
        required: true
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Add Consignment to Checkout
      tags:
      - Checkout Consignments
      x-codegen-request-body-name: body
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /checkouts/{checkoutId}/consignments/{consignmentId}:
    delete:
      description: 'Removes an existing consignment from a checkout.


        Removing the last consignment will remove the cart from the customer it is
        assigned to. Create a new redirect URL for the customer so they can access
        the cart again.'
      operationId: CheckoutsConsignmentsByCheckoutIdAndConsignmentIdDelete
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Delete Checkout Consignment
      tags:
      - Checkout Consignments
    parameters:
    - $ref: '#/components/parameters/checkoutId'
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: consignmentId
      required: true
      schema:
        type: string
    put:
      description: "Updates an existing consignment. The address, line item IDs, and\
        \ the shipping option ID can be updated using this endpoint. \n\nTo add a\
        \ new address and shipping options with line items, complete the following\
        \ steps. \n\n1. Add a new [consignment](/docs/rest-management/checkouts/checkout-consignments#add-consignment-to-checkout)\
        \ to a checkout. \n\n2. Assign a shipping option to the new consignment by\
        \ sending a `PUT` request to update the consignment's `shipping_option_id`\
        \ with a returned value from `data.consignments[N].available_shipping_option[N].id`\
        \ obtained in Step One. "
      operationId: CheckoutsConsignmentsByCheckoutIdAndConsignmentIdPut
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      - description: Include to get available shipping options.
        in: query
        name: include
        schema:
          enum:
          - consignments.available_shipping_options
          type: string
          x-enum-elements:
          - description: ''
            name: Enum_consignments.availableShippingOptions
        x-enum-elements:
        - description: ''
          name: Enum_consignments.availableShippingOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConsignmentRequest'
        required: true
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Update Checkout Consignment
      tags:
      - Checkout Consignments
      x-codegen-request-body-name: body
  /checkouts/{checkoutId}/coupons:
    post:
      description: 'Adds a coupon code to a checkout.


        **Required Fields**

        * coupon_code


        **Limits**

        * Coupon codes have a 50-character limit. '
      operationId: CheckoutsCouponsByCheckoutIdPost
      parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponCodeRequest'
        required: true
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Add Coupon to Checkout
      tags:
      - Checkout Coupons
      x-codegen-request-body-name: body
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /checkouts/{checkoutId}/coupons/{couponCode}:
    delete:
      description: Deletes a coupon code from a checkout.
      operationId: CheckoutsCouponsByCheckoutIdAndCouponCodeDelete
      parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - description: The actual coupon code value, not the coupon ID.
        in: path
        name: couponCode
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Delete Checkout Coupon
      tags:
      - Checkout Coupons
  /checkouts/{checkoutId}/discounts:
    post:
      description: 'Adds a discount to an existing *checkout*.


        This discount only applies to `line_items`. When you call this API, you clear
        out all existing discounts applied to line items, including product and order-based
        discounts.


        This endpoint splits the discount between line items based on the item value.


        Required Fields

        * discounted_amount'
      operationId: post-store_hash-v3-checkouts-checkoutId-discounts
      parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cart:
                  properties:
                    discounts:
                      items:
                        properties:
                          discounted_amount:
                            example: 10
                            type: number
                          name:
                            example: manual
                            type: string
                        required:
                        - discounted_amount
                        type: object
                      type: array
                  type: object
              type: object
        required: false
      responses:
        '200':
          content:
            Available Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125685555'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 0.9
                      id: 1
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        gift_wrapping: {}
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    available_shipping_options:
                    - additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    - additional_description: ''
                      cost: 12
                      description: Flat Rate
                      id: 722d78b5120de60a725e41be9bb8d999
                      image_url: ''
                      transit_time: ''
                      type: shipping_flatrate
                    - additional_description: ''
                      cost: 43.9
                      description: UPS® (UPS Next Day Air®)
                      id: 71090fa93c8985348892543c3f4887b6
                      image_url: ''
                      transit_time: 1 business day
                      type: shipping_upsready
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 33.23
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.28
                  taxes:
                  - amount: 1.28
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            Coupon Applied:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: ''
                    city: ''
                    company: ''
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: customer@example.com
                    first_name: Jane
                    id: 618a9ce18173e
                    last_name: Doe
                    phone: '12125556895'
                    postal_code: '29681'
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 53.6
                    cart_amount_inc_tax: 53.6
                    channel_id: 1
                    coupons:
                    - code: SHOP20
                      coupon_type: percentage_discount
                      discounted_amount: 13.4
                      id: 1
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 25
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 7
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 6.4
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: customer@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 7
                        coupons: 7
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 7
                          id: coupon
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 6.4
                        coupons: 6.4
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 6.4
                          id: coupon
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:08:01+00:00'
                  consignments: []
                  coupons:
                  - code: SHOP20
                    coupon_type: percentage_discount
                    discounted_amount: 13.4
                    id: 1
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 53.6
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:08:01+00:00'
                meta: {}
            Include promotions:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            No Coupon Applied:
              example:
                data:
                  billing_address: {}
                  cart:
                    base_amount: 67
                    cart_amount_ex_tax: 67
                    cart_amount_inc_tax: 67
                    channel_id: 1
                    coupons: []
                    created_time: '2021-11-08T22:46:23+00:00'
                    currency:
                      code: USD
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                    - discounted_amount: 0
                      id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                    email: example@example.com
                    id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                    line_items:
                      custom_items: []
                      digital_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 35
                        extended_sale_price: 35
                        id: 985c79a3-4c94-4104-923a-2e3d4572e72d
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/138/images/420/thebridgebetween__54934.1636473557.220.290.png?c=1
                        is_mutable: true
                        is_require_shipping: false
                        is_taxable: true
                        list_price: 35
                        name: eBook Download
                        original_price: 35
                        product_id: 138
                        quantity: 1
                        sale_price: 35
                        sku: ebk-001
                        url: https://example.com/digital/
                        variant_id: 182
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 32
                        extended_sale_price: 32
                        id: b0adf3a7-7a92-44d9-ad46-87235b118e48
                        image_url: https://cdn11.bigcommerce.com/s-29iql3rwa6/products/145/images/422/Marriott-towel-set-MAR-320-01-SET-BT-WH_xlrg__70357.1636473771.220.290.jpg?c=1
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 32
                        name: Hotel Towel
                        original_price: 32
                        product_id: 145
                        quantity: 1
                        sale_price: 32
                        sku: htltwl-001
                        url: https://example.com/hotel-towel/
                        variant_id: 528
                    updated_time: '2021-11-09T16:06:56+00:00'
                  consignments: []
                  coupons: []
                  created_time: '2021-11-08T22:46:23+00:00'
                  customer_message: ''
                  grand_total: 67
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 267c5d6f-0d27-48ea-b731-e7832a4c5537
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 67
                  subtotal_inc_tax: 67
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: Tax
                  updated_time: '2021-11-09T16:06:56+00:00'
                meta: {}
            Selected Shipping Options:
              example:
                data:
                  billing_address:
                    address1: 123 Main Street
                    address2: Apt 1
                    city: Austin
                    company: BigCommerce
                    country: ''
                    country_code: ''
                    custom_fields: []
                    email: janedoe@example.com
                    first_name: Jane
                    id: 5d484d668e5aa
                    last_name: Doe
                    phone: '12125559659'
                    postal_code: ''
                    state_or_province: ''
                    state_or_province_code: ''
                  cart:
                    base_amount: 31.95
                    cart_amount_ex_tax: 31.95
                    cart_amount_inc_tax: 33.23
                    channel_id: 1
                    coupons: []
                    created_time: '2019-08-05T15:38:14+00:00'
                    currency:
                      code: USD
                    customer_id: 11
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    email: janedoe@example.com
                    id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                    line_items:
                      custom_items: []
                      digital_items: []
                      gift_certificates: []
                      physical_items:
                      - coupon_amount: 0
                        coupons: []
                        discount_amount: 0
                        discounts: []
                        extended_list_price: 31.95
                        extended_sale_price: 33.23
                        id: 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                        image_url: https://cdn11.bigcommerce.com/s-{store_hash}/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.330.500.jpg?c=2
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 31.95
                        name: Hello
                        original_price: 35.95
                        parent_id: 123
                        product_id: 188
                        quantity: 1
                        sale_price: 33.23
                        sku: DUST1
                        url: https://{store_hash}/all/dustpan-brush/
                        variant_id: 359
                    updated_time: '2019-08-05T15:41:28+00:00'
                  consignments:
                  - address:
                      address1: 123 Main Street
                      address2: ''
                      city: Austin
                      company: ''
                      country: United States
                      country_code: US
                      customFields:
                      - field_id: field_25
                        field_value: Great!
                      email: jane2@example.com
                      first_name: BigCommerce
                      last_name: Cart/Checkout
                      phone: '688546'
                      postal_code: '78751'
                      state_or_province: Texas
                      state_or_province_code: TX
                    coupon_discounts: []
                    discounts: []
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: 5d484e28d20a8
                    line_item_ids:
                    - 8edef915-8e8e-4ebd-bece-31fbb1191a7e
                    selected_shipping_option:
                      additional_description: ''
                      cost: 8
                      description: Ship by Weight
                      id: 006a58a98c9a844225552ee2a9c60ca8
                      image_url: ''
                      transit_time: ''
                      type: shipping_byweight
                    shipping_cost_ex_tax: 8
                    shipping_cost_inc_tax: 8.32
                  coupons: []
                  created_time: '2019-08-05T15:38:14+00:00'
                  customer_message: ''
                  grand_total: 41.55
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 306d57d7-124e-4112-82cd-35e060c0d4d9
                  shipping_cost_total_ex_tax: 8
                  shipping_cost_total_inc_tax: 8.32
                  subtotal_ex_tax: 31.95
                  subtotal_inc_tax: 33.23
                  tax_total: 1.6
                  taxes:
                  - amount: 1.6
                    name: Tax
                  updated_time: '2019-08-05T15:41:28+00:00'
                meta: {}
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Checkout'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
            example-1:
              example:
                data:
                  billing_address:
                    address1: string
                    address2: string
                    city: string
                    company: string
                    country_code: string
                    custom_fields:
                    - field_id: string
                      field_value: string
                    email: string
                    first_name: string
                    id: string
                    last_name: string
                    phone: '12128565555'
                    postal_code: string
                    state_or_province: string
                    state_or_province_code: string
                  cart:
                    base_amount: 0
                    cart_amount_ex_tax: 0
                    cart_amount_inc_tax: 0
                    channel_id: 0
                    coupons:
                    - code: string
                      coupon_type: string
                      discounted_amount: 0
                      id: 0
                    created_time: string
                    currency:
                      code: string
                    customer_id: 0
                    discount_amount: 0
                    discounts:
                    - discounted_amount: 0
                      id: string
                    email: string@example.com
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    line_items:
                      custom_items:
                      - extended_list_price: 0
                        id: string
                        image_url: string
                        list_price: 0
                        name: string
                        quantity: 0
                        sku: string
                      digital_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                      gift_certificates:
                      - amount: 0
                        id: string
                        message: string
                        name: string
                        recipient:
                          email: string
                          name: string
                        sender:
                          email: string
                          name: string
                        taxable: true
                        theme: string
                      physical_items:
                      - coupon_amount: 0
                        coupons: 0
                        discount_amount: 0
                        discounts:
                        - discounted_amount: 0
                          id: string
                        extended_list_price: 0
                        extended_sale_price: 0
                        gift_wrapping:
                          amount: 0
                          amount_as_integer: 0
                          message: string
                          name: string
                        id: string
                        image_url: string
                        is_mutable: true
                        is_require_shipping: true
                        is_taxable: true
                        list_price: 0
                        name: string
                        original_price: 0
                        parent_id: 0
                        product_id: 0
                        quantity: 0
                        sale_price: 0
                        sku: string
                        url: string
                        variant_id: 0
                    updated_time: string
                  consignments:
                  - address:
                      address1: string
                      address2: string
                      city: string
                      company: string
                      country_code: string
                      custom_fields:
                      - field_id: string
                        field_value: string
                      email: string
                      first_name: string
                      id: string
                      last_name: string
                      phone: '12125556858'
                      postal_code: string
                      state_or_province: string
                      state_or_province_code: string
                    available_shipping_options:
                    - additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    coupon_discounts:
                    - amount: 0
                      code: string
                    discounts:
                    - id: 0
                    handling_cost_ex_tax: 0
                    handling_cost_inc_tax: 0
                    id: string
                    line_item_ids:
                    - string
                    selected_shipping_option:
                      additional_description: string
                      cost: 0
                      description: string
                      id: string
                      image_url: string
                      transit_time: string
                      type: string
                    shippingAddress: {}
                    shipping_cost_ex_tax: 0
                    shipping_cost_inc_tax: 0
                  coupons:
                  - code: SHOPNOW
                    coupon_type: percentage_discount
                    discounted_amount: 0.9
                    id: 1
                  created_time: string
                  customer_message: string
                  grand_total: 0
                  handling_cost_total_ex_tax: 0
                  handling_cost_total_inc_tax: 0
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  order_id: string
                  promotions:
                  - banners:
                    - id: '3'
                      page:
                      - homepage
                      - cartpage
                      text: Some text
                      type: applied
                  shipping_cost_total_ex_tax: 0
                  shipping_cost_total_inc_tax: 0
                  subtotal_ex_tax: 0
                  subtotal_inc_tax: 0
                  tax_total: 0
                  taxes:
                  - amount: 0
                    name: string
                  updated_time: string
          description: ''
      summary: Add Discount to Checkout
      tags:
      - Checkout Discounts
      x-codegen-request-body-name: body
  /checkouts/{checkoutId}/orders:
    post:
      description: 'Creates an order.


        ## Usage notes

        * Orders created will be set to incomplete order status.

        * You can create as many orders from the same order (cart) as you want.

        * Order duplication copies the existing order, assigns a new order number,
        and sets the new order status to `incomplete`.

        * Once the order is paid, the cart is deleted.

        * Cart deletion occurs if you are using BigCommerce to accept payments on
        orders.'
      operationId: createAnOrder
      parameters:
      - $ref: '#/components/parameters/checkoutId'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  id: 75
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Create an Order
      tags:
      - Checkout Orders
  /checkouts/{checkoutId}/token:
    parameters:
    - $ref: '#/components/parameters/checkoutId'
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Use the checkout token to display a confirmation page for a guest
        shopper.

        **Usage Notes** * The response from performing this POST request is a checkout
        token. * The checkout token is a single-use token that is not order-dependent.
        You cannot create this token after finalizing an order. * After completing
        the order, you can redirect the shopper to /order-confirmation/{orderId}?t={checkoutToken}.
        * After token validation, the /order-confirmation/{orderId} page displays.
        * The `ORDER_TOKEN` should match the order or the logged-in customer can access
        the order.'
      operationId: checkout-token
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  maxUses: 1
                  ttl: 2
            schema:
              properties:
                maxUses:
                  example: 1
                  type: number
                ttl:
                  description: Time-to-live (TTL) is the number of seconds the token
                    is set to exist before being discarded.
                  example: 86400
                  maximum: 2592000
                  minimum: 1
                  type: number
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      checkoutToken: beb3590088be88f59ba980d54a68df655cd8a1052a3e9caf535f3f820146c226
                      meta: {}
              schema:
                properties:
                  checkoutToken:
                    example: beb3590088be88f59ba980d54a68df655cd8a1052a3e9caf535f3f820146c226
                    type: string
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '401':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: object
                  status:
                    description: The HTTP status code.
                    example: 401
                    format: int32
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    example: Unauthorized
                    type: string
                  type:
                    description: 'A link to a list of BigCommerce API status codes.

                      '
                    example: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
                    type: string
                type: object
          description: Unauthorized - the v3 Auth client ID or token in the request
            are not a valid combination for this store.
        '422':
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: The HTTP status code.
                    example: '422'
                    format: int32
                    type: string
                  title:
                    description: The error title describing the particular error.
                    example: Invalid input
                    type: string
                  type:
                    description: A link to a list of BigCommerce API status codes.
                    example: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
                    type: string
                type: object
          description: Invalid JSON request body - missing or invalid data.
      summary: Create Checkout Token
      tags:
      - Checkout Token
  /content/pages:
    delete:
      description: 'Deletes one or more content pages. This endpoint supports bulk
        operations.


        > #### Warning

        > **Pay attention to query parameters**

        > If you attempt to delete multiple pages by passing more than one page ID
        to `id:in` and one or more of them does not exist, you will receive a 404
        response. However, the pages corresponding to the page IDs that do exist will
        still be deleted.'
      operationId: content-pages-delete
      parameters:
      - $ref: '#/components/parameters/idInQueryDelete'
      responses:
        '204':
          $ref: '#/components/responses/HTTP204'
        '404':
          content:
            application/problem+json:
              examples:
                Page not found:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 100
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
          description: Not Found. One of more of the pages specified for deletion
            did not exist. Specified pages that did exist were successfully deleted.
        '422':
          content:
            application/problem+json:
              examples:
                Missing ID:
                  value:
                    detail: 'missing the required field: id'
                    status: 422
                    title: Input is invalid
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
          description: Invalid input. See response for details.
      summary: Delete Pages
      tags:
      - Pages (Bulk)
    get:
      description: Returns one or more content pages. This endpoint supports bulk
        operations.
      operationId: content-pages-get
      parameters:
      - $ref: '#/components/parameters/channelIdQuery'
      - $ref: '#/components/parameters/idInQueryGet'
      - $ref: '#/components/parameters/nameQuery'
      - $ref: '#/components/parameters/nameLikeQuery'
      - $ref: '#/components/parameters/limitQuery'
      - $ref: '#/components/parameters/pageQuery'
      - $ref: '#/components/parameters/includeQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCollectionResponse'
          description: ''
        '400':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
          description: Bad Request; reasons for failure include passing query parameters
            that are not supported on this endpoint, but are common on other BigCommerce
            endpoints.
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorItemized'
          description: Invalid input. Reasons for failure include passing supported
            parameters with values that have the incorrect datatype.
      summary: Get Pages
      tags:
      - Pages (Bulk)
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: Creates one or more content pages. This endpoint supports bulk
        operations.
      operationId: content-pages-post
      parameters:
      - $ref: '#/components/parameters/includeQuery'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  body: <div>Hello World!</div>
                  channel_id: 1
                  is_homepage: false
                  is_visible: false
                  meta_description: string
                  meta_keywords: string
                  meta_title: My Content page
                  name: Content Page
                  parent_id: 0
                  search_keywords: string
                  sort_order: 0
                  type: page
                  url: /my-content-page
            schema:
              $ref: '#/components/schemas/Page'
        description: ''
        required: true
      responses:
        '201':
          $ref: '#/components/responses/HTTP201CreatePages'
        '207':
          $ref: '#/components/responses/HTTP207Response'
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
          description: 'The input was not valid. This is the result of missing required
            fields or other invalid arguments. See the response for more details.


            When making bulk requests, an invalid input in any one entry will cause
            the whole request to return 422. The entries that are valid will still
            be created.'
      summary: Create Pages
      tags:
      - Pages (Bulk)
    put:
      description: Updates one or more content pages. This endpoint supports bulk
        operations.
      operationId: content-pages-put
      parameters:
      - $ref: '#/components/parameters/includeQuery'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/PagePutBulk'
              - items:
                  $ref: '#/components/schemas/PagePutBulk'
                type: array
      responses:
        '200':
          content:
            application/json:
              examples:
                update meta descriptions for two pages:
                  value:
                    data:
                    - channel_id: 1
                      id: 20
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      meta_description: cornpone
                      meta_keywords: null
                      meta_title: ''
                      name: all about powder detergents
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: page
                    - channel_id: 1
                      contact_fields: ''
                      email: ''
                      id: 19
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      meta_description: arugula
                      meta_keywords: null
                      meta_title: ''
                      name: sign up to dream big
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: contact_form
                    meta: {}
              schema:
                $ref: '#/components/schemas/PagesCollectionResponse'
          description: 'Updated.

            '
        '404':
          content:
            application/problem+json:
              examples:
                example-1:
                  value:
                    status: 0
                    title: string
                    type: string
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
          description: Not Found
        '422':
          content:
            application/problem+json:
              examples:
                missing required field for type raw:
                  value:
                    detail: 'missing the required field: body'
                    status: 422
                    title: Input is invalid
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
          description: The input was not valid. This is the result of missing required
            fields or other invalid arguments. See the response for more details.
      summary: Update Pages
      tags:
      - Pages (Bulk)
  /content/pages/{pageId}:
    delete:
      description: 'Deletes one content page.


        > #### Warning

        > **Query parameters not recognized**

        > This endpoint does not recognize query parameters.'
      operationId: content-page-delete
      parameters: []
      responses:
        '204':
          $ref: '#/components/responses/HTTP204'
        '404':
          content:
            application/problem+json:
              examples:
                example-1:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 99
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
          description: The page specified for deletion did not exist.
      summary: Delete a Page
      tags:
      - Pages (Single)
    get:
      description: 'Returns one content page.


        > #### Warning

        > **Pay attention to query parameters**

        > This endpoint recognizes the same query parameters as [Get Multiple Pages](/docs/rest-content/pages#get-pages).
        If the requested page does not meet the query parameters you specify, you
        will receive a 404 response even if the requested `pageId` does exist.'
      operationId: content-page-get
      parameters:
      - $ref: '#/components/parameters/includeQuery'
      responses:
        '200':
          content:
            application/json:
              examples:
                several data types:
                  value:
                    data:
                    - channel_id: 1
                      id: 3
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      meta_description: ''
                      meta_keywords: ''
                      meta_title: Blog
                      name: Blog
                      parent_id: 0
                      search_keywords: '0'
                      sort_order: 4
                      type: blog
                      url: /blog/
                    - channel_id: 1
                      contact_fields: fullname,companyname,phone,orderno,rma
                      email: ''
                      id: 5
                      is_customers_only: true
                      is_homepage: false
                      is_visible: true
                      meta_description: contact meta desc
                      meta_keywords: contact keyword
                      meta_title: ''
                      name: Contact Us
                      parent_id: 0
                      search_keywords: contact search keyword
                      sort_order: 3
                      type: contact_form
                    - channel_id: 1
                      id: 16
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      meta_description: ''
                      meta_keywords: null
                      meta_title: ''
                      name: all about powder detergents 2
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: page
                    - channel_id: 1
                      content_type: text/html
                      id: 17
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      name: one hundred million red balloons 3
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: raw
                    - channel_id: 1
                      id: 18
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      link: https://example.com/diaper-pins
                      name: diaper pin purveyors 3
                      parent_id: 0
                      sort_order: 0
                      type: link
                    - channel_id: 1
                      contact_fields: ''
                      email: ''
                      id: 19
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      meta_description: ''
                      meta_keywords: null
                      meta_title: ''
                      name: sign up to crush dreams 3
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: contact_form
                    - channel_id: 1
                      id: 20
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      meta_description: ''
                      meta_keywords: null
                      meta_title: ''
                      name: all about powder detergents 3
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: page
                    - channel_id: 1
                      feed: /rss/monsters
                      id: 21
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      meta_description: ''
                      meta_keywords: null
                      meta_title: ''
                      name: feed monsters 3
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: feed
                    - channel_id: 1
                      content_type: text/html
                      id: 22
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      name: one hundred million red balloons 4
                      parent_id: 0
                      search_keywords: ''
                      sort_order: 0
                      type: raw
                    - channel_id: 1
                      id: 23
                      is_customers_only: false
                      is_homepage: false
                      is_visible: false
                      link: https://example.com/diaper-pins
                      name: diaper pin purveyors 4
                      parent_id: 0
                      sort_order: 0
                      type: link
                    meta:
                      pagination:
                        count: 6
                        current_page: 1
                        links:
                          current: ?page=1&limit=50
                        per_page: 50
                        total: 6
                        total_pages: 1
              schema:
                $ref: '#/components/schemas/PageResponse'
          description: ''
        '404':
          content:
            application/problem+json:
              examples:
                pageId does not exist:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 99
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
          description: Not Found.
        '422':
          content:
            application/problem+json:
              examples:
                pageId is bar:
                  value:
                    errors:
                    - bar
                    status: 422
                    title: Invalid Input.
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ResponseErrorItemized'
          description: Invalid input. One or more path parameter(s) did not have the
            correct datatype.
      summary: Get a Page
      tags:
      - Pages (Single)
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/pageIdPath'
    put:
      description: Updates one content page.
      operationId: content-page-put
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/includeQuery'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagePut'
        description: ''
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
          description: '

            '
        '400':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
          description: Bad Request; reasons for failure include invalid query parameters.
            See the response for more details.
        '404':
          content:
            application/problem+json:
              examples:
                not found:
                  value:
                    status: 404
                    title: A Page was not found with an ID of 99
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ResponseErrorBrief'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ResponseErrorDetailed'
          description: The input was not valid. This error is the result of missing
            required fields or other invalid arguments. See the response for more
            details.
      summary: Update a Page
      tags:
      - Pages (Single)
  /content/placements:
    get:
      description: Returns a list of **Placements**.
      operationId: getPlacements
      parameters:
      - description: 'Specifies the page number in a limited (paginated) list of products.

          '
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: 'Controls the number of items per page in a limited (paginated)
          list of products.

          '
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The kind of widget template.
        in: query
        name: widget_template_kind
        required: false
        schema:
          type: string
      - description: 'The template file, for example: `pages/home`.'
        in: query
        name: template_file
        required: false
        schema:
          type: string
      - description: The identifier for a specific widget.
        in: query
        name: widget_uuid
        required: false
        schema:
          format: uuid
          type: string
      - description: The identifier for a specific widget template.
        in: query
        name: widget_template_uuid
        required: false
        schema:
          format: uuid
          type: string
      - $ref: '#/components/parameters/ChannelIDInParam'
      - $ref: '#/components/parameters/SiteIDInParam'
      responses:
        '200':
          $ref: '#/components/responses/PlacementsCollection_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get All Placements
      tags:
      - Placement
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Creates a **Placement**.


        **Template Files**


        To view the list of values accepted by the `template_file` property, including
        **custom** templates, see [Placements](/api-docs/store-management/widgets/overview#placements).'
      operationId: createPlacement
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placement_Post'
        required: true
        x-examples:
          application/json:
            entity_id: '21'
            region: category_header_banner
            sort_order: 1
            status: active
            template_file: pages/category
            widget_uuid: a8940709-5655-4401-a341-62c44e3180b2
      responses:
        '200':
          $ref: '#/components/responses/Placement_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Create a Placement
      tags:
      - Placement
  /content/placements/{uuid}:
    delete:
      description: Deletes a **Placement**.
      operationId: deletePlacement
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Delete a Placement
      tags:
      - Placement
    get:
      description: Returns a single **Placement**.
      operationId: getPlacement
      responses:
        '200':
          $ref: '#/components/responses/Placement_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get a Placement
      tags:
      - Placement
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/PlacementUUID'
    put:
      description: Updates a **Placement**.
      operationId: updatePlacement
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placement_Put'
        required: true
        x-examples:
          application/json:
            region: home_header_image
            sort_order: 1
            status: active
            template_file: pages/home
      responses:
        '200':
          $ref: '#/components/responses/Placement_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Update a Placement
      tags:
      - Placement
  /content/regions:
    get:
      description: Returns a list of unique **Theme Regions** in a file.
      operationId: getContentRegions
      parameters:
      - $ref: '#/components/parameters/Accept'
      - description: 'The template file, for example: `templateFile=pages/home`.'
        in: query
        name: template_file
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ThemeRegions_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get Theme Regions
      tags:
      - Regions
  /content/scripts:
    get:
      description: 'Returns a list of *Scripts*. Optional parameters can be passed
        in.


        This operation will only return scripts generated by the API key and password
        used to create the script originally. '
      operationId: getScripts
      parameters:
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 'Field name to sort the scripts by. Note: Since `id` increments
          when new scripts are added, you can use that field to sort by script create
          date.

          '
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name
          - description
          - date_created
          - date_modified
          type: string
      - description: 'Sort direction. Acceptable values are: `asc`, `desc`.

          '
        in: query
        name: direction
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: Filters list of scripts by the associated channel_id.
        in: query
        name: channel_id:in
        schema:
          items: {}
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/script_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/CollectionMeta'
                title: Scripts Response
                type: object
          description: ''
        '422':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      type: object
                  type: object
                title: Error Response
          description: 'This is the result of missing required fields, or of invalid
            data. See the response for more details.

            '
      summary: Get All Scripts
      tags:
      - Scripts
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Creates a *Script*.


        **Required Fields**

        * name


        **Read Only Fields**

        * uuid


        **Notes**

        * If kind is `src` –- Only the `src` property is needed, and you can optionally
        supply a `load_method`. The `html` field should not be specified.

        * If kind is `script_tag` -- Only the `script_tag` is needed. The `src` field
        should not be specified.

        * Each app can have 10 scripts installed.

        * Multiple scripts can be created [per call](/api-docs/store-management/scripts#notes). '
      operationId: createScript
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/script_Post'
        required: true
        x-examples:
          HTML Script Tag:
            auto_uninstall: true
            consent_category: essential
            description: Build responsive websites
            html: null
            kind: script_tag
            load_method: default
            location: footer
            name: Bootstrap
            visibility: all_pages
          Script Source URL:
            auto_uninstall: true
            consent_category: essential
            description: Build responsive websites
            kind: src
            load_method: default
            location: footer
            name: Bootstrap
            src: https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js
            visibility: all_pages
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/script_Response'
          description: ''
        '422':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: 'This is the result of missing required fields, or of invalid
            data. See the response for more details.

            '
      summary: Create a Script
      tags:
      - Scripts
  /content/scripts/{uuid}:
    delete:
      description: Deletes a *Script*.
      operationId: deleteScript
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
          description: ''
        '404':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: The resource was not found.
        '422':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: This is the result of missing required fields, or of invalid
            data. See the response for more details.
      summary: Delete a Script
      tags:
      - Scripts
    get:
      description: Returns a single *Script*.
      operationId: getScript
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/script_Response'
          description: Success
        '404':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: 'The resource was not found.

            '
        '422':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: 'This is the result of missing required fields, or of invalid
            data. See the response for more details.

            '
      summary: Get a Script
      tags:
      - Scripts
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ScriptUUID'
    put:
      description: Updates a *Script*.
      operationId: updateScript
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/script_Put'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/script_Response'
          description: ''
        '404':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: 'The resource was not found.

            '
        '422':
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: 'This is the result of missing required fields, or of invalid
            data. See the response for more details.

            '
      summary: Update a Script
      tags:
      - Scripts
  /content/widget-templates:
    get:
      description: Returns a list of **Widget Templates**.
      operationId: getWidgetTemplates
      parameters:
      - description: 'Specifies the page number in a limited (paginated) list of products.

          '
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: 'Controls the number of items per page in a limited (paginated)
          list of products.

          '
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The kind of widget template.
        in: query
        name: widget_template_kind
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
      - description: Filter items by channel_id.
        in: query
        name: channel_id:in
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplateCollection_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get All Widget Templates
      tags:
      - Widget Template
    post:
      description: 'Creates a **Widget Template**.


        ***Note:*** *There is a limit of 1000 custom widget templates per store.*


        **Required Fields**

        * name

        * template'
      operationId: createWidgetTemplate
      parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widgetTemplate_Post'
        required: true
        x-examples:
          Custom Configuration Widget: "{\n  \"name\":\"Header Images\",\n  \"template\"\
            :\"{{#each images}}{{/each}}\",\n  \"schema\":[\n    {\n      \"type\"\
            :\"array\",\n      \"label\":\"Images\",\n      \"id\":\"images\",\n \
            \     \"defaultCount\":3,\n      \"entryLabel\":\"Image\",\n      \"thumbnail\"\
            :\"imageUrl.src\",\n      \"schema\":[\n        {\n          \"type\"\
            :\"tab\",\n          \"label\":\"Content\",\n          \"sections\":[\n\
            \            {\n              \"settings\":[\n                {\n    \
            \              \"type\":\"imageManager\",\n                  \"id\":\"\
            imageUrl\",\n                  \"default\":{\n                    \"src\"\
            :\"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on\"\
            ,\n                    \"type\":\"IMAGE_MANAGER\"\n                  \
            \  }\n                    },\n                    {\n                \
            \      \"label\":\"Link\",\n                      \"type\":\"input\",\n\
            \                      \"id\":\"link\",\n                      \"default\"\
            :\"#\"\n                      }\n                    ]\n             \
            \     }\n                ]\n              }\n            ]\n         \
            \ }\n        ]\n      }"
          application/json: "{\n  \"name\": \"Header Images\",\n  \"template\": \"\
            {{#each images}}{{/each}}\"\n}"
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplate_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Create a Widget Template
      tags:
      - Widget Template
  /content/widget-templates/{uuid}:
    delete:
      description: Deletes a **Widget Template**.
      operationId: deleteWidgetTemplate
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Delete A Widget Template
      tags:
      - Widget Template
    get:
      description: Returns a single **Widget Template**.
      operationId: getWidgetTemplate
      parameters:
      - description: This is an optional query parameter used to attempt to fetch
          a specific Widget Template version.
        in: query
        name: version_uuid
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get a Widget Template
      tags:
      - Widget Template
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/TemplateUUID'
    put:
      description: Updates a **Widget Template**.
      operationId: updateWidgetTemplate
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widgetTemplate_Put'
        required: true
        x-examples:
          application/json:
            create_new_version: true
            name: Header Images
            template: '{{#each images}}{{/each}}'
      responses:
        '200':
          $ref: '#/components/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Update a Widget Template
      tags:
      - Widget Template
  /content/widget-templates/{uuid}/preview:
    parameters:
    - description: The identifier for a specific widget.
      in: path
      name: uuid
      required: true
      schema:
        type: string
    post:
      description: Render a widget template and return the widget html.
      operationId: previewWidget
      parameters:
      - $ref: '#/components/parameters/TemplateUUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetTemplatePreview'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetTemplatePreviewResponse'
          description: Success
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      summary: Render a Widget Template
      tags:
      - Widget Template
  /content/widgets:
    get:
      description: Returns a list of **Widgets**. Optional parameters can be passed
        in.
      operationId: getWidgets
      parameters:
      - description: 'Specifies the page number in a limited (paginated) list of products.

          '
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: 'Controls the number of items per page in a limited (paginated)
          list of products.

          '
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The kind of widget template.
        in: query
        name: widget_template_kind
        required: false
        schema:
          type: string
      - description: The identifier for a specific widget template.
        in: query
        name: widget_template_uuid
        required: false
        schema:
          format: uuid
          type: string
      - description: The URL encoded name of the widget.
        in: query
        name: name
        schema:
          type: string
      - description: 'Use to pass in comma-separated list of widget names. Example:
          `/widgets?name:in=test-widget-name,header%20images`'
        in: query
        name: name:in
        schema:
          items: {}
          type: array
      - description: Filter items by channel_id.
        in: query
        name: channel_id:in
        schema:
          type: integer
      - description: A comma-separated list of site ids to filter the results by.
        in: query
        name: site_id:in
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/WidgetCollection_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get All Widgets
      tags:
      - Widget
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Creates a **Widget**.


        **Note:** There is a limit of 100,000 widgets per store and 150 widgets per
        page. For more information, see [Store Limits](https://support.bigcommerce.com/s/article/Platform-Limits#storelimits).'
      operationId: createWidget
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget_Post'
        required: true
        x-examples:
          application/json:
            name: Header Images
            template: '{{#each images}}{{/each}}'
            widget_configuration:
              images:
              - image_source: https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
              - image_source: https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
              - image_source: https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
            widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
      responses:
        '200':
          $ref: '#/components/responses/Widget_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Create a Widget
      tags:
      - Widget
  /content/widgets/{uuid}:
    delete:
      description: Deletes a **Widget**.
      operationId: deleteWidget
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Delete a Widget
      tags:
      - Widget
    get:
      description: Returns a single **Widget**.
      operationId: getWidget
      responses:
        '200':
          $ref: '#/components/responses/Widget_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Get a Widget
      tags:
      - Widget
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/WidgetUUID'
    put:
      description: Updates a **Widget**.
      operationId: updateWidget
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widget_Put'
        required: true
        x-examples:
          application/json:
            name: Header Images
            widget_configuration:
              images:
              - image_source: https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
              - image_source: https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
              - image_source: https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
            widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6
      responses:
        '200':
          $ref: '#/components/responses/Widget_Resp'
        '404':
          $ref: '#/components/responses/Error404_Resp'
        '422':
          $ref: '#/components/responses/Error422_Resp'
      summary: Update a Widget
      tags:
      - Widget
  /customers:
    delete:
      deprecated: false
      description: 'Deletes Customers.


        **Required Query**

        * id:in -- ID of the customer


        **Notes**


        A query is required to delete customers. If not provided, a 204 is returned,
        with no changes to the data.'
      operationId: CustomersDelete
      parameters:
      - description: 'Filter items by ID.

          `id:in=4,5,6`'
        explode: false
        in: query
        name: id:in
        required: true
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        '204':
          description: ''
          headers: {}
      summary: Delete Customers
      tags:
      - Customers
    get:
      deprecated: false
      description: 'Returns a list of Customers. Optional filter parameters can be
        passed in.


        **Notes**


        Attribute names are not available on the customer object.'
      operationId: CustomersGet
      parameters:
      - description: Page number. `page=1`
        in: query
        name: page
        schema:
          type: integer
      - description: Items count per page. `limit=50`
        in: query
        name: limit
        schema:
          type: number
      - description: 'Filter items by ID.

          `id:in=4,5,6`'
        explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Filter items by company. `company:in=bigcommerce,commongood`
        explode: false
        in: query
        name: company:in
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter items by customer_group_id. `customer_group_id:in=5,6`
        explode: false
        in: query
        name: customer_group_id:in
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter items by date_created. `date_created=2018-09-05T13:43:54`
        in: query
        name: date_created
        schema:
          format: date-time
          type: string
      - description: Filter items by maximum date_created. `date_created:max=2018-09-10`
        in: query
        name: date_created:max
        schema:
          type: string
      - description: Filter items by date_created. `date_created:min=2018-09-05`
        in: query
        name: date_created:min
        schema:
          format: date-time
          type: string
      - description: Filter items by date_modified. `date_modified=2018-09-05T13:45:03`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: Filter items by minimum date_modified. `date_modified:min=2019-09-04T:00:00:00`
          or `date_modified:min=2019-09-04`
        in: query
        name: date_modified:min
        schema:
          type: string
      - description: Filter items by maximum date_modified. `date_modified:max=2018-09-05T13:45:03`
          or `date_modified:max=2019-09-04`
        in: query
        name: date_modified:max
        schema:
          format: date-time
          type: string
      - description: Filter items by email. `email:in=janedoe@example.com`
        in: query
        name: email:in
        schema:
          type: string
      - description: Filter items by first_name and last_name. `name=james moriarty`
        explode: false
        in: query
        name: name:in
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Filter items by substring in first_name and last_name.

          `name:like=moriarty, sherlock`

          Concatenates the first_name and last_name fields.'
        explode: false
        in: query
        name: name:like
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Filter items by registration_ip_address. If the customer was
          created using the API, then registration address is blank.

          `registration_ip_address:in=12.345.6.789`'
        explode: false
        in: query
        name: registration_ip_address:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Indicates whether to include customer sub-resources:\n * `addresses`\
          \ - customer addresses\n * `storecredit` - store credit\n * `attributes`\
          \ - customer attributes and address attributes\n * `formfields` - customer\
          \ and address form fields\n * `shopper_profile_id` - the ID of the shopper\
          \ profile associated with the customer (Beta)\n * `segment_ids`- segments\
          \ the customer belongs to (Beta)\n\n `include=addresses,storecredit,attributes,formfields,shopper_profile_id,segment_ids`"
        in: query
        name: include
        schema:
          enum:
          - addresses
          - storecredit
          - attributes
          - formfields
          type: string
      - description: 'Sort items by date_created, date_modified, or last_name:* `date_created:asc`
          - date created, ascending* `date_created:desc` - date created, descending*
          `last_name:asc` - last name, ascending* `last_name:desc` - last name, descending
          * `date_modified:asc` - date modified, ascending* `date_modified:desc`-
          date modified, descending  Example: `sort=last_name:asc`'
        in: query
        name: sort
        schema:
          enum:
          - date_created:asc
          - date_created:desc
          - last_name:asc
          - last_name:desc
          - date_modified:asc
          - date_modified:desc
          type: string
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
      summary: Get All Customers
      tags:
      - Customers
    post:
      deprecated: false
      description: "Creates Customers. Create up to 10 customers in one call.\n\n\
        **Required Fields**\n* last_name\n* first_name\n* email\n\n**Required Fields\
        \ Customer Address**\n* first_name\n* city\n* country_code\n* last_name\n\
        * address1\n\n**Required Fields Attributes**\n* Attributes must be [created](/docs/rest-management/customers/customer-attributes#create-a-customer-attribute)\
        \ **BEFORE** creating a customer.\n* attribute_id\n* attribute_value -- This\
        \ is input as a string, regardless of the [Type](/docs/rest-management/customers/customer-attributes#create-a-customer-attribute).\n\
        \n**Limits**\n* Limit of 10 concurrent requests \n\n**Notes**\n\nA customer\
        \ can be created with global access or channel-specific access.\n* **Global\
        \ access:**\n  * Make sure the channel has `allow_global_logins` enabled.\
        \ This is on by default only for the default storefront. Find more info at\
        \ [Customer Settings > Channel](/docs/rest-management/customers/customer-settings-channel).\n\
        \  * Omit `channel_ids` field, or provide `channel_ids: null`.\n* **Channel-specific\
        \ access:**\n  * Provide a `channel_ids` array containing the channels accessible\
        \ by the customer. This array cannot be empty."
      operationId: CustomersPost
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - accepts_product_review_abandoned_cart_emails: true
                  addresses:
                  - address1: Addr 1
                    address2: ''
                    address_type: residential
                    city: San Francisco
                    company: History
                    country_code: US
                    first_name: Ronald
                    form_fields:
                    - name: test
                      value: test
                    last_name: Swimmer
                    phone: '707070707'
                    postal_code: '33333'
                    state_or_province: California
                  authentication:
                    force_password_reset: true
                    new_password: string123
                  channel_ids:
                  - 1
                  company: string
                  customer_group_id: 0
                  email: string@example.com
                  first_name: string
                  form_fields:
                  - name: test
                    value: test
                  last_name: string
                  notes: string
                  origin_channel_id: 1
                  phone: string
                  store_credit_amounts:
                  - amount: 43.15
                  tax_exempt_category: string
            schema:
              items:
                $ref: '#/components/schemas/customer_Post'
              type: array
        description: ''
        required: true
        x-examples: {}
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
        '413':
          description: The request payload is too large. The maximum number of items
            allowed in the array is 10.
        '422':
          content:
            application/json:
              examples:
                response:
                  value:
                    errors:
                      .customer_create: Error creating customers
                    status: 422
                    title: Create customers failed.
                    type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The *Customer* was not valid. This is the result of missing
            required fields or trying to edit a read only field. See the response
            for more details.
      summary: Create Customers
      tags:
      - Customers
    put:
      deprecated: false
      description: 'Updates Customers. Subresource updates are not supported. Up to
        10 customers can be updated in one call.


        **Required Fields**

        * id -- ID of the *Customer* This must be included in the request body


        **Read Only Fields**

        * id

        * registration_ip_address

        * date_created

        * date_modified



        **Notes**


        * Attributes Values can not be updated using Update a Customer. Use the [Update
        customer attribute values](/docs/rest-management/customers/customer-attribute-values#upsert-customer-attribute-values)
        endpoint.

        * channel_ids -- Updating the list of channels a customer can access may create
        some side effects in a multi-storefront situation. This list determines which
        customer account we will use to authenticate a shopper given a channel.'
      operationId: CustomersPut
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - accepts_product_review_abandoned_cart_emails: true
                  addresses:
                  - address1: string
                    address2: string
                    address_type: string
                    city: string
                    company: string
                    country_code: string
                    first_name: string
                    last_name: string
                    phone: string
                    postal_code: string
                    state_or_province: string
                  authentication:
                    force_password_reset: true
                    new_password: string123
                  channel_ids:
                  - 1
                  company: string
                  customer_group_id: 0
                  email: string
                  first_name: string
                  form_fields:
                  - name: test
                    value: test
                  id: 1
                  last_name: string
                  notes: string
                  origin_channel_id: 1
                  phone: string
                  store_credit_amounts:
                  - amount: 43.15
                  tax_exempt_category: string
              example-2-form-fields:
                value:
                - form_fields:
                  - name: test
                    value: test
                  id: 1
            schema:
              items:
                $ref: '#/components/schemas/customer_Put'
              type: array
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollectionResponse'
        '413':
          description: The request payload is too large. The maximum number of items
            allowed in the array is 10.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Customer` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update Customers
      tags:
      - Customers
  /customers/addresses:
    delete:
      deprecated: false
      description: 'Deletes a Customer Address.


        **Required Query**

        * id:in -- ID of the *Customer Address*'
      operationId: CustomersAddressesDelete
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      - description: 'Filter items by ID.

          `id:in=4,5,6`'
        explode: false
        in: query
        name: id:in
        required: true
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        '204':
          description: ''
          headers: {}
      summary: Delete a Customer Address
      tags:
      - Customer Addresses
    get:
      deprecated: false
      description: Returns a list of Customer Addresses. Optional filter parameters
        can be passed in.
      operationId: CustomersAddressesGet
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      - description: Page number. `page=1`
        in: query
        name: page
        schema:
          type: integer
      - description: Items count per page. `limit=50`
        in: query
        name: limit
        schema:
          type: number
      - description: Filter items by company. `company:in=bigcommerce,commongood`
        explode: false
        in: query
        name: company:in
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter items by first_name and last_name. `name:in=James+Moriarty`
        explode: false
        in: query
        name: name:in
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by the ID of the customer. Also accepts comma-separated
          IDs to filter for multiple customers. `customer_id:in=23,24,55`
        explode: false
        in: query
        name: customer_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: 'Indicates whether to include customer address sub-resources:

          * `formfields` - address form fields

          `include=formfields`'
        in: query
        name: include
        schema:
          enum:
          - formfields
          type: string
      - description: 'Filter items by ID.

          `id:in=4,5,6`'
        explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponse'
      summary: Get All Customer Addresses
      tags:
      - Customer Addresses
    post:
      deprecated: false
      description: "Creates a Customer Address. Multiple customer addresses can be\
        \ created in one call.\n\n**Required Fields**\n* **customer_id**\n* **first_name**\n\
        * **last_name**\n* **city**\n* **country_code**\n* **address1**\n\n**Notes**\n\
        * A unique customer address is a combination of the following core address\
        \ fields:\n  * **customer_id**\n  * **first_name**\n  * **last_name**\n  *\
        \ **company**\n  * **phone**\n  * **address_type**\n  * **address1**\n  *\
        \ **address2**\n  * **city**\n  * **country_code**\n  * **state_or_province**\n\
        \  * **postal_code**\n* An attempt to create an address that already exists\
        \ will result in no change to the address or custom form field values, an\
        \ HTTP 200 return code, and the address will be absent from the response body."
      operationId: CustomersAddressesPost
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - address1: 111 E West Street
                  address2: '654'
                  address_type: residential
                  city: Akron
                  country_code: US
                  customer_id: 11
                  first_name: John
                  form_fields:
                  - name: test
                    value: test
                  last_name: Doe
                  phone: '1234567890'
                  postal_code: '44325'
                  state_or_province: Ohio
            schema:
              items:
                $ref: '#/components/schemas/address_Post'
              type: array
        required: true
        x-examples:
          application/json:
          - address1: 111 E West Street
            address2: '654'
            address_type: residential
            city: Akron
            country_code: US
            customer_id: 11
            first_name: John
            form_fields:
            - name: test
              value: test
            last_name: Doe
            phone: '1234567890'
            postal_code: '44325'
            state_or_province: Ohio
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponsePostPut'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Address` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Customer Address
      tags:
      - Customer Addresses
    put:
      deprecated: false
      description: "Updates a Customer Address. Multiple customer addresses can be\
        \ updated in one call.\n\n**Required Fields**\n* **id** -- ID of the *Customer\
        \ Address*\n\n**Limits**\n* Limit of **3** concurrent requests.\n\n**Notes**\n\
        * A unique customer address is a combination of the following core address\
        \ fields:\n  * **first_name**\n  * **last_name**\n  * **company**\n  * **phone**\n\
        \  * **address_type**\n  * **address1**\n  * **address2**\n  * **city**\n\
        \  * **country_code**\n  * **state_or_province**\n  * **postal_code**\n* An\
        \ attempt to update an address such that it becomes identical to another address\
        \ that already exists will result in no change to the target address or custom\
        \ form field values. The response will have an HTTP 200 return code, and the\
        \ address will be absent from the response body."
      operationId: CustomersAddressesPut
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - address1: 111 E West Street
                  address2: '654'
                  address_type: residential
                  city: Akron
                  country_code: US
                  first_name: John
                  form_fields:
                  - name: test
                    value: test
                  id: 11
                  last_name: Doe
                  phone: '1234567890'
                  postal_code: '44325'
                  state_or_province: Ohio
              example-2-form-fields:
                value:
                - form_fields:
                  - name: test
                    value: test
                  id: 11
            schema:
              items:
                $ref: '#/components/schemas/address_Put'
              type: array
        required: true
        x-examples:
          application/json:
          - address1: 111 E West Street
            address2: '654'
            address_type: residential
            city: Akron
            country_code: US
            first_name: John
            id: 38
            last_name: Doe
            phone: '1234567890'
            postal_code: '44325'
            state_or_province: Ohio
      responses:
        '200':
          $ref: '#/components/responses/AddressCollectionResponsePostPut'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Address` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Customer Address
      tags:
      - Customer Addresses
  /customers/attribute-values:
    delete:
      deprecated: false
      description: 'Deletes Customer Attribute Values. Deletes the attribute value
        from the customer.


        **Required Query**

        * id:in - ID of the *Customer Attribute Value*'
      operationId: CustomersAttributeValuesDelete
      parameters:
      - description: 'Filter items by ID.

          `id:in=4,5,6`'
        explode: false
        in: query
        name: id:in
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      responses:
        '204':
          description: ''
          headers: {}
      summary: Delete Customer Attribute Values
      tags:
      - Customer Attribute Values
    get:
      deprecated: false
      description: Returns a list of Customer Attribute Values. Optional filter parameters
        can be passed in.
      operationId: CustomersAttributeValuesGet
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      - description: Page number. `page=1`
        in: query
        name: page
        schema:
          type: integer
      - description: Items count per page. `limit=50`
        in: query
        name: limit
        schema:
          type: number
      - description: Filter items by the customer ID. `customer_id:in=23,24,55`
        explode: false
        in: query
        name: customer_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Filter items by the attribute ID. `attribute_id:in=1,2`
        explode: false
        in: query
        name: attribute_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Filter items by the attribute name. `name=age`
        in: query
        name: name
        schema:
          type: string
      - description: Filter items by `date_created`. `date_created=2018-09-05T13:43:54`
        in: query
        name: date_created
        schema:
          format: date-time
          type: string
      - description: Filter items by maximum `date_created`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_created:max
        schema:
          type: string
      - description: Filter items by minimum `date_created`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_created:min
        schema:
          format: date-time
          type: string
      - description: Filter items by `date_modified`. `date_modified=2018-09-05T13:45:03`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: Filter items by maximum `date_modified`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_modified:max
        schema:
          format: date-time
          type: string
      - description: Filter items by minimum `date_modified`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_modified:min
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
      summary: Get All Customer Attribute Values
      tags:
      - Customer Attribute Values
    put:
      deprecated: false
      description: 'Upserts Customer Attribute Values. Updates the attribute values
        on the Customer. Multiple customer attribute values can be updated in one
        call.


        Upsert checks for an existing record. If there is none, it creates the record,
        if there is a matching record, it updates that record.


        **Limits**

        * 10 per call limit.'
      operationId: CustomersAttributeValuesPut
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                - attribute_id: 1
                  customer_id: 2
                  value: 'No'
            schema:
              items:
                $ref: '#/components/schemas/attributeValue_Base'
              type: array
        description: ''
        required: true
        x-examples:
          application/json:
          - attribute_id: 52528392
            customer_id: 12990306
            id: 47143304
            value: aliqua
          - attribute_id: 8263909
            customer_id: 1122433
            id: 34305734
            value: n
          - attribute_id: 62186196
            customer_id: 10906989
            id: 21175547
            value: ''
          - attribute_id: 68742149
            customer_id: 74084818
            id: 99359610
            value: l
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributeValueCollectionResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `CustomerAttributeValue` was not valid. This is the result
            of missing required fields, or of invalid data. See the response for more
            details.

            '
      summary: Upsert Customer Attribute Values
      tags:
      - Customer Attribute Values
  /customers/attributes:
    delete:
      deprecated: false
      description: 'Deletes Customer Attributes from the store.


        **Required Query**

        * id:in -- ID of the *Customer Attribute*'
      operationId: CustomersAttributesDelete
      parameters:
      - description: Filter items by ID.
        explode: false
        in: query
        name: id:in
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      responses:
        '204':
          description: ''
          headers: {}
      summary: Delete Customer Attributes
      tags:
      - Customer Attributes
    get:
      deprecated: false
      description: Returns a list of Customer Attributes. You can pass in optional
        filter parameters.
      operationId: CustomersAttributesGet
      parameters:
      - description: Page number. `page=1`
        in: query
        name: page
        schema:
          type: integer
      - description: Items count per page. `limit=50`
        in: query
        name: limit
        schema:
          type: number
      - description: Filter items by customer attribute name. `name=Date+Joined`
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Filter items by substring in customer attribute name. `name:like=join`
        in: query
        name: name:like
        required: false
        schema:
          type: string
      - description: The type of the customer attribute.
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Filter items by `date_created`. `date_created=2021-01-07T20:28:16Z`
        in: query
        name: date_created
        required: false
        schema:
          format: date-time
          type: string
      - description: Filter items by maximum `date_created`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_created:max
        required: false
        schema:
          format: date-time
          type: string
      - description: Filter items by minimum `date_created`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_created:min
        required: false
        schema:
          format: date-time
          type: string
      - description: Filter items by `date_modified`.
        in: query
        name: date_modified
        required: false
        schema:
          format: date-time
          type: string
      - description: Filter items by maximum `date_modified`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_modified:max
        required: false
        schema:
          format: date-time
          type: string
      - description: Filter items by minimum `date_modified`. ISO 8601 full-date is
          required, ISO 8601 full-time is not required. UNIX timestamp also accepted.
          `date_created=2021-01-07` or `date_created=1610051296000`
        in: query
        name: date_modified:min
        required: false
        schema:
          format: date-time
          type: string
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
      summary: Get All Customer Attributes
      tags:
      - Customer Attributes
    post:
      deprecated: false
      description: 'Creates a Customer Attribute. Multiple customer attributes can
        be created in one call.


        **Required Fields**

        * name

        * type


        **Limits**

        * Limit of 3 concurrent requests.


        **Notes**


        Once the data type is set, it cannot be changed. The attribute will need to
        be deleted then created again with the new data type. This will also delete
        it from the customer.


        Customer attributes are created separately from the customer. After the name
        and type are created, then the attributes can be added to the customer.


        A store cannot have more than 50 customer attributes.'
      operationId: CustomersAttributesPost
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/attribute_Post'
              type: array
        required: true
        x-examples:
          application/json:
          - name: Date Joined
            type: date
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Attribute` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Customer Attribute
      tags:
      - Customer Attributes
    put:
      deprecated: false
      description: 'Updates a Customer Attribute. Multiple customer attributes can
        be updated in one call.


        **Required Fields**

        * id -- ID of the *Customer Attribute*


        Once the data type is set, it can not be changed. The attribute will need
        to be deleted then created again with the new data type. This will also delete
        it from the customer.


        **Limits**

        * Limit of 3 concurrent requests.'
      operationId: CustomersAttributesPut
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/attribute_Put'
              type: array
        required: true
        x-examples:
          application/json:
          - id: 1
            name: Date Joined
      responses:
        '200':
          $ref: '#/components/responses/CustomerAttributesResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Attribute` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Customer Attribute
      tags:
      - Customer Attributes
  /customers/form-field-values:
    get:
      description: 'Returns a list of form field values for the Customer or Customer
        Address object.


        To learn about adding and managing form fields, see [Adding and Editing Fields
        in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).'
      operationId: CustomerFormFieldsGet
      parameters:
      - in: header
        name: Accept
        schema:
          default: application/json
          type: string
      - in: header
        name: Content-Type
        schema:
          default: application/json
          type: string
      - description: Page number. `page=1`
        in: query
        name: page
        schema:
          type: integer
      - description: Items count per page. `limit=50`
        in: query
        name: limit
        schema:
          type: number
      - description: Filter by the customer ID.
        in: query
        name: customer_id
        schema:
          type: integer
      - description: Filter by the ID of the customer address.
        in: query
        name: address_id
        schema:
          type: integer
      - description: Filter by the field name.
        in: query
        name: field_name
        schema:
          type: string
      - description: "Filter by the field type.\n * `checkboxes` - checkboxes field\n\
          \ * `date` - date field\n * `multiline` - multiline text field\n * `numbers`\
          \ - numbers only field\n * `password` - password field\n * `radiobuttons`\
          \ - radio buttons field\n * `text` - text field\n * `picklist` - pick list\
          \ field"
        in: query
        name: field_type
        schema:
          enum:
          - checkboxes
          - date
          - multiline
          - numbers
          - password
          - radiobuttons
          - text
          - picklist
          type: string
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValueCollectionResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The form field value was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.
      summary: Get Customer Form Field Values
      tags:
      - Customer Form Field Values
    put:
      description: 'Updates form field values on the Customer or Customer Address
        objects. Multiple form field values can be updated in one call.


        Upsert checks for an existing record, if there is none it creates the record,
        if there is a matching record it updates that record.


        To learn more about editing form fields, see [Adding and Editing Fields in
        the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields).


        **Limits**

        * Limit of 10 concurrent requests.'
      operationId: CustomerFormFieldValuePUT
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                - customer_id: 12
                  name: Sales Rep
                  value: Miss Moneypenny
                - customer_id: 12
                  name: How did you hear about us?
                  value: Other
                - customer_id: 12
                  name: What is your favorite pizza topping?
                  value: Mushrooms
            schema:
              items:
                $ref: '#/components/schemas/formFieldValue_Full'
              type: array
      responses:
        '200':
          $ref: '#/components/responses/FormFieldValuesResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The form field value was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.
      summary: Upsert Customer Form Field Values
      tags:
      - Customer Form Field Values
  /customers/settings:
    get:
      description: Returns the global-level customer settings.
      operationId: CustomerSettingsGet
      responses:
        '200':
          content:
            application/json:
              examples:
                data:
                  value:
                    customer_group_settings:
                      default_customer_group_id: 1
                      guest_customer_group_id: 1
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: https://bigcommmerce.com/policy
              schema:
                $ref: '#/components/schemas/CustomerSettingsObject'
          description: Returns customer settings values for global level.
      summary: Get Customer Settings
      tags:
      - Customer Settings
    put:
      description: Updates the customer settings on the global level.
      operationId: CustomerSettingsPut
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  customer_group_settings:
                    default_customer_group_id: 0
                    guest_customer_group_id: 0
                  privacy_settings:
                    ask_shopper_for_tracking_consent: true
                    policy_url: https://bigcommmerce.com/policy
            schema:
              $ref: '#/components/schemas/CustomerSettingsObject'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                data:
                  value:
                    customer_group_settings:
                      default_customer_group_id: 0
                      guest_customer_group_id: 0
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      ask_shopper_for_tracking_consent_on_checkout: false
                      policy_url: https://bigcommerce.com/policy
              schema:
                $ref: '#/components/schemas/CustomerSettingsObject'
          description: Customer settings are returned on a global level.
      summary: Update Customer Settings
      tags:
      - Customer Settings
  /customers/settings/channels/{channel_id}:
    get:
      description: "Returns the customer settings per channel.\n\n**Notes**\n\n *\
        \ `null` indicates that there is no override per given channel and values\
        \ are inherited from the global level."
      operationId: CustomerSettingsChannelGet
      parameters:
      - in: path
        name: channel_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                data:
                  value:
                    customer_group_settings:
                      allow_global_logins: true
                      guest_customer_group_id: 1
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      policy_url: https://bigcommmerce.com/policy
              schema:
                $ref: '#/components/schemas/CustomerChannelSettingsObject'
          description: Customer settings for this channel are returned.
      summary: Get Customer Settings per Channel
      tags:
      - Customer Settings Channel
    parameters:
    - in: path
      name: channel_id
      required: true
      schema:
        type: string
    put:
      description: 'Update the customer settings per channel


        **Required Fields**


        * `channel_id`: Provide a `channel_id` array containing one or more channel
        IDs. Customers will have access to these channels and no others. This array
        cannot be empty.


        **Notes**


        * Setting `null` will delete override per given channel, and values will be
        inherited from the global level. Make sure the channel has `allow_global_logins`
        enabled.'
      operationId: CustomerSettingsChannelPut
      parameters:
      - in: path
        name: channel_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  allow_global_logins: true
                  customer_group_settings:
                    default_customer_group_id: 0
                    guest_customer_group_id: 0
                  privacy_settings:
                    ask_shopper_for_tracking_consent: true
                    policy_url: https://bigcommmerce.com/policy
            schema:
              $ref: '#/components/schemas/CustomerChannelSettingsObject'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                example:
                  value:
                    allow_global_logins: true
                    customer_group_settings:
                      default_customer_group_id: 0
                      guest_customer_group_id: 0
                    privacy_settings:
                      ask_shopper_for_tracking_consent: true
                      ask_shopper_for_tracking_consent_on_checkout: null
                      policy_url: https://bigcommmerce.com/policy
              schema:
                $ref: '#/components/schemas/CustomerSettingsObject'
          description: Customer settings are returned.
      summary: Update Customer Settings per Channel
      tags:
      - Customer Settings Channel
  /customers/subscribers:
    delete:
      description: By default, it deletes all *Subscribers*. A filter should be added
        to avoid deleting all subscribers in a store.
      operationId: deleteSubscribers
      parameters:
      - description: 'Filter items by email.

          '
        in: query
        name: email
        schema:
          type: string
      - description: 'Filter items by first_name.

          '
        in: query
        name: first_name
        schema:
          type: string
      - description: 'Filter items by last_name.

          '
        in: query
        name: last_name
        schema:
          type: string
      - description: 'Filter items by source.

          '
        in: query
        name: source
        schema:
          type: string
      - description: 'Filter items by order_id.

          '
        in: query
        name: order_id
        schema:
          type: integer
      - description: 'Filter items by date_created.

          '
        in: query
        name: date_created
        schema:
          format: date-time
          type: string
      - description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete Subscribers
      tags:
      - Subscribers
    get:
      description: Returns a list of *Subscribers*. Optional filter parameters can
        be passed in.
      operationId: getSubscribers
      parameters:
      - description: 'Filter items by email.

          '
        in: query
        name: email
        schema:
          type: string
      - description: 'Filter items by first_name.

          '
        in: query
        name: first_name
        schema:
          type: string
      - description: 'Filter items by last_name.

          '
        in: query
        name: last_name
        schema:
          type: string
      - description: 'Filter items by source.

          '
        in: query
        name: source
        schema:
          type: string
      - description: 'Filter items by order_id.

          '
        in: query
        name: order_id
        schema:
          type: integer
      - description: 'Filter items by date_created.

          '
        in: query
        name: date_created
        schema:
          format: date-time
          type: string
      - description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: Filter items by id.
        in: query
        name: id
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: 'Response payload for the BigCommerce API.

                  '
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/subscriber_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/CollectionMeta'
                title: Subscriber Collection Response
                type: object
          description: ''
      summary: Get Subscribers
      tags:
      - Subscribers
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Creates a *Subscriber*.


        **Required Fields**

        * email


        **Read Only Fields**

        * id'
      operationId: createSubscriber
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriber_Post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
                title: Subscriber Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Subscriber` was in conflict with another subscriber.
            This is the result of duplicate unique values, such as email.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Subscriber` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Create a Subscriber
      tags:
      - Subscribers
      x-codegen-request-body-name: subscriber
  /customers/subscribers/{subscriber_id}:
    delete:
      description: Deletes a *Subscriber*.
      operationId: deleteSubscriberById
      parameters:
      - description: 'The ID of the `Subscriber` requested.

          '
        in: path
        name: subscriber_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Subscriber
      tags:
      - Subscribers
    get:
      description: Returns a *Subscriber*.
      operationId: getSubscriberById
      parameters:
      - description: 'The ID of the `Subscriber` requested.

          '
        in: path
        name: subscriber_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
                title: Subscriber Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get a Subscriber
      tags:
      - Subscribers
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: 'Updates a *Subscriber*.


        **Read Only Fields**

        * id'
      operationId: updateSubscriber
      parameters:
      - description: 'The ID of the `Subscriber` requested.

          '
        in: path
        name: subscriber_id
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriber_Put'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/subscriber_Full'
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
                title: Subscriber Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Subscriber` was in conflict with another subscriber.
            This is the result of duplicate unique values, such as `email`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    properties:
                      additionalProperties:
                        type: string
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: 'The `Subscriber` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Subscriber
      tags:
      - Subscribers
      x-codegen-request-body-name: subscriber
  /customers/validate-credentials:
    post:
      description: Validate a customer credentials - This endpoint has special rate
        limiting protections to protect against abuse.
      operationId: CustomerValidateCredentials
      requestBody:
        content:
          application/json:
            examples:
              data:
                value:
                  channel_id: 1
                  email: foo@bar.com
                  password: password
            schema:
              $ref: '#/components/schemas/ValidateCustomerCredentialsObject'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                data:
                  value:
                    customer_id: 1
                    is_valid: true
              schema:
                $ref: '#/components/schemas/ValidateCustomerCredentialsResponseObject'
          description: Returns if the customer credentials provided are valid or not.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: This is the result of missing required fields. See the response
            for more details.
        '429':
          content:
            application/json:
              examples:
                response:
                  value:
                    errors: {}
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'Allowed number of requests exceeded.

            '
      summary: Validate a customer credentials
      tags:
      - Customer Validate Credentials
  /customers/{customerId}/consent:
    get:
      deprecated: false
      description: Gets the status of a customer's consent to allow data collection
        by cookies and scripts while shopping on a storefront.
      operationId: CustomersConsentByCustomerId_GET
      parameters:
      - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized - the v3 Auth client ID or token in the request
            are not a valid combination for this store.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Missing scope - the v3 Auth token is valid but does not have
            proper permissions to access this endpoint.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid JSON request body - missing or invalid data.
      summary: Get Customer Consent
      tags:
      - Customer Consent
    parameters:
    - in: path
      name: customerId
      required: true
      schema:
        type: string
    put:
      deprecated: false
      description: Updates the status of a customer's consent to allow data collection
        by cookies and scripts while shopping on a storefront.
      operationId: CustomersConsentByCustomerId_PUT
      parameters:
      - description: ''
        in: header
        name: Content-Type
        required: false
        schema:
          default: application/json
          type: string
      - $ref: '#/components/parameters/customerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclareCustomerConsentRequest'
        x-examples:
          application/json:
            allow:
            - essential
            deny: []
      responses:
        '200':
          $ref: '#/components/responses/consent_Resp'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized - the v3 Auth client ID or token in the request
            are not a valid combination for this store.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Missing scope - the v3 Auth token is valid but does not have
            proper permissions to access this endpoint.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid JSON request body - missing or invalid data.
      summary: Update Customer Consent
      tags:
      - Customer Consent
  /customers/{customerId}/stored-instruments:
    get:
      description: Lists all available stored instruments for a customer. This list
        will include all types of stored instruments namely card, account and bank_account
        instruments
      operationId: liststoredinstruments
      parameters:
      - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - billing_address:
                      address1: 1 Sample Street
                      address2: Apt 1
                      city: Las Vegas
                      company: Test Company
                      country_code: US
                      email: example@email.com
                      first_name: Tester
                      last_name: Tester
                      phone: 101-192-0293
                      postal_code: '90854'
                      state_or_province: Nevada
                      state_or_province_code: NV
                    brand: VISA
                    expiry_month: 1
                    expiry_year: 0
                    is_default: true
                    issuer_identification_number: '411111'
                    last_4: '1111'
                    token: 84596bea275fa254da820056bdc3e495bdf01fd11c51b0336347d447ee16200c
                    type: stored_card
              schema:
                items:
                  discriminator:
                    mapping:
                      stored_bank_account: '#/components/schemas/BankAccountInstrument'
                      stored_card: '#/components/schemas/CardInstrument'
                      stored_paypal_account: '#/components/schemas/PaypalAccountInstrument'
                    propertyName: type
                  oneOf:
                  - $ref: '#/components/schemas/CardInstrument'
                  - $ref: '#/components/schemas/PayPalAccountInstrument'
                  - $ref: '#/components/schemas/BankAccountInstrument'
                type: array
          description: OK
        '401':
          content:
            application/json:
              example:
                code: 401
                message: Unauthorized
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              example:
                code: 403
                message: Missing scope
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Missing scope - the v3 Auth token is valid but does not have
            proper permissions to access this endpoint.
      summary: Get Stored Instruments
      tags:
      - Customer Stored Instruments
    parameters:
    - in: path
      name: customerId
      required: true
      schema:
        type: string
  /hooks:
    get:
      description: 'Returns a list of all webhooks on a store associated to the `client_id`
        used to authenticate the request.


        *Note: BigCommerce determines the `client_id` from the `access_token`.*'
      operationId: getAllWebhooks
      parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      - $ref: '#/components/parameters/FilterPageParam'
      - $ref: '#/components/parameters/FilterLimitParam'
      - $ref: '#/components/parameters/IsActive'
      - $ref: '#/components/parameters/FilterByScope'
      - $ref: '#/components/parameters/FilterByDestination'
      responses:
        '200':
          $ref: '#/components/responses/webhooks_Resp'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      summary: Get Webhooks
      tags:
      - Manage Webhooks (Bulk)
    post:
      description: Creates a webhook. Only one webhook at a time can be created. Custom
        headers can be added. Destination URL must be served on port 443 (custom ports
        are not currently supported).
      operationId: createWebhooks
      parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
      responses:
        '200':
          content:
            application/json:
              examples:
                application/json:
                  value:
                    data:
                      client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                      created_at: 1561488106
                      destination: https://665b65a6.ngrok.io/webhooks
                      headers:
                        custom: string
                      id: 18048287
                      is_active: true
                      scope: store/order/*
                      store_hash: sftg45fsd
                      updated_at: 1561488106
                    meta:
                      pagination:
                        count: 5
                        current_page: 1
                        links:
                          current: ?limit=100&page=1
                          next: ?limit=100&page=1
                          previous: ?limit=100&page=1
                        per_page: 100
                        total: 5
                        total_pages: 1
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/webhook_Full'
                  meta:
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
                    type: object
                type: object
          description: ''
          links:
            getHook:
              operationId: getWebhook
              parameters:
                webhook_id: $response.body#/id
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      summary: Create a Webhook
      tags:
      - Manage Webhooks (Bulk)
  /hooks/admin:
    get:
      description: List all notification emails, webhooks, and denylisted domains
        associated with the API account.
      operationId: getHooksAdmin
      parameters:
      - $ref: '#/components/parameters/IsActive'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                properties:
                  data:
                    properties:
                      blocked_domains:
                        description: List of domains (destinations) that are currently
                          on the denylist and are not being sent webhooks.
                        items:
                          properties:
                            destination:
                              description: Domain URL to which webhooks are sent.
                              format: url
                              type: string
                            reasons:
                              items:
                                properties:
                                  count:
                                    type: integer
                                  failure_description:
                                    type: string
                                  timestamp:
                                    description: UTC timestamp in seconds that the
                                      events was created
                                    format: int64
                                    type: integer
                                type: object
                              type: array
                            time_left:
                              description: Remaining time in seconds that the domain
                                is on the denylist.
                              type: integer
                          type: object
                        type: array
                      emails:
                        description: Email addresses to be sent notifications.
                        items:
                          example: webhooks@example.com
                          format: email
                          type: string
                        type: array
                      hooks_list:
                        description: List of all the webhooks associated with the
                          provider API account, filtered by the "active" parameter.
                        items:
                          properties:
                            client_id:
                              description: Client ID, unique to the store or app.
                              minLength: 1
                              type: string
                            created_at:
                              description: Created time
                              type: integer
                            destination:
                              description: URL must be active, return a 200 response,
                                and be served on port 443 (custom ports not currently
                                supported)
                              minLength: 1
                              type: string
                            headers:
                              description: You can pass in any number of custom headers
                                to validate webhooks being returned.
                              type: object
                            id:
                              description: ID of the webhook
                              type: integer
                            is_active:
                              default: true
                              description: If webhook is active or not
                              type: boolean
                            scope:
                              description: Event you subscribe to
                              example: store/order/*
                              minLength: 1
                              type: string
                            store_hash:
                              description: Permanent ID of the BigCommerce store.
                              minLength: 1
                              type: string
                            updated_at:
                              description: Updated time
                              type: integer
                          type: object
                        type: array
                    type: object
                  meta:
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
                    type: object
                type: object
          description: Successful operation.
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      summary: Get Admin Info
      tags:
      - Webhooks Admin
    put:
      description: 'Update email addresses that are sent notification emails when
        any domain associated with the API account is denylisted or when a webhook
        is deactivated. Supports `upsert` functionality in the case that no email
        address exists yet.

        '
      operationId: putHooksAdmin
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  emails:
                  - user@example.com
            schema:
              properties:
                emails:
                  items:
                    example: webhooks@example.com
                    format: email
                    type: string
                  type: array
              type: object
        description: List of notification emails.
        required: true
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      summary: Upsert Email Notifications
      tags:
      - Webhooks Admin
  /hooks/events:
    get:
      description: 'Get a list of events that were sent but not successfully received.
        Events are stored for not less than one week.

        '
      operationId: getWebhookEvents
      parameters:
      - $ref: '#/components/parameters/FilterPageParam'
      - $ref: '#/components/parameters/FilterLimitParam'
      - $ref: '#/components/parameters/FilterMaxCreatedAtParam'
      - $ref: '#/components/parameters/FilterMinCreatedAtParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/HistoryEvent'
                    type: array
                  meta:
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
                    type: object
                type: object
          description: Successful operation.
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      summary: Get Events
      tags:
      - Webhook Events
  /hooks/{webhook_id}:
    delete:
      description: Deletes a webhook. Only one webhook at a time can be deleted. When
        a webhook is deleted, it is returned in the response as a 200 OK.
      operationId: deleteAWebhook
      parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Delete a Webhook
      tags:
      - Manage Webhooks (Single)
    get:
      description: Return a webhook by ID.
      operationId: getWebhook
      parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '404':
          $ref: '#/components/responses/404_NotFound'
      summary: Get a Webhook
      tags:
      - Manage Webhooks (Single)
    parameters:
    - $ref: '#/components/parameters/WebhookId'
    put:
      description: Updates a webhook. Custom headers can be added.
      operationId: updateAWebhook
      parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
        x-examples:
          application/json:
            destination: https://myapp.herokuapp.com/
            headers:
              Password: Goodbye
              User-Name: Hello
            is_active: true
            scope: store/cart/lineItem/*
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Update a Webhook
      tags:
      - Manage Webhooks (Single)
  /marketing/abandoned-cart-emails:
    get:
      description: An array of abandoned cart emails pertaining to a store.
      operationId: getAbandonedCartEmails
      parameters:
      - $ref: '#/components/parameters/ChannelIdOptional'
      responses:
        '200':
          content:
            application/json:
              examples:
                List of abandoned cart templates:
                  value:
                    data:
                    - coupon_code: FF11-22X4
                      id: 1
                      notify_at_minutes: 60
                      template:
                        body: Complete your purchase <a href="{{ notification.checkout_link
                          }}">{{notification.checkout.link}}
                        subject: Complete your purchase at {{ store.name }}
                        translations:
                        - keys:
                            hello_phrase: Welcome back,
                          locale: en
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/AbandondedCartEmail'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
                type: object
          description: OK
      summary: Get all email templates
      tags:
      - Abandoned Cart Emails
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: Create an Abandoned Cart Email template.
      operationId: createEmailTemplate
      parameters:
      - $ref: '#/components/parameters/ChannelIdOptional'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Add active abandoned cart email template:
                value:
                  coupon_code: FF11-22X4
                  is_active: true
                  notify_at_minutes: 60
                  template:
                    body: '{{lang ''hello_phrase'' }}<br>Complete your purchase <a
                      href="{{ notification.checkout_link }}">{{notification.checkout.link}}'
                    subject: Complete your purchase at {{ store.name }}
                    translations:
                    - keys:
                        hello_phrase: Welcome
                      locale: en
            schema:
              $ref: '#/components/schemas/AbandondedCartEmailPayload'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/AbandondedCartEmail'
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
                type: object
          description: OK
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveError'
          description: Unprocessable Entity
      summary: Create email template
      tags:
      - Abandoned Cart Emails
  /marketing/abandoned-cart-emails/default:
    get:
      description: Return default Abandoned Cart Email template.
      operationId: GetDefaultAbandonedCartEmailTemplate
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    body: '{{lang ''hello_phrase''}} Complete your purchase <a href="{{
                      notification.checkout_link }}">{{notification.checkout.link}}'
                    subject: Complete your purchase at {{ store.name }}
                    translations:
                    - keys:
                        hello_phrase: Welcome back
                      locale: en
              schema:
                description: ''
                properties:
                  body:
                    minLength: 1
                    type: string
                  subject:
                    minLength: 1
                    type: string
                  translations:
                    items:
                      properties:
                        keys:
                          properties:
                            hello_phrase:
                              minLength: 1
                              type: string
                          type: object
                        locale:
                          minLength: 1
                          type: string
                      required:
                      - locale
                      - keys
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                - subject
                - body
                - translations
                type: object
          description: OK
      summary: Get default email template
      tags:
      - Abandoned Cart Emails
    parameters:
    - $ref: '#/components/parameters/Accept'
  /marketing/abandoned-cart-emails/settings:
    get:
      description: Read Abandoned Cart Email Template settings.
      operationId: GetAbandonedCartEmailTemplateSettings
      parameters:
      - $ref: '#/components/parameters/ChannelIdRequired'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonedCartSettings'
          description: OK
      summary: Get email template settings
      tags:
      - Template settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Update Abandoned Cart Email template settings.
      operationId: updateEmailTemplateSettings
      parameters:
      - $ref: '#/components/parameters/ChannelIdOptional'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandonedCartSettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonedCartSettings'
          description: OK
      summary: Update email template settings
      tags:
      - Template settings
  /marketing/abandoned-cart-emails/{id}:
    delete:
      description: Delete Abandoned Cart Email template.
      operationId: deleteAbandonedCartEmailTemplateId
      responses:
        '204':
          description: No Content
      summary: Delete email template
      tags:
      - Abandoned Cart Emails
    get:
      description: Get a single Abandoned Cart Email template.
      operationId: getAbandonedCartEmailTemplateId
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/AbandondedCartEmail'
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
                type: object
          description: OK
      summary: Get an email template
      tags:
      - Abandoned Cart Emails
    parameters:
    - description: ID of the Abandoned Cart Email template.
      in: path
      name: id
      required: true
      schema:
        minimum: 0
        type: integer
    - $ref: '#/components/parameters/Accept'
    put:
      description: Update an email template.
      operationId: updateAbandonedCartEmailsId
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Disable email:
                value:
                  is_active: false
              Enable email:
                value:
                  is_active: true
              Update Abandoned Cart Email template:
                value:
                  coupon_code: FF11-22X4
                  is_active: true
                  notify_at_minutes: 60
                  template:
                    body: Complete your purchase <a href="{{ notification.checkout_link
                      }}">{{notification.checkout.link}}
                    subject: Complete your purchase at {{ store.name }}
                    translations:
                    - keys:
                        hello_phrase: Welcome back,
                      locale: en
              Update coupon code and notification time:
                value:
                  coupon_code: FF11-22X4
                  notify_at_minutes: 60
            schema:
              $ref: '#/components/schemas/AbandondedCartEmailPayload'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/AbandondedCartEmail'
                  meta:
                    $ref: '#/components/schemas/metaCollection_open'
                type: object
          description: OK
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveError'
          description: Unprocessable Entity
      summary: Update an email template
      tags:
      - Abandoned Cart Emails
  /marketing/email-templates:
    get:
      description: 'Get a list of email templates.


        > #### Note

        > The `/marketing/email-templates` endpoints only work after opting into the
        new email management experience from your storeʼs control panel. You can opt-in
        by visiting Email Templates. If you have already opted in, visiting the Email
        Templates page will return a `404` error, and you will be able to access the
        new Transactional Emails page.'
      operationId: getEmailTemplates
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                    - body: <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title>
                        </head> <body> <p>     {{lang "reset_password" name=store.name}}
                        </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}}
                        </a>  </body> </html>
                      subject: Reset your password at {{store.name}}
                      translations:
                      - keys:
                          reset_password: 'To change your customer account password
                            at {{name}} please click this link or copy and paste it
                            into your browser:'
                        locale: en
                      type_id: account_reset_password_email
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/EmailTemplatesCollection'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: 'An array of email templates on the store

            '
      summary: Get Email Templates
      tags:
      - Email Templates
    parameters:
    - $ref: '#/components/parameters/Accept'
  /marketing/email-templates/{template-name}:
    delete:
      description: Removes a channel-specific email template override.
      operationId: deleteEmailTemplateOverride
      parameters:
      - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'
      responses:
        '200':
          description: OK
      summary: Delete Email Template Override
      tags:
      - Email Templates
    get:
      description: 'Get a single global email template or a channel-specific email
        template override.


        > #### Note

        > The `/marketing/email-templates` endpoints only work after opting into the
        new email management experience from your storeʼs control panel. You can opt-in
        by visiting [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates).
        If you have already opted in, visiting the [Email Templates](https://login.bigcommerce.com/deep-links/manage/marketing/email-templates)
        page will return a `404` error, and you will be able to access the new [Transactional
        Emails](https://login.bigcommerce.com/deep-links/manage/transactional-emails)
        page.'
      operationId: getEmailTemplate
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      body: <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title>
                        </head> <body> <p>     {{lang "reset_password" name=store.name}}
                        </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}}
                        </a>  </body> </html>
                      subject: Reset your password at {{store.name}}
                      translations:
                      - keys:
                          reset_password: 'To change your customer account password
                            at {{name}} please click this link or copy and paste it
                            into your browser:'
                        locale: en
                      type_id: account_reset_password_email
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/EmailTemplate'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: OK
      summary: Get an Email Template
      tags:
      - Email Templates
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: template-name
      required: true
      schema:
        type: string
    put:
      description: Update a global template or create a channel-specific email template
        override.
      operationId: updateEmailTemplate
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  body: <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title>
                    </head> <body> <p>     {{lang "reset_password" name=store.name}}
                    </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}}
                    </a>  </body> </html>
                  subject: Reset your password at {{store.name}}
                  translations:
                  - keys:
                      reset_password: 'To change your customer account password at
                        {{name}} please click this link or copy and paste it into
                        your browser:'
                    locale: en
                  type_id: account_reset_password_email
            schema:
              $ref: '#/components/schemas/EmailTemplate'
        description: ''
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      body: <!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <title>Title</title>
                        </head> <body> <p>     {{lang "reset_password" name=store.name}}
                        </p> <br/> <br/> <a href="{{account.reset_password_link}}">     {{account.reset_password_link}}
                        </a>  </body> </html>
                      subject: Reset your password at {{store.name}}
                      translations:
                      - keys:
                          reset_password: 'To change your customer account password
                            at {{name}} please click this link or copy and paste it
                            into your browser:'
                        locale: en
                      type_id: account_reset_password_email
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/EmailTemplate'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: Update a Template
      tags:
      - Email Templates
  /orders/payment_actions/refunds:
    parameters:
    - $ref: '#/components/parameters/Accept'
  /orders/payment_actions/refunds/{refund_id}:
    get:
      description: Returns a refund by refund ID.
      operationId: RefundID_Get
      responses:
        '200':
          $ref: '#/components/responses/RefundID_Response'
      summary: Get a Refund
      tags:
      - Payment Actions
    parameters:
    - $ref: '#/components/parameters/Accept'
    - description: Refund ID.
      in: path
      name: refund_id
      required: true
      schema:
        type: integer
  /orders/settings:
    get:
      description: Returns global order settings.
      operationId: GetGlobalOrderSettings
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                allOf:
                - $ref: '#/components/schemas/GlobalOrderSettings'
                - properties:
                    meta:
                      $ref: '#/components/schemas/metaEmpty_Full'
                  type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
          description: Bad request. Authentication Required.
      summary: Get Global Order Settings
      tags:
      - Order Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Updates global order settings.
      operationId: UpdateGlobalOrderSettings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              DisableOrderPlacedNotificatons:
                $ref: '#/components/examples/GlobalOrderSettingsDisableOrderPlacedNotificatons'
              EnableMultipleOrderNotifications:
                $ref: '#/components/examples/EnableMultipleOrderNotifications'
            schema:
              $ref: '#/components/schemas/GlobalOrderSettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - type: object
                - $ref: '#/components/schemas/GlobalOrderSettings'
                - properties:
                    meta:
                      $ref: '#/components/schemas/metaEmpty_Full'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
          description: Bad request. Authentication Required.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
          description: Order settings data is not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.
      summary: Update Global Order Settings
      tags:
      - Order Settings
  /orders/settings/channels/{channel_id}:
    get:
      description: Returns order settings for a specific channel.
      operationId: GetChannelOrderSettings
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                allOf:
                - $ref: '#/components/schemas/ChannelOrderSettings'
                - properties:
                    meta:
                      $ref: '#/components/schemas/metaEmpty_Full'
                  type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
          description: Bad request. Authentication Required.
      summary: Get Channel Order Settings
      tags:
      - Order Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    - description: Channel ID
      in: path
      name: channel_id
      required: true
      schema:
        type: string
    put:
      description: "Updates order settings for a specific channel.\n\n **Note:** You\
        \ must override both notifications `email_addresses` or neither, i.e. either\
        \ both notification `email_addresses` are an array of valid email addresses,\
        \ or both `email_addresses` must be null. You may not have one set to an array\
        \ of addresses and the other set to `null`."
      operationId: UpdateChannelOrderSettings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              DisableMultipleNotificatonsForChannels:
                $ref: '#/components/examples/ChannelOrderSettingsDisableBothNotifications'
              OverrideOrderPlacedEmailAddressesAndDisableForwardEmailAddresses:
                $ref: '#/components/examples/ChannelOrderSettingsOverrideOrderPlacedEmailAddressesAndDisableForwardEmail'
              ResetChannelSettings:
                $ref: '#/components/examples/ChannelOrderSettingsReset'
            schema:
              $ref: '#/components/schemas/ChannelOrderSettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ChannelOrderSettings'
                - properties:
                    meta:
                      $ref: '#/components/schemas/metaEmpty_Full'
                  type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
          description: Bad request. Authentication Required.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
          description: Order settings data is not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.
      summary: Update Channel Order Settings
      tags:
      - Order Settings
  /orders/{order_id}/metafields:
    get:
      description: 'Gets a `Metafield` object list, by `order_id`.


        The maximum number of metafields allowed on each order, product, category,
        variant, or brand is 250 per client ID.

        '
      operationId: getOrderMetafieldsByOrderId
      parameters:
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/LimitParam'
      - $ref: '#/components/parameters/MetafieldKeyParam'
      - $ref: '#/components/parameters/MetafieldNamespaceParam'
      - $ref: '#/components/parameters/DirectionParam'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
          description: 'An array of metafields and metadata.

            '
        '404':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    status: 404
                    title: There was no order found with ID 1010
                    type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/NotFound'
          description: 'The resource was not found.

            '
      summary: Get Metafields
      tags:
      - Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/OrderIdParam'
    post:
      description: 'Creates an order `Metafield`.


        The maximum number of metafields allowed on each order, product, category,
        variant, or brand is 250 per client ID.'
      operationId: createOrderMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/MetafieldPost'
        description: 'A `Metafield` object.

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
          description: 'A `Metafield` object.

            '
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Metafield` conflicts with another `Metafield`. This can
            be the result of duplicate unique key combinations of the app''s client
            ID, namespace, key, resource_type, and resource_id.

            '
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 'The `Metafield` is not valid. This is the result of missing
            required fields or of invalid data. See the response for more details.

            '
      summary: Create Metafields
      tags:
      - Metafields
  /orders/{order_id}/metafields/{metafield_id}:
    delete:
      description: 'Deletes a `Metafield`.

        '
      operationId: deleteOrderMetafieldById
      responses:
        '204':
          description: 'An empty response.

            '
      summary: Delete a Metafield
      tags:
      - Metafields
    get:
      description: 'Gets a `Metafield`, by `order_id`.

        '
      operationId: getOrderMetafieldByOrderIdAndMetafieldId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
          description: 'A `Metafield` object.

            '
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: 'The resource was not found.

            '
      summary: Get a Metafield
      tags:
      - Metafields
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/OrderIdParam'
    - description: 'The ID of the `Metafield`.

        '
      in: path
      name: metafield_id
      required: true
      schema:
        type: integer
    put:
      description: 'Updates a `Metafield` object.


        The maxiumum number of metafields allowed on each order, product, category,
        variant, or brand is 250 per client ID.'
      operationId: updateOrderMetafield
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetafieldPut'
        description: 'A `Metafield` object.

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
          description: 'A metafield and metadata.

            '
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: 'The resource was not found.

            '
      summary: Update a Metafield
      tags:
      - Metafields
  /orders/{order_id}/payment_actions/capture:
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/OrderIdParam'
    post:
      description: 'Capture the payment for an order. When there are no payment method
        validation issues, the capture process is successful, the `payment_status`
        updates to `capture pending`, and the payment request is scheduled. The payment
        request itself occurs asynchronously.

        Requires at least one of the following scopes:

        * `store_v2_orders`

        * `store_v2_transactions`'
      operationId: paymentactioncapture
      parameters:
      - $ref: '#/components/parameters/ContentType'
      responses:
        '201':
          $ref: '#/components/responses/201_Created'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
        '502':
          $ref: '#/components/responses/502_GatewayError'
        '503':
          $ref: '#/components/responses/503_ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
      summary: Capture order payment
      tags:
      - Payment Actions
  /orders/{order_id}/payment_actions/refund_quotes:
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/OrderIdParam'
    post:
      description: 'Calculate the tax amount, total refund amount and get available
        payment options for an order refund by providing items and costs or quantities
        to refund.


        Requires at least one of the following scopes:

        * `store_v2_orders`

        * `store_v2_transactions`


        **Note:**

        Order refunds are processed consecutively. Processing synchronous refunds
        on an order are not yet supported.'
      operationId: postrefundquote
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundQuote_Post'
          application/xml:
            schema:
              properties: {}
              type: object
          multipart/form-data:
            schema:
              properties: {}
              type: object
        description: ''
        required: true
        x-examples:
          Amount:
            items:
            - amount: 10
              item_id: 79
              item_type: SHIPPING
          Multiple Items:
            items:
            - item_id: 75
              item_type: PRODUCT
              quantity: 1
            - amount: 10
              item_id: 79
              item_type: SHIPPING
          Quantity:
            items:
            - item_id: 75
              item_type: PRODUCT
              quantity: 1
          Tax Exempt (Order Level):
            items:
            - amount: 1
              item_id: 1234
              item_type: ORDER
              reason: Overcharged $1.00
      responses:
        '201':
          $ref: '#/components/responses/RefundQuote_Resp'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      summary: Create a Refund Quote
      tags:
      - Payment Actions
  /orders/{order_id}/payment_actions/refunds:
    get:
      description: 'Returns a list of refunds ordered by refund ID in ascending order
        for the given order.


        Requires at least one of the following scopes:

        * `store_v2_transactions_read_only`

        * `store_v2_transactions`

        * `store_v2_orders_read_only`

        * `store_v2_orders`'
      operationId: getorderrefunds
      responses:
        '200':
          $ref: '#/components/responses/RefundCollection_Resp'
      summary: Get Refunds for Order
      tags:
      - Payment Actions
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/OrderIdParam'
    post:
      description: 'Creates a refund. When there are no payment method validation
        issues, the refund process is successful and the refund payment request is
        scheduled. The payment request itself occurs asynchronously.


        Requires at least one of the following scopes:

        * `store_v2_orders`

        * `store_v2_transactions`


        **Note:**

        Order refunds are processed consecutively. Processing synchronous refunds
        on an order are not yet supported.'
      operationId: postrefund
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest_Post'
        required: true
        x-examples:
          Merchant Calculated Override:
            items:
            - amount: 10
              item_id: 1234
              item_type: ORDER
              reason: overcharged
            merchant_calculated_override:
              tax_amount: 0
              total_amount: 10
            order_id: 1234
            payments:
            - amount: 10
              offline: false
              provider_description: Authorize.net
              provider_id: authorizenet
          Multiple Items:
            items:
            - item_id: 75
              item_type: PRODUCT
              quantity: 1
            - amount: 10
              item_id: 79
              item_type: SHIPPING
            payments:
            - amount: 232.75
              offline: false
              provider_id: storecredit
            tax_adjustment_amount: 0
          Quantity:
            items:
            - amount: 35.0
              item_id: 31
              item_type: PRODUCT
              quantity: 1
              reason: Not the right product.
            merchant_calculated_override:
            - total_amount: 45.0
              total_tax: null
            payments:
            - amount: 37.89
              offline: false
              provider_id: storecredit
          Tax Exempt (Order Level):
            items:
            - amount: 1
              item_id: 1234
              item_type: ORDER
              reason: overcharged
            order_id: 1234
            payments:
            - amount: 1
              offline: false
              provider_description: Authorize.net
              provider_id: authorizenet
      responses:
        '201':
          $ref: '#/components/responses/Refund_Resp'
        '422':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - status: 422
                      title: Unable to provide store credit for a guest customer.
                      type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                    type: array
                type: object
          description: "Unable to process a guest refund with store credit. \n"
        '503':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - error: Tax service gone away
                      order_id: 1
                      status: 503
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/FailedQuoteError'
                    type: array
                  meta:
                    $ref: '#/components/schemas/Meta'
                type: object
          description: Service Unavailable
      summary: Create a Refund
      tags:
      - Payment Actions
  /orders/{order_id}/payment_actions/void:
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/OrderIdParam'
    post:
      description: 'Void the payment for an order. When there are no payment method
        validation issues, the void process is successful, the `payment_status` updates
        to `void pending`, and the void payment request is scheduled. The payment
        request itself occurs asynchronously.


        Requires at least one of the following scopes:

        * `store_v2_orders`

        * `store_v2_transactions`'
      operationId: paymentactionvoid
      parameters:
      - $ref: '#/components/parameters/ContentType'
      responses:
        '201':
          $ref: '#/components/responses/201_Created'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
        '502':
          $ref: '#/components/responses/502_GatewayError'
        '503':
          $ref: '#/components/responses/503_ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
      summary: Void
      tags:
      - Payment Actions
  /orders/{order_id}/transactions:
    get:
      description: 'Returns an **order''s** transactions.


        **Usage Notes**

        * Depending on the payment method, different information will be available
        (not all payment gateways return full card or fraud detail).



        Requires at least one of the following scopes:

        * `store_v2_transactions_read_only`

        * `store_v2_transactions`'
      operationId: getTransactions
      responses:
        '200':
          $ref: '#/components/responses/TransactionCollection_Resp'
        '204':
          content:
            application/json:
              schema:
                description: No-content response for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '204 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the situation.
                    type: string
                  type:
                    type: string
                title: No Content
                type: object
          description: 'No content found to fulfill request.

            '
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
      summary: Get Transactions
      tags:
      - Transactions
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/OrderIdParam'
  /payments:
    post:
      description: Process payments for an order. See [Payment Processing](/api-docs/store-management/payment-processing)
        for more information.
      operationId: PaymentsPost
      parameters:
      - $ref: '#/components/parameters/AcceptPaymentResponse'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Card:
                value:
                  payment:
                    instrument:
                      cardholder_name: string
                      expiry_month: 1
                      expiry_year: 0
                      issue_month: 1
                      issue_number: 0
                      issue_year: 0
                      number: string
                      type: card
                      verification_value: stri
                    payment_method_id: string
              Gift Certificate:
                value:
                  payment:
                    instrument:
                      gift_certificate_code: ABC-DEF-GXX
                      type: gift_certificate
                    payment_method_id: bigcommerce.gift_certificate
              Store Credit:
                value:
                  payment:
                    instrument:
                      type: store_credit
                    payment_method_id: bigcommerce.store_credit
              Stored Card:
                value:
                  payment:
                    instrument:
                      token: 8cdf7b6ea1b27119463bf9e5106639618cc77a9adc49f0069ca8b756cc15caee
                      type: stored_card
                      verification_value: '1142'
                    payment_method_id: adyenv2.scheme
                    save_instrument: true
              Stored PayPal Account:
                value:
                  payment:
                    instrument:
                      token: 2c129313bcffe4501ec5fa2764c8c16320e38c7ba9e8cdf95583b541bb05ad91
                      type: stored_paypal_account
                    payment_method_id: braintree.paypal
            schema:
              properties:
                payment:
                  properties:
                    instrument:
                      anyOf:
                      - $ref: '#/components/schemas/Card'
                      - $ref: '#/components/schemas/StoredCard'
                      - $ref: '#/components/schemas/StoredPayPalAccount'
                      - $ref: '#/components/schemas/GiftCertificate'
                      - $ref: '#/components/schemas/StoreCredit'
                    payment_method_id:
                      description: Identifier for payment method that will be used
                        for this payment and `id` from the Get Accepted Payment Methods
                        API
                      minLength: 1
                      type: string
                    save_instrument:
                      description: To use `save_instrument`, configure the payment
                        gateway to accept stored cards.
                      type: boolean
                  required:
                  - instrument
                  - payment_method_id
                  title: Payment
                  type: object
              required:
              - payment
              title: Payment Request
              type: object
        description: ''
        required: true
        x-examples:
          Credit Card: "{\n  \"payment\": {\n    \"instrument\": {\n      \"type\"\
            : \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\"\
            : \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n\
            \      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\"\
            : \"authorizenet.card\",\n     \"save_instrument\": true\n  }\n}"
          Payment Access Token: "curl -X POST \\\n  https://payments.bigcommerce.com/stores/{store_hash}/payments\
            \ \\\n  -H 'Accept: application/vnd.bc.v1+json' \\\n  -H 'Authorization:\
            \ PAT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NsdfasftIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXQiOjE1NTEzOTA1NDIsImRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo'\
            \ \\\n  -H 'Content-Type: application/json' \\"
          Vaulted Card:
            payment:
              instrument:
                token: vaulted instrument token
                type: stored_card
                verification_value: '123'
              payment_method_id: stripe.card
              save_instrument: true
          application/json:
            payment:
              amount: 81505146
              currency_code: NYE
              instrument: {}
              payment_method_id: Lorem in
      responses:
        '202':
          content:
            application/json:
              examples:
                response:
                  value:
                    id: 227d9e1e-94f8-408c-95a5-f97b30592eb7
                    status: pending
                    transaction_type: authorization
              schema:
                properties:
                  id:
                    description: Identifier for this transaction
                    type: string
                  status:
                    description: Status to indicate a success response
                    enum:
                    - success
                    - pending
                    title: Status
                    type: string
                  transaction_type:
                    description: Transaction type for this payment
                    enum:
                    - authorization
                    - purchase
                    example: authorization
                    title: Transaction Type
                    type: string
                title: Success Payment Response
                type: object
          description: Payment has been successfully processed
        '400':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    description: ''
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: Error Payment Response
                type: object
          description: Payment request has been rejected due to malformed request
        '401':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    description: ''
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: Error Payment Response
                type: object
          description: Valid authentication required
        '422':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    description: ''
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: Error Payment Response
                type: object
          description: Payment request has been rejected due to missing, invalid data
            or declined by payment provider
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    description: ''
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: Error Payment Response
                type: object
          description: Internal server error
      security:
      - BearerPAT: []
      servers:
      - description: BigCommerce Payments Gateway
        url: https://payments.bigcommerce.com
      summary: Process Payment
      tags:
      - Process Payment
  /payments/access_tokens:
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      deprecated: false
      description: 'This endpoint provides the capability to create a payment access
        token. The payment access token is required when making request to Payment
        API for submitting payment for an order.


        After the token is created, use the token to [Process Payments](/docs/rest-payments/processing/process-payment#process-payment).


        **Required Fields**

        * order_id'
      operationId: PaymentsAccessTokensPost
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  order:
                    id: 1
                    is_recurring: false
            schema:
              properties:
                order:
                  $ref: '#/components/schemas/Order'
              required:
              - order
              title: Payment Access Token Request
              type: object
        required: true
        x-examples:
          Example:
            order:
              id: 182
          application/json:
            order:
              id: 44796008
              is_recurring: true
      responses:
        '201':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      id: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MTUyNTA3NTksIm5iZiI6MTYxNTI0Nz
                        E1OSwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoieHNsM3
                        JoZGYzNiIsImp0aSI6IjNhOGE3NTJjLTBmNWQtNDNmNS05MzdjLTRhMTYzODBlMW
                        YwZCIsImlhdCI6MTYxNTI0NzE1OSwiZGF0YSI6eyJzdG9yZV9pZCI6IjEwMDEzMz
                        YzMjQiLCJvcmRlcl9pZCI6IjE2NiIsImFtb3VudCI6NDU3OTAsImN1cnJlbmN5Ij
                        oiVVNEIn19.dpCDgOfbNrz095VARY20yYBRTOuq-W1F0ETTgf1Zhbs
                    meta: {}
              schema:
                properties:
                  data:
                    properties:
                      id:
                        description: Payment access token. This token is required
                          in subsequent payment request to Payment API endpoint.
                        minLength: 1
                        type: string
                    required:
                    - id
                    title: Payment Access Token
                    type: object
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                title: Payments Access Tokens Response
                type: object
          description: Payment access token has been successfully created
          headers: {}
        '400':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Request has been rejected
        '401':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Valid authentication required
        '404':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Request has been rejected due to resource not being found
        '409':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Request has been rejected due to conflict with the current
            state of the target resource
        '422':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Request has been rejected due to missing or invalid data
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Internal server error
      security:
      - X-Auth-Token: []
      servers:
      - description: BigCommerce API Gateway
        url: https://api.bigcommerce.com/stores/{store_hash}/v3
        variables:
          store_hash:
            default: store_hash
            description: Permanent ID of the BigCommerce store.
      summary: Create Payment Access Token
      tags:
      - Access Tokens
  /payments/methods:
    get:
      deprecated: false
      description: 'Returns a list of accepted payment methods based on the `order_id`
        or `checkout_id`.


        **Notes**

        * Use the [Create an Order](/docs/rest-management/orders#create-an-order)
        endpoint to generate the `order_id`.

        * Orders created will be set to incomplete order status.

        * The cart ID and checkout ID are the same.


        **Required Fields**

        * `order_id` or `checkout_id`'
      operationId: PaymentsMethodsGet
      parameters:
      - description: Identifier for the order
        in: query
        name: order_id
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: int32
          type: integer
      - description: Identifier for the checkout (same as the cart ID)
        in: query
        name: checkout_id
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          type: string
      responses:
        '200':
          $ref: '#/components/responses/paymentsMethods_Resp'
        '400':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Request has been rejected
        '401':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Valid authentication required
        '404':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Request has been rejected due to resource not being found
        '422':
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Request has been rejected due to missing or invalid data
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Code representing the particular error
                    format: int32
                    type: integer
                  detail:
                    description: Detailed summary describing the particular error
                    type: string
                  errors:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    description: HTTP status code
                    format: int32
                    type: integer
                  title:
                    description: Short summary describing the particular error
                    type: string
                  type:
                    description: Reference that identifies the particular error
                    type: string
                required:
                - status
                - title
                - type
                title: ErrorResponse
                type: object
          description: Internal server error
      security:
      - X-Auth-Token: []
      servers:
      - description: BigCommerce API Gateway
        url: https://api.bigcommerce.com/stores/{store_hash}/v3
        variables:
          store_hash:
            default: store_hash
            description: Permanent ID of the BigCommerce store.
      summary: Get Accepted Payment Methods
      tags:
      - Accepted Methods
    parameters:
    - $ref: '#/components/parameters/Accept'
  /pricelists:
    delete:
      description: Deletes a *Price List*. All associated price records are also removed.
        Optional parameters can be passed in.
      operationId: deletePriceListsByFilter
      parameters:
      - description: 'Filter items by ID.

          '
        in: query
        name: id
        schema:
          type: integer
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: '`204 No Content`. The action has been performed and no further
            information will be supplied. `null` is returned.'
      summary: Delete All Price Lists
      tags:
      - Price Lists
    get:
      description: Returns a list of *Price Lists*. Optional parameters can be passed
        in.
      operationId: getPriceListCollection
      parameters:
      - description: 'Filter items by ID.

          '
        in: query
        name: id
        schema:
          type: integer
      - description: 'Filter items by name.

          '
        in: query
        name: name
        schema:
          type: string
      - description: 'Filter items by date_created.

          '
        in: query
        name: date_created
        schema:
          format: date-time
          type: string
      - description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2018-06-15`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: name:like
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: date_created:max
        schema:
          type: string
      - in: query
        name: date_created:min
        schema:
          type: string
      - in: query
        name: date_modified:max
        schema:
          type: string
      - in: query
        name: date_modified:min
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - active: true
                  date_created: '2022-02-26T17:33:11Z'
                  date_modified: '2022-05-08T14:05:27Z'
                  id: 1
                  name: Warehouse
                - active: true
                  date_created: '2022-02-26T17:37:01Z'
                  date_modified: '2022-02-26T17:37:01Z'
                  id: 2
                  name: B2B
                - active: true
                  date_created: '2022-04-05T16:05:12Z'
                  date_modified: '2022-04-05T16:05:12Z'
                  id: 3
                  name: Wholesale
                meta:
                  pagination:
                    count: 3
                    current_page: 1
                    per_page: 50
                    total: 3
                    total_pages: 1
              schema:
                description: Get All PriceLists.
                properties:
                  data:
                    items:
                      allOf:
                      - properties:
                          date_created:
                            description: 'The date on which the `Price List` was created.

                              '
                            example: '2018-04-05T16:05:12Z'
                            format: date-time
                            type: string
                          date_modified:
                            description: 'The date on which the `Price List` was created.

                              '
                            example: '2018-04-05T16:05:12Z'
                            format: date-time
                            type: string
                          id:
                            description: 'The unique numeric ID of the `Price List`;
                              this number increments sequentially.

                              '
                            example: 3
                            type: integer
                        type: object
                      - description: Specifies the Common Price List properties.
                        properties:
                          active:
                            description: 'Boolean value that specifies whether this
                              `Price List` and its prices are active or not. Defaults
                              to `true`.

                              '
                            example: true
                            type: boolean
                          name:
                            description: The unique name of the Price List. Required
                              in a POST request.
                            example: Wholesale
                            type: string
                            x-required:
                            - post
                        required:
                        - name
                        title: PriceList Base
                        type: object
                      title: Price List
                      type: object
                    type: array
                  meta:
                    description: Data related to the response, including pagination
                      and collection totals.
                    properties:
                      pagination:
                        description: Data related to the response, including pagination
                          and collection totals.
                        properties:
                          count:
                            description: 'Total number of items in the collection
                              response.

                              '
                            example: 36
                            type: integer
                          current_page:
                            description: 'The page you are currently on within the
                              collection.

                              '
                            example: 1
                            type: integer
                          links:
                            description: 'Pagination links for the previous and next
                              parts of the whole collection.

                              '
                            properties:
                              current:
                                description: 'Link to the current page returned in
                                  the response.

                                  '
                                example: ?page=1&limit=50
                                type: string
                              next:
                                description: 'Link to the next page returned in the
                                  response.

                                  '
                                type: string
                              previous:
                                description: 'Link to the previous page returned in
                                  the response.

                                  '
                                type: string
                            type: object
                          per_page:
                            description: 'The amount of items returned in the collection
                              per page, controlled by the limit parameter.

                              '
                            example: 50
                            type: integer
                          total:
                            description: 'Total number of items in the result set.

                              '
                            example: 36
                            type: integer
                          total_pages:
                            description: 'The total number of pages in the collection.

                              '
                            example: 1
                            type: integer
                        title: Pagination
                        type: object
                    title: Collection Meta
                    type: object
                title: PriceList Collection Response
                type: object
          description: ''
      summary: Get All Price Lists
      tags:
      - Price Lists
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Creates a *Price List*.


        **Required Fields**

        * name'
      operationId: createPriceList
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Specifies the Common Price List properties.
                properties:
                  active:
                    description: 'Boolean value that specifies whether this `Price
                      List` and its prices are active or not. Defaults to `true`.

                      '
                    example: true
                    type: boolean
                  name:
                    description: The unique name of the Price List. Required in a
                      POST request.
                    example: Wholesale
                    type: string
                    x-required:
                    - post
                required:
                - name
                title: PriceList Base
                type: object
              description: 'Creates a Price List. '
              title: PriceList Post
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  active: false
                  date_created: '2022-09-17T18:41:59Z'
                  date_modified: '2022-09-17T18:41:59Z'
                  id: 4
                  name: Wholesale Group - Trade Show
                meta: {}
              schema:
                description: 'PriceList Response returns for:


                  * Create a PriceList

                  * Get a PriceList

                  * Update a PriceList'
                properties:
                  data:
                    allOf:
                    - properties:
                        date_created:
                          description: 'The date on which the `Price List` was created.

                            '
                          example: '2022-04-05T16:05:12Z'
                          format: date-time
                          type: string
                        date_modified:
                          description: 'The date on which the `Price List` was created.

                            '
                          example: '2022-04-05T16:05:12Z'
                          format: date-time
                          type: string
                        id:
                          description: 'The unique numeric ID of the `Price List`;
                            this number increments sequentially.

                            '
                          example: 3
                          type: integer
                      type: object
                    - description: Specifies the Common Price List properties.
                      properties:
                        active:
                          description: 'Boolean value that specifies whether this
                            `Price List` and its prices are active or not. Defaults
                            to `true`.

                            '
                          example: true
                          type: boolean
                        name:
                          description: The unique name of the Price List. Required
                            in a POST request.
                          example: Wholesale
                          type: string
                          x-required:
                          - post
                      required:
                      - name
                      title: PriceList Base
                      type: object
                    title: Price List
                    type: object
                  meta:
                    $ref: '#/components/schemas/Meta'
                title: Price List Response
                type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Price List` conflicts with another Price List. This is the
            result of duplicate unique values, such as `name`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Price List` is not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.

            '
      summary: Create a Price List
      tags:
      - Price Lists
      x-codegen-request-body-name: PriceList
  /pricelists/assignments:
    delete:
      description: 'Deletes one or more `Price List Assignments` objects from BigCommerce
        using a query parameter. You must use at least one query parameter. '
      operationId: deletePriceListAssignmentsByFilter
      parameters:
      - $ref: '#/components/parameters/FilterAssignmentIdParam'
      - $ref: '#/components/parameters/FilterPriceListIdParam'
      - $ref: '#/components/parameters/FilterCustomerGroupIdParam'
      - $ref: '#/components/parameters/FilterChannelIdParam'
      - $ref: '#/components/parameters/ChannelIdInParam'
      responses:
        '204':
          description: No Content.
      summary: Delete Price List Assignments
      tags:
      - Price Lists Assignments
    get:
      description: Fetches an array of `Price List Assignments` matching a particular
        Customer Group and Price List and Channel.
      operationId: GetListOfPriceListAssignments
      parameters:
      - description: The ID of the `Price List Assignment`.
        in: query
        name: id
        schema:
          type: integer
      - description: The ID of the `Price List`.
        in: query
        name: price_list_id
        schema:
          type: integer
      - description: The ID of the `Customer Group`.
        in: query
        name: customer_group_id
        schema:
          type: integer
      - description: The ID of the `Channel`.
        in: query
        name: channel_id
        schema:
          type: integer
      - description: Filter items by a comma-separated list of `id`s.
        explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Filter items by a comma-separated list of `customer_group_id`s.
        explode: false
        in: query
        name: customer_group_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Filter items by a comma-separated list of `price_list_id`s.
        explode: false
        in: query
        name: price_list_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Filter items by a comma-separated list of `channel_id`s.
        explode: false
        in: query
        name: channel_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentsForGetResponse'
          description: An array of price list assignments and metadata.
      summary: Get Price List Assignments
      tags:
      - Price Lists Assignments
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Creates a batch of `Price List Assignments`. \n\n**Note:** The\
        \ batch limit for `Price List Assignments` is 25."
      operationId: CreatePriceListAssignments
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchPriceListAssignmentsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessBatchResponse'
          description: OK
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListAssignmentsBatchErrorResponse'
          description: Error response. Includes the errors for each reference ID.
      summary: Create Price List Assignments
      tags:
      - Price Lists Assignments
  /pricelists/{price_list_id}:
    delete:
      description: 'Deletes a *Price List*. All associated price records are also
        removed.


        **Limits**

        * Limit of 1 concurrent request.'
      operationId: deletePriceList
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Action has been enacted and no further information is to be
            supplied. `null` is returned.
      summary: Delete a Price List
      tags:
      - Price Lists
    get:
      description: ' Returns a single *Price List*.'
      operationId: getPriceList
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: Filter items by ID.
        in: query
        name: id
        schema:
          type: integer
      - description: Filter items by name.
        in: query
        name: name
        schema:
          type: string
      - description: Filter items by date_created.
        in: query
        name: date_created
        schema:
          format: date-time
          type: string
      - description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2022-06-15`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Specifies the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  active: true
                  date_created: '2022-02-26T17:37:01Z'
                  date_modified: '2022-09-17T18:34:36Z'
                  id: 2
                  name: B2B
                meta: {}
              schema:
                description: 'PriceList Response returns for:


                  * Create a PriceList

                  * Get a PriceList

                  * Update a PriceList'
                properties:
                  data:
                    description: Specifies the Common Price List properties.
                    properties:
                      active:
                        description: 'Boolean value that specifies whether this `Price
                          List` and its prices are active or not. Defaults to `true`.

                          '
                        example: true
                        type: boolean
                      date_created:
                        description: 'The date on which the `Price List` was created.

                          '
                        example: '2022-04-05T16:05:12Z'
                        format: date-time
                        type: string
                      date_modified:
                        description: 'The date on which the `Price List` was created.

                          '
                        example: '2022-04-05T16:05:12Z'
                        format: date-time
                        type: string
                      id:
                        description: 'The unique numeric ID of the `Price List`; this
                          number increments sequentially.

                          '
                        example: 3
                        type: integer
                      name:
                        description: The unique name of the Price List. Required in
                          a POST request.
                        example: Wholesale
                        type: string
                        x-required:
                        - post
                    required:
                    - name
                    title: Price List
                    type: object
                  meta:
                    $ref: '#/components/schemas/Meta'
                title: Price List Response
                type: object
          description: ''
      summary: Get a Price List
      tags:
      - Price Lists
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Updates a *Price List*.
      operationId: updatePriceList
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Price List properties.
                properties:
                  active:
                    description: 'Whether or not this `Price List` and its prices
                      are active. Defaults to `true`.

                      '
                    example: true
                    type: boolean
                  name:
                    description: The unique name of the Price List. Required in a
                      POST request.
                    example: Wholesale
                    type: string
                    x-required:
                    - post
                required:
                - name
                title: PriceList Base
                type: object
              description: Update a PriceList
              title: PriceList Put
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  active: false
                  date_created: '2022-02-26T17:37:01Z'
                  date_modified: '2022-09-17T18:45:17Z'
                  id: 2
                  name: BigCommerce
                meta: {}
              schema:
                description: 'PriceList Response returns for:


                  * Create a PriceList

                  * Get a PriceList

                  * Update a PriceList'
                properties:
                  data:
                    allOf:
                    - properties:
                        date_created:
                          description: 'The date on which the `Price List` was created.

                            '
                          example: '2022-04-05T16:05:12Z'
                          format: date-time
                          type: string
                        date_modified:
                          description: 'The date on which the `Price List` was created.

                            '
                          example: '2022-04-05T16:05:12Z'
                          format: date-time
                          type: string
                        id:
                          description: 'The unique numeric ID of the `Price List`;
                            this number increments sequentially.

                            '
                          example: 3
                          type: integer
                      type: object
                    - description: Common Price List properties.
                      properties:
                        active:
                          description: 'Whether or not this `Price List` and its prices
                            are active.  Defaults to `true`.

                            '
                          example: true
                          type: boolean
                        name:
                          description: The unique name of the Price List. Required
                            in /POST.
                          example: Wholesale
                          type: string
                          x-required:
                          - post
                      required:
                      - name
                      title: PriceList Base
                      type: object
                    title: Price List
                    type: object
                  meta:
                    $ref: '#/components/schemas/Meta'
                title: Price List Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Price List` was in conflict with another Price List. This
            is the result of duplicate unique values, such as `name`.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Price List` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
      summary: Update a Price List
      tags:
      - Price Lists
      x-codegen-request-body-name: PriceList
  /pricelists/{price_list_id}/assignments:
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Upsert a single `Price List Assignment` for a `Price List`.
      operationId: upsertPriceListAssignment
      parameters:
      - $ref: '#/components/parameters/PriceListIdParam'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentForPutRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentForPutResponse'
          description: A price list assignment.
        '404':
          description: A matching customer group or channel wasnʼt found, so no assignment
            is created or returned.
      summary: Upsert Price List Assignment
      tags:
      - Price Lists Assignments
  /pricelists/{price_list_id}/records:
    delete:
      description: Deletes a *Price List Record*. Deleting the records does not delete
        the Price List. Optional parameters can be passed in.
      operationId: deletePriceListRecordsByFilter
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: The ID of the `Variant` for which prices were requested.
        in: query
        name: variant_id:in
        schema:
          type: integer
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No-content response for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '204 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the situation.
                    type: string
                  type:
                    type: string
                title: No Content
                type: object
          description: ''
      summary: Delete a Price List Record
      tags:
      - Price Lists Records
    get:
      description: 'Returns a list of *Price List Records* associated with a *Price
        List*.


        **Notes**

        * Supports up to 10 simultaneous GET requests. Running more than the allowed
        number of requests concurrently on the same store will result in a `429` status
        error and your additional requests will fail.

        * Store Pricelist Records data to reduce the number of calls and maximize
        performance.'
      operationId: getPriceListRecordCollection
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: The ID of the `Variant` for which prices were requested.
        in: query
        name: variant_id:in
        schema:
          type: integer
      - description: 'A comma-separated list of IDs of `Product`s for which prices
          were requested.

          '
        in: query
        name: product_id:in
        schema:
          type: string
      - description: 'Filter items by currency.

          '
        in: query
        name: currency
        schema:
          format: ISO-4217
          type: string
      - description: Specifies the page number in a limited (paginated) list of products.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of products.
        in: query
        name: limit
        schema:
          type: integer
      - description: 'Sub-resources to include on a price record, in a comma-separated
          list. Valid expansions currently include `bulk_pricing_tiers` and `sku`.
          Other values will be ignored.

          '
        in: query
        name: include
        schema:
          enum:
          - bulk_pricing_tiers
          - sku
          type: string
      - description: 'Filter items by price.

          '
        in: query
        name: price
        schema:
          type: number
      - description: 'Filter items by sale_price.

          '
        in: query
        name: sale_price
        schema:
          type: number
      - description: 'Filter items by retail_price.

          '
        in: query
        name: retail_price
        schema:
          type: number
      - description: 'Filter items by map_price.

          '
        in: query
        name: map_price
        schema:
          type: number
      - description: 'Filter items by calculated_price.

          '
        in: query
        name: calculated_price
        schema:
          type: number
      - description: 'Filter items by date_created.

          '
        in: query
        name: date_created
        schema:
          format: date-time
          type: string
      - description: Filter items by date_modified. For example `v3/catalog/products?date_last_imported:min=2022-06-15`
        in: query
        name: date_modified
        schema:
          format: date-time
          type: string
      - description: 'Filter items by SKU.

          '
        in: query
        name: sku
        schema:
          type: string
      - explode: false
        in: query
        name: sku:in
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: currency:in
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: price:max
        schema:
          type: number
      - in: query
        name: price:min
        schema:
          type: number
      - in: query
        name: sale_price:max
        schema:
          type: number
      - in: query
        name: sale_price:min
        schema:
          type: number
      - in: query
        name: retail_price:max
        schema:
          type: number
      - in: query
        name: retail_price:min
        schema:
          type: number
      - in: query
        name: map_price:max
        schema:
          type: number
      - in: query
        name: map_price:min
        schema:
          type: number
      - in: query
        name: calculated_price:max
        schema:
          type: number
      - in: query
        name: calculated_price:min
        schema:
          type: number
      - in: query
        name: date_created:max
        schema:
          type: string
      - in: query
        name: date_created:min
        schema:
          type: string
      - in: query
        name: date_modified:max
        schema:
          type: string
      - in: query
        name: date_modified:min
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - bulk_pricing_tiers: []
                  calculated_price: 25.48
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 18.57
                  price: 25.48
                  price_list_id: 3
                  product_id: 187
                  retail_price: 25.48
                  sale_price: 18.57
                  variant_id: 358
                - bulk_pricing_tiers: []
                  calculated_price: 31.31
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 31.31
                  price: 31.31
                  price_list_id: 3
                  product_id: 188
                  retail_price: 31.31
                  sale_price: 31.31
                  variant_id: 359
                - bulk_pricing_tiers: []
                  calculated_price: 18.57
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 18.57
                  price: 18.57
                  price_list_id: 3
                  product_id: 189
                  retail_price: 18.57
                  sale_price: 18.57
                  variant_id: 360
                - bulk_pricing_tiers: []
                  calculated_price: 22.54
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 22.54
                  price: 22.54
                  price_list_id: 3
                  product_id: 190
                  retail_price: 22.54
                  sale_price: 22.54
                  variant_id: 361
                - bulk_pricing_tiers:
                  - amount: 1
                    quantity_max: 19
                    quantity_min: 10
                    type: percent
                  - amount: 3
                    quantity_max: 29
                    quantity_min: 20
                    type: percent
                  - amount: 5
                    quantity_max: 2147483647
                    quantity_min: 30
                    type: percent
                  calculated_price: 27.39
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:51:26Z'
                  map_price: 27.39
                  price: 27.39
                  price_list_id: 3
                  product_id: 191
                  retail_price: 27.39
                  sale_price: 27.39
                  variant_id: 362
                - bulk_pricing_tiers: []
                  calculated_price: 9.8
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 9.8
                  price: 9.8
                  price_list_id: 3
                  product_id: 192
                  retail_price: 9.8
                  sale_price: 9.8
                  variant_id: 382
                - bulk_pricing_tiers: []
                  calculated_price: 24.5
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 24.5
                  price: 24.5
                  price_list_id: 3
                  product_id: 192
                  retail_price: 24.5
                  sale_price: 24.5
                  variant_id: 383
                - bulk_pricing_tiers: []
                  calculated_price: 24.5
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 24.5
                  price: 24.5
                  price_list_id: 3
                  product_id: 192
                  retail_price: 24.5
                  sale_price: 24.5
                  variant_id: 384
                - bulk_pricing_tiers: []
                  calculated_price: 9.8
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 9.8
                  price: 9.8
                  price_list_id: 3
                  product_id: 193
                  retail_price: 9.8
                  sale_price: 9.8
                  variant_id: 385
                - bulk_pricing_tiers: []
                  calculated_price: 10.78
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:33:14Z'
                  map_price: 10.78
                  price: 10.78
                  price_list_id: 3
                  product_id: 194
                  retail_price: 10.78
                  sale_price: 10.78
                  variant_id: 386
                - bulk_pricing_tiers:
                  - amount: 1
                    quantity_max: 9
                    quantity_min: 2
                    type: percent
                  - amount: 2
                    quantity_max: 19
                    quantity_min: 10
                    type: percent
                  - amount: 3
                    quantity_max: 2147483647
                    quantity_min: 20
                    type: percent
                  calculated_price: 10.78
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:35:42Z'
                  map_price: 10.78
                  price: 10.78
                  price_list_id: 3
                  product_id: 195
                  retail_price: 10.78
                  sale_price: 10.78
                  variant_id: 388
                - bulk_pricing_tiers:
                  - amount: 1
                    quantity_max: 9
                    quantity_min: 2
                    type: percent
                  - amount: 2
                    quantity_max: 19
                    quantity_min: 10
                    type: percent
                  - amount: 3
                    quantity_max: 2147483647
                    quantity_min: 20
                    type: percent
                  calculated_price: 18.62
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:35:42Z'
                  map_price: 18.62
                  price: 18.62
                  price_list_id: 3
                  product_id: 195
                  retail_price: 18.62
                  sale_price: 18.62
                  variant_id: 389
                - bulk_pricing_tiers:
                  - amount: 1
                    quantity_max: 9
                    quantity_min: 2
                    type: percent
                  - amount: 2
                    quantity_max: 19
                    quantity_min: 10
                    type: percent
                  - amount: 3
                    quantity_max: 2147483647
                    quantity_min: 20
                    type: percent
                  calculated_price: 10.78
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:35:42Z'
                  map_price: 10.78
                  price: 10.78
                  price_list_id: 3
                  product_id: 195
                  retail_price: 10.78
                  sale_price: 10.78
                  variant_id: 390
                - bulk_pricing_tiers:
                  - amount: 1
                    quantity_max: 9
                    quantity_min: 2
                    type: percent
                  - amount: 2
                    quantity_max: 19
                    quantity_min: 10
                    type: percent
                  - amount: 3
                    quantity_max: 2147483647
                    quantity_min: 20
                    type: percent
                  calculated_price: 10.78
                  currency: usd
                  date_created: '2022-09-17T20:33:14Z'
                  date_modified: '2022-09-17T20:35:42Z'
                  map_price: 10.78
                  price: 10.78
                  price_list_id: 3
                  product_id: 195
                  retail_price: 10.78
                  sale_price: 10.78
                  variant_id: 391
                meta:
                  pagination:
                    count: 14
                    current_page: 1
                    per_page: 50
                    total: 14
                    total_pages: 1
              schema:
                description: 'PriceRecord Collection Response returns for:

                  * Get All PriceList Records

                  * Get PriceList Records by Variant ID'
                properties:
                  data:
                    items:
                      allOf:
                      - properties:
                          calculated_price:
                            description: 'The price of the variant as seen on the
                              storefront if a price record is in effect. It will be
                              equal to the `sale_price`, if set, and the `price` if
                              there is not a `sale_price`. Read only.

                              '
                            example: 24.64
                            format: double
                            type: number
                          date_created:
                            description: 'The date on which the Price entry was created.

                              '
                            example: '2018-08-23T19:59:23Z'
                            format: date-time
                            type: string
                          date_modified:
                            description: 'The date on which the Price entry was created.

                              '
                            example: '2018-08-23T19:59:23Z'
                            format: date-time
                            type: string
                          product_id:
                            description: 'The id of the `Product` this `Price Record`''s
                              variant_id is associated with. Read only.

                              '
                            example: 158
                            type: integer
                        type: object
                      - allOf:
                        - properties:
                            currency:
                              description: 'The 3-letter currency code with which
                                this price set is associated.

                                '
                              example: usd
                              format: ISO-4217
                              type: string
                            price_list_id:
                              description: 'The Price List with which this price set
                                is associated.

                                '
                              example: 2
                              type: integer
                            sku:
                              description: 'The variant with which this price set
                                is associated. Either SKU or variant_id is required.

                                '
                              type: string
                            variant_id:
                              description: 'The variant with which this price set
                                is associated. Either variant_id or SKU is required.

                                '
                              example: 325
                              type: integer
                          type: object
                        description: Price Record object used in batch create or update.
                        title: Price Record Identifiers
                        type: object
                      - description: Common Price Record properties.
                        properties:
                          bulk_pricing_tiers:
                            items:
                              properties:
                                amount:
                                  description: 'The price adjustment amount. This
                                    value along with the type will decide the price
                                    per variant for the pricing tier.

                                    '
                                  example: 3
                                  format: double
                                  type: number
                                quantity_max:
                                  description: 'The maximum allowed quantity of associated
                                    variant in the cart to qualify for this tiers
                                    pricing.

                                    '
                                  example: 10
                                  type: integer
                                quantity_min:
                                  description: 'The minimum quantity of associated
                                    variant in the cart needed to qualify for this
                                    tiers pricing.

                                    '
                                  example: 1
                                  type: integer
                                type:
                                  description: 'The type of adjustment that is made.
                                    Acceptable values: price – the adjustment amount
                                    per product; percent – the adjustment as a percentage
                                    of the original price; fixed – the adjusted absolute
                                    price of the product.

                                    '
                                  enum:
                                  - fixed
                                  - price
                                  - percent
                                  example: price
                                  type: string
                              title: Bulk Pricing Tier
                              type: object
                            type: array
                          map_price:
                            description: 'The MAP (Minimum Advertised Price) for the
                              variant mapped in a Price List. Overrides any existing
                              or Catalog MAP price for the variant/product. If empty,
                              the MAP price will be treated as not being set on this
                              variant.

                              '
                            format: double
                            type: number
                          price:
                            description: 'The list price for the variant mapped in
                              a Price List. Overrides any existing or Catalog list
                              price for the variant/product.

                              '
                            example: 3.99
                            format: double
                            type: number
                            x-required:
                            - put
                          retail_price:
                            description: 'The retail price for the variant mapped
                              in a Price List. Overrides any existing or Catalog retail
                              price for the variant/product. If empty, the retail
                              price will be treated as not being set on this variant.

                              '
                            format: double
                            type: number
                          sale_price:
                            description: 'The sale price for the variant mapped in
                              a Price List. Overrides any existing or Catalog sale
                              price for the variant/product. If empty, the sale price
                              will be treated as not being set on this variant.

                              '
                            format: double
                            type: number
                          sku:
                            description: 'The SKU code associated with this `Price
                              Record` if requested and it exists.

                              '
                            example: SMB-123
                            type: string
                        title: PriceRecord Base
                        type: object
                      description: The Price Record object.
                      title: Price Record
                      type: object
                    type: array
                  meta:
                    description: Data about the response, including pagination and
                      collection totals.
                    properties:
                      pagination:
                        description: Data about the response, including pagination
                          and collection totals.
                        properties:
                          count:
                            description: 'Total number of items in the collection
                              response.

                              '
                            example: 36
                            type: integer
                          current_page:
                            description: 'The page you are currently on within the
                              collection.

                              '
                            example: 1
                            type: integer
                          links:
                            description: 'Pagination links for the previous and next
                              parts of the whole collection.

                              '
                            properties:
                              current:
                                description: 'Link to the current page returned in
                                  the response.

                                  '
                                example: ?page=1&limit=50
                                type: string
                              next:
                                description: 'Link to the next page returned in the
                                  response.

                                  '
                                type: string
                              previous:
                                description: 'Link to the previous page returned in
                                  the response.

                                  '
                                type: string
                            type: object
                          per_page:
                            description: 'The amount of items returned in the collection
                              per page, controlled by the limit parameter.

                              '
                            example: 50
                            type: integer
                          total:
                            description: 'Total number of items in the result set.

                              '
                            example: 36
                            type: integer
                          total_pages:
                            description: 'The total number of pages in the collection.

                              '
                            example: 1
                            type: integer
                        title: Pagination
                        type: object
                    title: Collection Meta
                    type: object
                title: PriceRecord Collection Response
                type: object
          description: ''
        '429':
          content:
            application/json:
              examples:
                response:
                  value:
                    errors: {}
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            examples: {}
          description: 'Allowed number of requests exceeded.

            '
      summary: Get All Price List Records
      tags:
      - Price Lists Records
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Creates or updates *Price List Records*. \n\n**Required Fields**\n\
        * currency\n\n**Notes**\n\n* Batch updates are supported by this endpoint,\
        \ meaning that several price objects can be updated in one request. This allows\
        \ you to do the same work as many individual requests to singleton endpoints\n\
        * Batch requests support up to 1,000 items per request.\n* Up to 2 concurrent\
        \ batch upsert requests are supported with this API. Running more than the\
        \ allowed concurrent requests in parallel on the **same store** will cause\
        \ a 429 error and your additional requests will fail. You are encouraged to\
        \ run requests sequentially with as many records per request as possible,\
        \ in order to maximize performance."
      operationId: setPriceListRecordCollection
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: 'Header that determines whether the Batch API operates in strict
          mode or not. Strict mode will reject the entire request if any item in the
          batch has an error.

          '
        in: header
        name: X-Strict-Mode
        schema:
          default: 0
          type: integer
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                allOf:
                - properties:
                    currency:
                      description: 'The 3-letter currency code with which this price
                        set is associated.

                        '
                      example: usd
                      format: ISO-4217
                      type: string
                    sku:
                      description: 'The SKU for the variant with which this price
                        set is associated. Either SKU or variant_id is required.

                        '
                      example: SMB-123
                      type: string
                    variant_id:
                      description: 'The variant ID with which this price set is associated.
                        Either variant_id or SKU is required.

                        '
                      example: 331
                      type: integer
                - description: Common Price Record properties.
                  properties:
                    bulk_pricing_tiers:
                      items:
                        properties:
                          amount:
                            description: 'The price adjustment amount. This value
                              along with the type will decide the price per variant
                              for the pricing tier.

                              '
                            example: 3
                            format: double
                            type: number
                          quantity_max:
                            description: 'The maximum allowed quantity of associated
                              variant in the cart to qualify for the pricing of this
                              tier.

                              '
                            example: 10
                            type: integer
                          quantity_min:
                            description: 'The minimum quantity of associated variant
                              in the cart needed to qualify for the pricing of this
                              tier.

                              '
                            example: 1
                            type: integer
                          type:
                            description: 'The type of adjustment that is made. Acceptable
                              values: price – the adjustment amount per product; percent
                              – the adjustment as a percentage of the original price;
                              fixed – the adjusted absolute price of the product.

                              '
                            enum:
                            - fixed
                            - price
                            - percent
                            example: price
                            type: string
                        title: Bulk Pricing Tier
                        type: object
                      type: array
                    map_price:
                      description: 'The MAP (Minimum Advertised Price) for the variant
                        mapped in a Price List. Overrides any existing or Catalog
                        MAP price for the variant/product. If empty, the MAP price
                        will be treated as not being set on this variant.

                        '
                      example: 2.5
                      format: double
                      minimum: 0
                      type: number
                    price:
                      description: 'The list price for the variant mapped in a Price
                        List. Overrides any existing or Catalog list price for the
                        variant/product.

                        '
                      example: 3.99
                      format: double
                      type: number
                      x-required:
                      - put
                    retail_price:
                      description: 'The retail price for the variant mapped in a Price
                        List. Overrides any existing or Catalog retail price for the
                        variant/product. If empty, the retail price will be treated
                        as not being set on this variant.

                        '
                      example: 4.99
                      format: double
                      minimum: 0
                      type: number
                    sale_price:
                      description: 'The sale price for the variant mapped in a Price
                        List. Overrides any existing or Catalog sale price for the
                        variant/product. If empty, the sale price will be treated
                        as not being set on this variant.

                        '
                      example: 3.49
                      format: double
                      minimum: 0
                      type: number
                    sku:
                      description: 'The SKU code associated with this `Price Record`
                        if requested and it exists.

                        '
                      example: SMB-123
                      type: string
                  title: PriceRecord Base
                description: Price Record object used in batch create or update.
                title: PriceRecord Batch Item
                type: object
              title: Price Record Collection Put
              type: array
        description: ''
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties: {}
                    type: object
                  meta:
                    properties: {}
                    type: object
                title: Price Records response
                type: object
          description: Success response for batch PUT requests of Price Records.
        '422':
          content:
            application/json:
              schema:
                description: Errors during batch usage for the BigCommerce API.
                properties:
                  batch_errors:
                    items:
                      description: Error during Price Record batch PUT request. Includes
                        data sent in the request and errors.
                      properties:
                        data:
                          allOf:
                          - properties:
                              currency:
                                description: 'The 3-letter currency code with which
                                  this price set is associated.

                                  '
                                example: usd
                                format: ISO-4217
                                type: string
                              price_list_id:
                                description: 'The Price List with which this price
                                  set is associated.

                                  '
                                example: 2
                                type: integer
                              sku:
                                description: 'The variant with which this price set
                                  is associated. Either SKU or variant_id is required.

                                  '
                                type: string
                              variant_id:
                                description: 'The variant ID with which this price
                                  set is associated. Either variant_id or SKU is required.

                                  '
                                example: 325
                                type: integer
                            type: object
                          description: Price Record object used in batch create or
                            update.
                          title: Price Record Identifiers
                          type: object
                        field_errors:
                          additionalProperties: true
                          properties: {}
                          title: Detailed Errors
                          type: object
                      title: PriceRecord Batch Error Set
                      type: object
                    type: array
                title: PriceRecord Batch Error Response
                type: object
          description: Error response for batch PUT of `Price Records`. May include
            errors during partial update in non-strict mode.
        '429':
          content:
            application/json:
              examples:
                response:
                  value:
                    errors: {}
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            examples: {}
          description: 'Allowed number of requests exceeded.

            '
      summary: Upsert Price List Records
      tags:
      - Price Lists Records
  /pricelists/{price_list_id}/records/{variant_id}:
    get:
      description: 'Returns *Price List Records* using the variant ID. Will also contain
        currency records.


        **Notes**

        * Supports up to 40 simultaneous GET requests. Running more than the allowed
        number of requests concurrently on the same store will result in a `429` status
        error, and your additional requests will fail.

        * Store Pricelist Records data to reduce the number of calls and maximize
        performance.

        '
      operationId: getPriceListRecordsByVariantId
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: 'PriceRecord Collection Response returns for:

                  * Get All PriceList Records

                  * Get PriceList Records by Variant ID'
                properties:
                  data:
                    items:
                      allOf:
                      - properties:
                          calculated_price:
                            description: 'The price of the variant as seen on the
                              storefront if a price record is in effect. It will be
                              equal to the `sale_price`, if set, and the `price` if
                              there is not a `sale_price`. Read only.

                              '
                            example: 24.64
                            format: double
                            type: number
                          date_created:
                            description: 'The date on which the Price entry was created.

                              '
                            example: '2022-08-23T19:59:23Z'
                            format: date-time
                            type: string
                          date_modified:
                            description: 'The date on which the Price entry was created.

                              '
                            example: '2022-08-23T19:59:23Z'
                            format: date-time
                            type: string
                          product_id:
                            description: 'The id of the `Product` this `Price Record`''s
                              variant_id is associated with. Read only.

                              '
                            example: 158
                            type: integer
                      - description: Price Record object used in batch create or update.
                        properties:
                          currency:
                            description: 'The 3-letter currency code with which this
                              price set is associated.

                              '
                            example: usd
                            type: string
                          price_list_id:
                            description: 'The Price List with which this price set
                              is associated.

                              '
                            example: 2
                            type: integer
                          sku:
                            description: 'The variant ID with which this price set
                              is associated. Either SKU or variant_id is required.

                              '
                            type: string
                          variant_id:
                            description: 'The variant ID with which this price set
                              is associated. Either variant_id or SKU is required.

                              '
                            example: 325
                            type: integer
                        title: Price Record Identifiers
                      - description: Common Price Record properties.
                        properties:
                          bulk_pricing_tiers:
                            items:
                              properties:
                                amount:
                                  description: 'The price adjustment amount. This
                                    value along with the type will decide the price
                                    per variant for the pricing tier.

                                    '
                                  example: 3
                                  format: double
                                  type: number
                                quantity_max:
                                  description: 'The maximum allowed quantity of associated
                                    variant in the cart to qualify for this tiers
                                    pricing.

                                    '
                                  example: 10
                                  type: integer
                                quantity_min:
                                  description: 'The minimum quantity of associated
                                    variant in the cart needed to qualify for this
                                    tiers pricing.

                                    '
                                  example: 1
                                  type: integer
                                type:
                                  description: 'The type of adjustment that is made.
                                    Acceptable values: price – the adjustment amount
                                    per product; percent – the adjustment as a percentage
                                    of the original price; fixed – the adjusted absolute
                                    price of the product.

                                    '
                                  enum:
                                  - fixed
                                  - price
                                  - percent
                                  example: price
                                  type: string
                              title: Bulk Pricing Tier
                              type: object
                            type: array
                          map_price:
                            description: 'The MAP (Minimum Advertised Price) for the
                              variant mapped in a Price List. Overrides any existing
                              or Catalog MAP price for the variant/product. If empty,
                              the MAP price will be treated as not being set on this
                              variant.

                              '
                            example: 5.99
                            format: double
                            minimum: 0
                            type: number
                          price:
                            description: 'The list price for the variant mapped in
                              a Price List. Overrides any existing or Catalog list
                              price for the variant/product.

                              '
                            example: 3.99
                            format: double
                            type: number
                            x-required:
                            - put
                          retail_price:
                            description: 'The retail price for the variant mapped
                              in a Price List. Overrides any existing or Catalog retail
                              price for the variant/product. If empty, the retail
                              price will be treated as not being set on this variant.

                              '
                            example: 6.99
                            format: double
                            minimum: 0
                            type: number
                          sale_price:
                            description: 'The sale price for the variant mapped in
                              a Price List. Overrides any existing or Catalog sale
                              price for the variant/product. If empty, the sale price
                              will be treated as not being set on this variant.

                              '
                            example: 5.99
                            format: double
                            minimum: 0
                            type: number
                          sku:
                            description: 'The SKU code associated with this `Price
                              Record` if requested and it exists.

                              '
                            example: SMB-123
                            type: string
                        title: PriceRecord Base
                      description: The Price Record object.
                      title: Price Record
                      type: object
                    type: array
                  meta:
                    description: Data related to the response, including pagination
                      and collection totals.
                    properties:
                      pagination:
                        description: Data related to the response, including pagination
                          and collection totals.
                        properties:
                          count:
                            description: 'Total number of items in the collection
                              response.

                              '
                            example: 36
                            type: integer
                          current_page:
                            description: 'The page you are currently on within the
                              collection.

                              '
                            example: 1
                            type: integer
                          links:
                            description: 'Pagination links for the previous and next
                              parts of the whole collection.

                              '
                            properties:
                              current:
                                description: 'Link to the current page returned in
                                  the response.

                                  '
                                example: ?page=1&limit=50
                                type: string
                              next:
                                description: 'Link to the next page returned in the
                                  response.

                                  '
                                type: string
                              previous:
                                description: 'Link to the previous page returned in
                                  the response.

                                  '
                                type: string
                            type: object
                          per_page:
                            description: 'The amount of items returned in the collection
                              per page, controlled by the limit parameter.

                              '
                            example: 50
                            type: integer
                          total:
                            description: 'Total number of items in the result set.

                              '
                            example: 36
                            type: integer
                          total_pages:
                            description: 'The total number of pages in the collection.

                              '
                            example: 1
                            type: integer
                        title: Pagination
                        type: object
                    title: Collection Meta
                    type: object
                title: PriceRecord Collection Response
                type: object
          description: ''
        '429':
          content:
            application/json:
              examples:
                response:
                  value:
                    errors: {}
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            examples: {}
          description: 'Allowed number of requests exceeded.

            '
      summary: Get Price Records by Variant
      tags:
      - Price Lists Records
    parameters:
    - $ref: '#/components/parameters/Accept'
  /pricelists/{price_list_id}/records/{variant_id}/{currency_code}:
    delete:
      description: Deletes a *Price List Record* using the currency code.
      operationId: deletePriceListRecord
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      - description: 'The currency code associated with the price record being acted
          upon.

          '
        in: path
        name: currency_code
        required: true
        schema:
          format: ISO-4217
          type: string
      responses:
        '204':
          content: {}
          description: ''
      summary: Delete a Price Record by Currency Code
      tags:
      - Price Lists Records
    get:
      description: 'Returns a *Price List Record* using the currency code. You can
        use optional parameters.


        **Notes**

        * Supports up to 40 simultaneous GET requests. Running more than the allowed
        number of requests concurrently on the same store will result in a `429` status
        error, and your additional requests will fail.'
      operationId: getPriceListRecord
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      - description: 'The currency code associated with the price record being acted
          upon.

          '
        in: path
        name: currency_code
        required: true
        schema:
          format: ISO-4217
          type: string
      - description: 'Sub-resources to include on a price record, in a comma-separated
          list. Valid expansions currently include `bulk_pricing_tiers` and `sku`.
          Other valies will be ignored.

          '
        in: query
        name: include
        schema:
          enum:
          - bulk_pricing_tiers
          - sku
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  calculated_price: 22.544
                  currency: eur
                  date_created: '2022-09-18T13:18:15Z'
                  date_modified: '2022-09-18T13:18:15Z'
                  map_price: 22.544
                  price: 22.544
                  price_list_id: 4
                  product_id: 185
                  retail_price: 22.544
                  sale_price: 22.544
                  variant_id: 356
                meta:
                  pagination:
                    count: 1
                    current_page: 1
                    per_page: 50
                    total: 1
                    total_pages: 1
              schema:
                description: Response payload for the BigCommerce API.
                properties:
                  data:
                    allOf:
                    - properties:
                        calculated_price:
                          description: 'The price of the variant as seen on the storefront
                            if a price record is in effect. It will be equal to the
                            `sale_price`, if set, and the `price` if there is not
                            a `sale_price`. Read only.

                            '
                          example: 24.64
                          format: double
                          type: number
                        date_created:
                          description: 'The date on which the Price entry was created.

                            '
                          example: '2022-08-23T19:59:23Z'
                          format: date-time
                          type: string
                        date_modified:
                          description: 'The date on which the Price entry was created.

                            '
                          example: '2022-08-23T19:59:23Z'
                          format: date-time
                          type: string
                        product_id:
                          description: 'The ID of the `Product` this `Price Record`''s
                            variant_id is associated with. Read only.

                            '
                          example: 158
                          type: integer
                      type: object
                    - allOf:
                      - properties:
                          currency:
                            description: 'The 3-letter currency code with which this
                              price set is associated.

                              '
                            example: usd
                            format: ISO-4217
                            type: string
                          price_list_id:
                            description: 'The Price List with which this price set
                              is associated.

                              '
                            example: 2
                            type: integer
                          sku:
                            description: 'The variant with which this price set is
                              associated. Either SKU or variant_id is required.

                              '
                            type: string
                          variant_id:
                            description: 'The variant with which this price set is
                              associated. Either variant_id or SKU is required.

                              '
                            example: 325
                            type: integer
                        type: object
                      description: Price Record object used in batch create or update
                        requests.
                      title: Price Record Identifiers
                      type: object
                    - description: Common Price Record properties.
                      properties:
                        bulk_pricing_tiers:
                          items:
                            properties:
                              amount:
                                description: 'The price adjustment amount. This value
                                  along with the type will decide the price per variant
                                  for the pricing tier.

                                  '
                                example: 3
                                format: double
                                type: number
                              quantity_max:
                                description: 'The maximum allowed quantity of associated
                                  variant in the cart to qualify for the pricing of
                                  this tier.

                                  '
                                example: 10
                                type: integer
                              quantity_min:
                                description: 'The minimum quantity of associated variant
                                  in the cart needed to qualify for the pricing of
                                  this tier.

                                  '
                                example: 1
                                type: integer
                              type:
                                description: 'The type of adjustment that is made.
                                  Acceptable values: price – the adjustment amount
                                  per product; percent – the adjustment as a percentage
                                  of the original price; fixed – the adjusted absolute
                                  price of the product.

                                  '
                                enum:
                                - fixed
                                - price
                                - percent
                                example: price
                                type: string
                            title: Bulk Pricing Tier
                            type: object
                          type: array
                        map_price:
                          description: 'The MAP (Minimum Advertised Price) for the
                            variant mapped in a Price List. Overrides any existing
                            or Catalog MAP price for the variant/product. If empty,
                            the MAP price will be treated as not being set on this
                            variant.

                            '
                          format: double
                          type: number
                        price:
                          description: 'The list price for the variant mapped in a
                            Price List. Overrides any existing or Catalog list price
                            for the variant/product.

                            '
                          example: 3.99
                          format: double
                          type: number
                          x-required:
                          - put
                        retail_price:
                          description: 'The retail price for the variant mapped in
                            a Price List. Overrides any existing or Catalog retail
                            price for the variant/product. If empty, the retail price
                            will be treated as not being set on this variant.

                            '
                          format: double
                          type: number
                        sale_price:
                          description: 'The sale price for the variant mapped in a
                            Price List. Overrides any existing or Catalog sale price
                            for the variant/product. If empty, the sale price will
                            be treated as not being set on this variant.

                            '
                          format: double
                          type: number
                        sku:
                          description: 'The SKU code associated with this `Price Record`
                            if requested and it exists.

                            '
                          example: SMB-123
                          type: string
                      title: PriceRecord Base
                      type: object
                    description: The Price Record object.
                    title: Price Record
                    type: object
                  meta:
                    $ref: '#/components/schemas/Meta'
                title: Price Record Response
                type: object
          description: ''
        '429':
          content:
            application/json:
              examples:
                response:
                  value:
                    errors: {}
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            examples: {}
          description: 'Allowed number of requests exceeded.

            '
      summary: Get a Price Record by Currency Code
      tags:
      - Price Lists Records
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: 'Creates or updates a *Price List Record* using the currency code.


        **Notes**

        * Supports up to 40 simultaneous PUT requests. Running more than the allowed
        number of requests concurrently on the same store will result in a `429` status
        error, and your additional requests will fail.'
      operationId: setPriceListRecord
      parameters:
      - description: 'The ID of the `Price List` requested.

          '
        in: path
        name: price_list_id
        required: true
        schema:
          type: integer
      - description: 'ID of the variant on a product, or on an associated Price List
          Record.

          '
        in: path
        name: variant_id
        required: true
        schema:
          type: integer
      - description: 'The currency code associated with the price record being acted
          upon.

          '
        in: path
        name: currency_code
        required: true
        schema:
          format: ISO-4217
          type: string
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - description: Common Price Record properties.
                properties:
                  bulk_pricing_tiers:
                    items:
                      properties:
                        amount:
                          description: 'The price adjustment amount. This value along
                            with the type will decide the price per variant for the
                            pricing tier.

                            '
                          example: 3
                          format: double
                          type: number
                        quantity_max:
                          description: 'The maximum allowed quantity of associated
                            variant in the cart to qualify for this tiers pricing.

                            '
                          example: 10
                          type: integer
                        quantity_min:
                          description: 'The minimum quantity of associated variant
                            in the cart needed to qualify for this tiers pricing.

                            '
                          example: 1
                          type: integer
                        type:
                          description: 'The type of adjustment that is made. Acceptable
                            values: price – the adjustment amount per product; percent
                            – the adjustment as a percentage of the original price;
                            fixed – the adjusted absolute price of the product.

                            '
                          enum:
                          - fixed
                          - price
                          - percent
                          example: price
                          type: string
                      title: Bulk Pricing Tier
                      type: object
                    type: array
                  map_price:
                    description: 'The MAP (Minimum Advertised Price) for the variant
                      mapped in a Price List. Overrides any existing or Catalog MAP
                      price for the variant/product. If empty, the MAP price will
                      be treated as not being set on this variant.

                      '
                    format: double
                    type: number
                  price:
                    description: 'The list price for the variant mapped in a Price
                      List. Overrides any existing or Catalog list price for the variant/product.

                      '
                    example: 3.99
                    format: double
                    type: number
                    x-required:
                    - put
                  retail_price:
                    description: 'The retail price for the variant mapped in a Price
                      List. Overrides any existing or Catalog retail price for the
                      variant/product.  If empty, the retail price will be treated
                      as not being set on this variant.

                      '
                    format: double
                    type: number
                  sale_price:
                    description: 'The sale price for the variant mapped in a Price
                      List. Overrides any existing or Catalog sale price for the variant/product.
                      If empty, the sale price will be treated as not being set on
                      this variant.

                      '
                    format: double
                    type: number
                  sku:
                    description: 'The SKU code associated with this `Price Record`
                      if requested and it exists.

                      '
                    example: SMB-123
                    type: string
                title: PriceRecord Base
                type: object
              title: Price Record Put
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                value:
                  value:
                    data:
                      bulk_pricing_tiers:
                      - amount: 1
                        quantity_max: 10
                        quantity_min: 5
                        type: percent
                      - amount: 2
                        quantity_max: 20
                        quantity_min: 11
                        type: percent
                      calculated_price: 10.99
                      currency: eur
                      date_created: '2022-09-18T13:18:15Z'
                      date_modified: '2022-09-18T13:30:48Z'
                      map_price: 17.99
                      price: 12.99
                      price_list_id: 4
                      product_id: 185
                      retail_price: 15.99
                      sale_price: 10.99
                      variant_id: 356
                    meta: {}
              schema:
                description: Response payload for the BigCommerce API.
                properties:
                  data:
                    allOf:
                    - properties:
                        calculated_price:
                          description: 'The price of the variant as seen on the storefront
                            if a price record is in effect. It will be equal to the
                            `sale_price`, if set, and the `price` if there is not
                            a `sale_price`. Read only.

                            '
                          example: 24.64
                          format: double
                          type: number
                        date_created:
                          description: 'The date on which the Price entry was created.

                            '
                          example: '2018-08-23T19:59:23Z'
                          format: date-time
                          type: string
                        date_modified:
                          description: 'The date on which the Price entry was created.

                            '
                          example: '2018-08-23T19:59:23Z'
                          format: date-time
                          type: string
                        product_id:
                          description: 'The id of the `Product` this `Price Record`''s
                            variant_id is associated with. Read only.

                            '
                          example: 158
                          type: integer
                    - allOf:
                      - properties:
                          currency:
                            description: 'The 3-letter currency code with which this
                              price set is associated.

                              '
                            example: usd
                            format: ISO-4217
                            type: string
                          price_list_id:
                            description: 'The Price List with which this price set
                              is associated.

                              '
                            example: 2
                            type: integer
                          sku:
                            description: 'The variant with which this price set is
                              associated. Either SKU or variant_id is required.

                              '
                            type: string
                          variant_id:
                            description: 'The variant with which this price set is
                              associated. Either variant_id or SKU is required.

                              '
                            example: 325
                            type: integer
                      description: Price Record object used in a batch create or update
                        request.
                      title: Price Record Identifiers
                      type: object
                    - description: Common Price Record properties.
                      properties:
                        bulk_pricing_tiers:
                          items:
                            properties:
                              amount:
                                description: 'The price adjustment amount. This value
                                  along with the type will decide the price per variant
                                  for the pricing tier.

                                  '
                                example: 3
                                format: double
                                type: number
                              quantity_max:
                                description: 'The maximum allowed quantity of associated
                                  variant in the cart to qualify for the pricing of
                                  this tier.

                                  '
                                example: 10
                                type: integer
                              quantity_min:
                                description: 'The minimum quantity of associated variant
                                  in the cart needed to qualify for the pricing of
                                  this tier.

                                  '
                                example: 1
                                type: integer
                              type:
                                description: 'The type of adjustment that is made.
                                  Acceptable values: price – the adjustment amount
                                  per product; percent – the adjustment as a percentage
                                  of the original price; fixed – the adjusted absolute
                                  price of the product.

                                  '
                                enum:
                                - fixed
                                - price
                                - percent
                                example: price
                                type: string
                            title: Bulk Pricing Tier
                            type: object
                          type: array
                        map_price:
                          description: 'The MAP (Minimum Advertised Price) for the
                            variant mapped in a Price List. Overrides any existing
                            or Catalog MAP price for the variant/product. If empty,
                            the MAP price will be treated as not being set on this
                            variant.

                            '
                          format: double
                          type: number
                        price:
                          description: 'The list price for the variant mapped in a
                            Price List. Overrides any existing or Catalog list price
                            for the variant/product.

                            '
                          example: 3.99
                          format: double
                          type: number
                          x-required:
                          - put
                        retail_price:
                          description: 'The retail price for the variant mapped in
                            a Price List. Overrides any existing or Catalog retail
                            price for the variant/product.  If empty, the retail price
                            will be treated as not being set on this variant.

                            '
                          format: double
                          type: number
                        sale_price:
                          description: 'The sale price for the variant mapped in a
                            Price List. Overrides any existing or Catalog sale price
                            for the variant/product. If empty, the sale price will
                            be treated as not being set on this variant.

                            '
                          format: double
                          type: number
                        sku:
                          description: 'The SKU code associated with this `Price Record`
                            if requested and it exists.

                            '
                          example: SMB-123
                          type: string
                      title: PriceRecord Base
                      type: object
                    description: The Price Record object.
                    title: Price Record
                    type: object
                  meta:
                    $ref: '#/components/schemas/Meta'
                title: Price Record Response
                type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Error payload for the BigCommerce API.
                properties:
                  instance:
                    type: string
                  status:
                    description: '404 HTTP status code.

                      '
                    type: integer
                  title:
                    description: The error title describing the particular error.
                    type: string
                  type:
                    type: string
                title: Not Found
                type: object
          description: 'The resource was not found.

            '
        '409':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Price Record` was in conflict with another price record.
            This is the result of duplicate unique values.

            '
        '422':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    additionalProperties: true
                    properties: {}
                    title: Detailed Errors
                    type: object
                  instance:
                    type: string
                  status:
                    description: 'The HTTP status code.

                      '
                    type: integer
                  title:
                    description: 'The error title describing the particular error.

                      '
                    type: string
                  type:
                    type: string
                title: Error Response
                type: object
          description: '`Price Record` was not valid. This is the result of missing
            required fields, or of invalid data. See the response for more details.

            '
        '429':
          content:
            application/json:
              examples:
                response:
                  value:
                    errors: {}
                    status: 429
                    title: Too many requests
                    type: /api-docs/getting-started/api-status-codes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            examples: {}
          description: 'Allowed number of requests exceeded.

            '
      summary: Set Price List Record by Currency Code
      tags:
      - Price Lists Records
      x-codegen-request-body-name: PriceRecord
  /pricing/products:
    post:
      description: 'Calculate batch pricing for products for a specific channel, currency,
        and customer group.


        **Limits**

        * Limit of 50 concurrent requests.'
      operationId: get-prices
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel context that pricing should be evaluated
                    within. The default BC storefront is channel 1
                  example: 1
                  type: integer
                currency_code:
                  description: The currency of prices to be returned for this request
                  example: USD
                  type: string
                customer_group_id:
                  description: The customer group relevant for any customer group
                    pricing, tax values, etc.
                  type: integer
                items:
                  description: The items to fetch prices for
                  items:
                    description: Details/configuration for the product to request
                      a price for.
                    properties:
                      options:
                        description: The (optional) option configuration of the product.
                          May be "partially" configured for estimates.
                        items:
                          properties:
                            option_id:
                              description: The ID of the variant option or modifier
                                option being configured for this product
                              type: integer
                            value_id:
                              description: 'The ID of the value matching the option
                                being configured. Note: must be ID, not the value.'
                              type: integer
                          type: object
                        type: array
                      product_id:
                        description: The (required) product ID of the item
                        type: integer
                      variant_id:
                        description: The (optional) variant ID of the item
                        type: number
                    type: object
                  type: array
              required:
              - channel_id
              - currency_code
              - customer_group_id
              - items
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - bulk_pricing:
                  - discount_amount: 1
                    discount_type: percent
                    maximum: 1
                    minimum: 1
                  calculated_price:
                    as_entered: 1.5
                    entered_inclusive: true
                    tax_exclusive: 1.1
                    tax_inclusive: 1.5
                  minimum_advertised_price:
                    as_entered: 1.5
                    entered_inclusive: true
                    tax_exclusive: 1.1
                    tax_inclusive: 1.5
                  options:
                  - option_id: 1
                    value_id: 1
                  price:
                    as_entered: 1.5
                    entered_inclusive: true
                    tax_exclusive: 1.1
                    tax_inclusive: 1.5
                  price_range:
                    maximum:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                    minimum:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                  product_id: 1
                  retail_price:
                    as_entered: 1.5
                    entered_inclusive: true
                    tax_exclusive: 1.1
                    tax_inclusive: 1.5
                  retail_price_range:
                    maximum:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                    minimum:
                      as_entered: 1.5
                      entered_inclusive: true
                      tax_exclusive: 1.1
                      tax_inclusive: 1.5
                  sale_price:
                    as_entered: 1.5
                    entered_inclusive: true
                    tax_exclusive: 1.1
                    tax_inclusive: 1.5
                  variant_id: 1
                meta: {}
              schema:
                properties:
                  data:
                    items:
                      properties:
                        bulk_pricing:
                          items:
                            $ref: '#/components/schemas/BulkPricingTier'
                          type: array
                        calculated_price:
                          description: The shopper price for a product including modifier,
                            option, and option set rules.  Calculated_price may include
                            or exclude estimates for tax.
                          properties:
                            as_entered:
                              description: The price provided by the merchant as entered
                                in their catalog/price list (may be inc or ex)
                              type: number
                            entered_inclusive:
                              description: Whether the `as_entered` price is inclusive
                                or exclusive of tax, based on the stores tax jurisdiction
                              type: boolean
                            tax_exclusive:
                              description: The estimated tax exclusive price for this
                                product based on the provided customer group
                              type: number
                            tax_inclusive:
                              description: The estimated tax inclusive price for this
                                product based on the provided customer group
                              type: number
                          type: object
                        minimum_advertised_price:
                          description: The minimum advertised price (MAP) allowed
                            to be shown on a storefront. A value supplied by the merchant
                            and used for display purposes.
                          properties:
                            as_entered:
                              description: The price provided by the merchant as entered
                                in their catalog/price list (may be inc or ex)
                              type: number
                            entered_inclusive:
                              description: Whether the `as_entered` price is inclusive
                                or exclusive of tax, based on the stores tax jurisdiction
                              type: boolean
                            tax_exclusive:
                              description: The estimated tax exclusive price for this
                                product based on the provided customer group
                              type: number
                            tax_inclusive:
                              description: The estimated tax inclusive price for this
                                product based on the provided customer group
                              type: number
                          type: object
                        options:
                          description: The optional product option configuration this
                            price was generated for
                          items:
                            properties:
                              option_id:
                                description: The ID of the variant option or modifier
                                  option configured for this price
                                type: integer
                              value_id:
                                description: The selected value ID for the configured
                                  option.
                                type: integer
                            type: object
                          type: array
                        price:
                          description: The merchant-entered price for a product could
                            be including or excluding tax. Price must be defined when
                            creating a product and serves as the default price.
                          properties:
                            as_entered:
                              description: The price provided by the merchant as entered
                                in their catalog/price list (may be inc or ex)
                              type: number
                            entered_inclusive:
                              description: Whether the `as_entered` price is inclusive
                                or exclusive of tax, based on the stores tax jurisdiction
                              type: boolean
                            tax_exclusive:
                              description: The estimated tax exclusive price for this
                                product based on the provided customer group
                              type: number
                            tax_inclusive:
                              description: The estimated tax inclusive price for this
                                product based on the provided customer group
                              type: number
                          type: object
                        price_range:
                          description: The minimum and maximum price that will typically
                            apply to this product. Only used for complex products
                            (products with variants).
                          properties:
                            maximum:
                              description: The price for a product including estimates
                                for tax
                              properties:
                                as_entered:
                                  description: The price provided by the merchant
                                    as entered in their catalog/price list (may be
                                    inc or ex)
                                  type: number
                                entered_inclusive:
                                  description: Whether the `as_entered` price is inclusive
                                    or exclusive of tax, based on the stores tax jurisdiction
                                  type: boolean
                                tax_exclusive:
                                  description: The estimated tax exclusive price for
                                    this product based on the provided customer group
                                  type: number
                                tax_inclusive:
                                  description: The estimated tax inclusive price for
                                    this product based on the provided customer group
                                  type: number
                              type: object
                            minimum:
                              description: The price for a product including estimates
                                for tax
                              properties:
                                as_entered:
                                  description: The price provided by the merchant
                                    as entered in their catalog/price list (may be
                                    inc or ex)
                                  type: number
                                entered_inclusive:
                                  description: Whether the `as_entered` price is inclusive
                                    or exclusive of tax, based on the stores tax jurisdiction
                                  type: boolean
                                tax_exclusive:
                                  description: The estimated tax exclusive price for
                                    this product based on the provided customer group
                                  type: number
                                tax_inclusive:
                                  description: The estimated tax inclusive price for
                                    this product based on the provided customer group
                                  type: number
                              type: object
                          type: object
                        product_id:
                          description: The product ID this price was generated for
                          type: integer
                        retail_price:
                          description: The (optional) RRP/retail price configured
                            for this product. Used for price comparison and storefront
                            display purposes.
                          properties:
                            as_entered:
                              description: The price provided by the merchant as entered
                                in their catalog/price list (may be inc or ex)
                              type: number
                            entered_inclusive:
                              description: Whether the `as_entered` price is inclusive
                                or exclusive of tax, based on the stores tax jurisdiction
                              type: boolean
                            tax_exclusive:
                              description: The estimated tax exclusive price for this
                                product based on the provided customer group
                              type: number
                            tax_inclusive:
                              description: The estimated tax inclusive price for this
                                product based on the provided customer group
                              type: number
                          type: object
                        retail_price_range:
                          description: The product's variants that will typically
                            apply to this product.
                          properties:
                            maximum:
                              description: The price for a product including estimates
                                for tax
                              properties:
                                as_entered:
                                  description: The price provided by the merchant
                                    as entered in their catalog/price list (may be
                                    inc or ex)
                                  type: number
                                entered_inclusive:
                                  description: Whether the `as_entered` price is inclusive
                                    or exclusive of tax, based on the stores tax jurisdiction
                                  type: boolean
                                tax_exclusive:
                                  description: The estimated tax exclusive price for
                                    this product based on the provided customer group
                                  type: number
                                tax_inclusive:
                                  description: The estimated tax inclusive price for
                                    this product based on the provided customer group
                                  type: number
                              type: object
                            minimum:
                              description: The price for a product including estimates
                                for tax
                              properties:
                                as_entered:
                                  description: The price provided by the merchant
                                    as entered in their catalog/price list (may be
                                    inc or ex)
                                  type: number
                                entered_inclusive:
                                  description: Whether the `as_entered` price is inclusive
                                    or exclusive of tax, based on the stores tax jurisdiction
                                  type: boolean
                                tax_exclusive:
                                  description: The estimated tax exclusive price for
                                    this product based on the provided customer group
                                  type: number
                                tax_inclusive:
                                  description: The estimated tax inclusive price for
                                    this product based on the provided customer group
                                  type: number
                              type: object
                          type: object
                        sale_price:
                          description: The merchant-entered sale price for a product
                            overwrites the default price. The sale_price is optional.
                          properties:
                            as_entered:
                              description: The price provided by the merchant as entered
                                in their catalog/price list (may be inc or ex)
                              type: number
                            entered_inclusive:
                              description: Whether the `as_entered` price is inclusive
                                or exclusive of tax, based on the stores tax jurisdiction
                              type: boolean
                            tax_exclusive:
                              description: The estimated tax exclusive price for this
                                product based on the provided customer group
                              type: number
                            tax_inclusive:
                              description: The estimated tax inclusive price for this
                                product based on the provided customer group
                              type: number
                          type: object
                        variant_id:
                          description: The (optional) variant ID this price was generated
                            for
                          type: integer
                      type: object
                    type: array
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: OK
      summary: Get Prices (Batch)
      tags:
      - Products
  /settings/analytics:
    get:
      description: Returns a list of web analytics providers.
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/AnalyticsProviders'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Get All Web Analytics Providers
      tags:
      - Analytics
    parameters:
    - $ref: '#/components/parameters/Accept'
  /settings/analytics/{id}:
    get:
      description: Returns a single web analytics provider data for a default channel.
      parameters:
      - description: Web Analytics Provider ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsProvider'
          description: Successful operation.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
          description: Bad request. Authentication Required.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
          description: The requested resource was not found. Please specify valid
            Web Analytics Provider ID.
      summary: Get a Web Analytics Provider
      tags:
      - Analytics
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: id
      required: true
      schema:
        type: integer
    put:
      description: Updates a single web analytics provider data for a default channel.
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: Web Analytics Provider ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              properties:
                channel_id:
                  type: number
                code:
                  minLength: 1
                  type: string
                data_tag_enabled:
                  type: boolean
                enabled:
                  type: boolean
                id:
                  type: number
                is_oauth_connected: {}
                name:
                  minLength: 1
                  type: string
                version:
                  type: number
              type: object
              x-examples:
                example-1:
                  channel_id: 1
                  code: GA-1234567890
                  data_tag_enabled: false
                  enabled: false
                  id: 2
                  is_oauth_connected: null
                  name: Visual Website Optimizer
                  version: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsProvider'
          description: Successful operation.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
          description: Bad request. Authentication Required.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
          description: The requested resource was not found. Please specify valid
            Web Analytics Provider ID.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: Web Analytics Provider was in conflict with another Web Analytics
            Provider. This can be caused by duplicated unique values (such as ID).
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
          description: Web Analytics Provider data was not valid. This is the result
            of missing required fields, or of invalid data. See the response for more
            details.
      summary: Update a Web Analytics Provider
      tags:
      - Analytics
  /settings/catalog:
    get:
      description: "Returns catalog settings.\n\n - Channel ID can be used as a query\
        \ parameter for getting channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CatalogSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK. `null` indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Catalog Settings
      tags:
      - Catalog
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates catalog settings.\n\n - Channel ID can be used as a query\
        \ parameter for updating channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` should be supplied to delete\
        \ overrides per given channel and to inherit values from global level. Partial\
        \ updates are not supported and all settings should be supplied with `null`\
        \ value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSettings'
        description: null set for a particular field removes override on a channel
          level and means inheritance from a global level
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CatalogSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK. `null` indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Update Catalog Settings
      tags:
      - Catalog
  /settings/email-statuses:
    get:
      description: Get global transactional email settings or channel specific overrides
        by `channel_id`.
      operationId: get-settings-emails-enabled
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      abandoned_cart_email: true
                      account_details_changed_email: true
                      combined_order_status_email: true
                      createaccount_email: true
                      createguestaccount_email: true
                      giftcertificate_email: true
                      invoice_email: true
                      ordermessage_notification: true
                      product_review_email: false
                      return_confirmation_email: true
                      return_statuschange_email: true
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/EnabledTransactionalEmails'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Transactional Email Settings
      tags:
      - Email Statuses
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Update global transactional email settings or create channel specific
        overrides by `channel_id`.
      operationId: put-settings-transactional-emails-enabled
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  abandoned_cart_email: true
                  account_details_changed_email: true
                  combined_order_status_email: true
                  createaccount_email: true
                  createguestaccount_email: true
                  giftcertificate_email: true
                  invoice_email: true
                  ordermessage_notification: true
                  product_review_email: false
                  return_confirmation_email: true
                  return_statuschange_email: true
            schema:
              $ref: '#/components/schemas/EnabledTransactionalEmails'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      abandoned_cart_email: true
                      account_details_changed_email: true
                      combined_order_status_email: true
                      createaccount_email: true
                      createguestaccount_email: true
                      giftcertificate_email: true
                      invoice_email: true
                      ordermessage_notification: true
                      product_review_email: false
                      return_confirmation_email: true
                      return_statuschange_email: true
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/EnabledTransactionalEmails'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Transactional Email Settings
      tags:
      - Email Statuses
  /settings/favicon/image:
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Uploads an image file to use as the storefront favicon. Supported\
        \ MIME types include GIF, JPEG, and PNG. \n\n  - Channel ID can be used as\
        \ a query parameter for updating channel-specific setting. If omitted, you\
        \ will interact with the global setting only."
      operationId: post-favicon-logo-image
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                FaviconFile:
                  format: binary
                  type: string
              type: object
      responses:
        '204':
          description: OK
      summary: Create Favicon Image
      tags:
      - Favicon Image
  /settings/inventory:
    get:
      description: Get Inventory Settings
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/InventorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Provided settings could not be applied for some reason - detailed
            errors in the response.
      summary: Get Inventory Settings
      tags:
      - Inventory
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Update inventory settings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventorySettings'
        description: null set for a particular field removes override on a channel
          level and means inheritance from a global level
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/InventorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Update Inventory Settings
      tags:
      - Inventory
  /settings/inventory/notifications:
    get:
      description: "Returns inventory notification settings. \n* `channel_id` can\
        \ be used as a query parameter to get inventory notification settings per\
        \ channel. If omitted, you will interact with the global setting only."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/InventoryNotificationsSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK. `null` indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Inventory Notifications Settings
      tags:
      - Inventory Notifications
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates inventory notification settings. \n* `channel_id` can\
        \ be used as a query parameter to get inventory notification settings per\
        \ channel. If omitted, you will interact with the global setting only. \n\
        * Supplying `null` settings values per channel will delete overrides per given\
        \ channel and values will be inherited from global level. \n* Partial updates\
        \ are not supported within the given endpoint. In order to delete overrides\
        \ per channel, `null` should be supplied for all the settings within the given\
        \ endpoint."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryNotificationsSettings'
        description: null set for a particular field removes override on a channel
          level and means inheritance from a global level
      responses:
        '200':
          description: OK
      summary: Update Inventory Notifications Settings
      tags:
      - Inventory Notifications
  /settings/logo:
    get:
      description: "Returns store logo settings.\n\n - Channel ID can be used as a\
        \ query parameter for getting channel-specific setting. If omitted, you will\
        \ interact with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      operationId: get-settings-logo
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/LogoSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Store Logo Settings
      tags:
      - Logo
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates the logo type and logo text for a textual logo. To upload\
        \ new images, use the dedicated image POST endpoints.\n\n - Channel ID can\
        \ be used as a query parameter for updating channel-specific setting. If omitted,\
        \ you will interact with the global setting only. \n\n - `null` should be\
        \ supplied to delete overrides per given channel and to inherit values from\
        \ global level. Partial updates are not supported and all settings should\
        \ be supplied with `null` value in order to delete overrides per channel."
      operationId: put-settings-logo
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoSettingsUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/LogoSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Store Logo Settings
      tags:
      - Logo
  /settings/logo/image:
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: "Uploads an image file to use as the storefront logo. Supported\
        \ MIME types include GIF, JPEG, and PNG. \n\n - Channel ID can be used as\
        \ a query parameter for updating channel-specific setting. If omitted, you\
        \ will interact with the global setting only."
      operationId: post-settings-logo-image
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                LogoFile:
                  format: binary
                  type: string
              type: object
      responses:
        '204':
          description: OK
      summary: Create Logo Image
      tags:
      - Logo Image
  /settings/search/filters:
    get:
      description: Returns a list of enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings)
        filters. These filters will be used if a store does not have contextual overrides.
      operationId: getEnabled
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                    - collapsed_by_default: false
                      display_name: Size
                      display_product_count: true
                      id: U123=
                      is_enabled: true
                      items_to_show: 10
                      sort_by: alpha
                      type: product
                    - collapsed_by_default: false
                      display_name: Brand
                      display_product_count: true
                      id: Y123=
                      is_enabled: true
                      items_to_show: 12
                      sort_by: alpha
                      type: brand
                    - collapsed_by_default: false
                      display_name: Color
                      display_product_count: true
                      id: Q123=
                      is_enabled: true
                      items_to_show: 10
                      sort_by: alpha
                      type: product
                    - collapsed_by_default: true
                      display_name: Ships for Free
                      display_product_count: false
                      id: Y456=
                      is_enabled: true
                      show_free_shipping_filter: true
                      show_in_stock_filter: true
                      show_is_featured_filter: true
                      type: other
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Get Enabled Filters
      tags:
      - Search Filters
    put:
      description: Updates enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings)
        filters.
      operationId: updateEnabled
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - collapsed_by_default: false
                  display_name: Size
                  display_product_count: true
                  id: U123=
                  is_enabled: true
                  items_to_show: 12
                  sort_by: alpha
                  type: product
                - collapsed_by_default: false
                  display_name: Brand
                  display_product_count: true
                  id: Y123=
                  is_enabled: true
                  items_to_show: 10
                  sort_by: alpha
                  type: brand
                - collapsed_by_default: false
                  display_name: Color
                  display_product_count: true
                  id: Q123=
                  is_enabled: true
                  items_to_show: 10
                  sort_by: alpha
                  type: product
                - collapsed_by_default: true
                  display_name: Ships for Free
                  display_product_count: true
                  id: Y456=
                  is_enabled: true
                  show_free_shipping_filter: true
                  show_in_stock_filter: true
                  show_is_featured_filter: true
                  type: other
            schema:
              $ref: '#/components/schemas/ConfiguredFilters'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                    - collapsed_by_default: false
                      display_name: Size
                      display_product_count: true
                      id: U123==
                      is_enabled: true
                      items_to_show: 12
                      sort_by: alpha
                      type: product
                    - collapsed_by_default: false
                      display_name: Brand
                      display_product_count: true
                      id: Y123=
                      is_enabled: true
                      items_to_show: 10
                      sort_by: alpha
                      type: brand
                    - collapsed_by_default: false
                      display_name: Color
                      display_product_count: true
                      id: Q123=
                      is_enabled: true
                      items_to_show: 10
                      sort_by: alpha
                      type: product
                    - collapsed_by_default: true
                      display_name: Ships for Free
                      display_product_count: true
                      id: Y456=
                      is_enabled: true
                      show_free_shipping_filter: true
                      show_in_stock_filter: true
                      show_is_featured_filter: true
                      type: other
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Update Enabled Filters
      tags:
      - Search Filters
  /settings/search/filters/available:
    get:
      description: Returns a list of filters available to power [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings).
      operationId: getAvailable
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - description: Narrows the list of available filters based on channel ID. Only
          products currently assigned to the given Channel will be considered.
        in: query
        name: channel_id
        schema:
          type: integer
      - description: Narrows the list of available filters based on category ID. You
          can display settings to show products from the provided category, subcategories
          only, or both the category and its child categories.
        in: query
        name: category_id
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                    - id: Y2F0Zooo123=
                      name: Category
                      product_count: 7
                      type: category
                    - id: YnJh123=
                      name: Brand
                      product_count: 8
                      type: brand
                    - id: cmF0a123
                      name: Rating
                      product_count: 1
                      type: rating
                    - id: cHJp123=
                      name: Price
                      price_range_max: 300.99
                      price_range_min: 6.75
                      type: price
                    - id: U2l123==
                      name: Size
                      product_count: 3
                      type: product
                    - id: Q29s123=
                      name: Color
                      product_count: 2
                      type: product
                    - id: Ym9123==
                      name: Other
                      type: other
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/AvailableFilter'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Get Available Filters
      tags:
      - Search Filters
    parameters:
    - $ref: '#/components/parameters/Accept'
  /settings/search/filters/contexts:
    get:
      description: 'Returns a list of contextual filters enabled for a particular
        channel or category.


        **Usage Notes**


        Contextual filters allow you to configure the enabled filters per channel
        or category, so that shoppers can filter by the most relevant criteria.


        The order of the returned filters will match the sort order of the filters
        on the storefront.'
      operationId: getContexts
      parameters:
      - description: Only return contextual overrides related to a particular Channel.
        in: query
        name: channel_id
        schema:
          type: integer
      - description: Only return contextual overrides related to a particular Category.
        in: query
        name: category_id
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
                type: object
          description: OK
      summary: Get Contextual Filters
      tags:
      - Search Filters
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: 'Upserts contextual filters for a particular channel or category.


        **Usage Notes**


        Contextual filters allow you to configure the enabled filters per channel
        or category, so that shoppers can filter by the most relevant criteria.


        You can change the order of the filters on the live site by changing the order
        of the filters you send.'
      operationId: upsertContexts
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ConfiguredFiltersOverride'
              type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Upsert Contextual Filters
      tags:
      - Search Filters
  /settings/store/locale:
    get:
      description: Returns global locale settings.
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      default_shopper_language: en
                      shopper_language_selection_method: default_shopper_language
                      store_country: United States
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Locale'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Get Locale Settings
      tags:
      - Store Locale
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Updates global locale settings.
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  default_shopper_language: en
                  shopper_language_selection_method: default_shopper_language
                  store_country: United States
            schema:
              $ref: '#/components/schemas/Locale'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      default_shopper_language: en
                      shopper_language_selection_method: default_shopper_language
                      store_country: United States
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Locale'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Provided settings could not be applied for some reason - detailed
            errors in the response.
      summary: Update Locale Settings
      tags:
      - Store Locale
  /settings/store/profile:
    get:
      description: "Returns store profile settings.\n\n - Channel ID can be used as\
        \ a query parameter for getting channel-specific setting. If omitted, you\
        \ will interact with the global setting only. \n\n - `null` indicates that\
        \ a particular field has not been overridden on a channel level when channel\
        \ level settings are requested and values are inherited from global level."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StoreProfile'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK. `null` indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Store Profile Settings
      tags:
      - Store Profile
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates store profile settings.\n\n - Channel ID can be used as\
        \ a query parameter for updating channel-specific setting. If omitted, you\
        \ will interact with the global setting only. \n\n - `null` should be supplied\
        \ to delete overrides per given channel and to inherit values from global\
        \ level. Partial updates are not supported and all settings should be supplied\
        \ with `null` value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StoreProfile'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Provided settings could not be applied for some reason - detailed
            errors in the response.
      summary: Update Store Profile Settings
      tags:
      - Store Profile
  /settings/storefront/category:
    get:
      description: "Returns category settings.\n\n - Channel ID can be used as a query\
        \ parameter for getting channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK. `null` indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Storefront Category Settings
      tags:
      - Storefront Category
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates category settings.\n\n - Channel ID can be used as a query\
        \ parameter for updating channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` should be supplied to delete\
        \ overrides per given channel and to inherit values from global level. Partial\
        \ updates are not supported and all settings should be supplied with `null`\
        \ value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontCategorySettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '422':
          $ref: '#/components/responses/422ErrorResp'
      summary: Update Storefront Category Settings
      tags:
      - Storefront Category
  /settings/storefront/product:
    get:
      description: "Returns product settings.\n\n - Channel ID can be used as a query\
        \ parameter for getting channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      operationId: get-settings-storefront-product
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          $ref: '#/components/responses/200-storefront-product-settings'
      summary: Get Storefront Product Settings
      tags:
      - Storefront Product
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates product settings.\n\n - Channel ID can be used as a query\
        \ parameter for updating channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` should be supplied to delete\
        \ overrides per given channel and to inherit values from global level. Partial\
        \ updates are not supported and all settings should be supplied with `null`\
        \ value in order to delete overrides per channel."
      operationId: put-settings-storefront-product
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontProductSettings'
      responses:
        '200':
          $ref: '#/components/responses/200-storefront-product-settings'
        '422':
          $ref: '#/components/responses/422ErrorResp'
      summary: Update Storefront Product Settings
      tags:
      - Storefront Product
  /settings/storefront/robotstxt:
    get:
      description: "Returns Robots.txt settings.\n\n - Channel ID can be used as a\
        \ query parameter for getting channel-specific setting. If omitted, you will\
        \ interact with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      robots_txt_ssl: string
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Robots.txt Settings
      tags:
      - Storefront Robotstxt
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates Robots.txt settings.\n\n - Channel ID can be used as a\
        \ query parameter for updating channel-specific setting. If omitted, you will\
        \ interact with the global setting only. \n\n - `null` should be supplied\
        \ to delete overrides per given channel and to inherit values from global\
        \ level. Partial updates are not supported and all settings should be supplied\
        \ with `null` value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotsTxtSettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Robots.txt Settings
      tags:
      - Storefront Robotstxt
  /settings/storefront/search:
    get:
      description: "Returns search settings.\n\n - Channel ID can be used as a query\
        \ parameter for getting channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      operationId: ''
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      content_product_sort: relevance
                      default_product_sort: bestselling
                      product_filtering_enabled: true
                      search_suggest: true
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Storefront Search Settings
      tags:
      - Storefront Search
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates search settings.\n\n - Channel ID can be used as a query\
        \ parameter for updating channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` should be supplied to delete\
        \ overrides per given channel and to inherit values from global level. Partial\
        \ updates are not supported and all settings should be supplied with `null`\
        \ value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  content_product_sort: relevance
                  default_product_sort: featured
                  product_filtering_enabled: true
                  search_suggest: true
            schema:
              $ref: '#/components/schemas/StorefrontSearchSettings'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      content_product_sort: relevance
                      default_product_sort: featured
                      product_filtering_enabled: true
                      search_suggest: true
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Storefront Search Settings
      tags:
      - Storefront Search
  /settings/storefront/security:
    get:
      description: "Returns security settings.\n\n - Channel ID can be used as a query\
        \ parameter for getting channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSecuritySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Storefront Security Settings
      tags:
      - Storefront Security
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates security settings.\n\n - Channel ID can be used as a query\
        \ parameter for updating channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` should be supplied to delete\
        \ overrides per given channel and to inherit values from global level. Partial\
        \ updates are not supported and all settings should be supplied with `null`\
        \ value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontSecuritySettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSecuritySettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Storefront Security Settings
      tags:
      - Storefront Security
  /settings/storefront/seo:
    get:
      description: "Returns SEO settings.\n\n - Channel ID can be used as a query\
        \ parameter for getting channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` indicates that a particular\
        \ field has not been overridden on a channel level when channel level settings\
        \ are requested and values are inherited from global level."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      meta_description: Your BigCommerce Store
                      meta_keywords: ''
                      page_title: BigCommerce Store
                      www_redirect: no-www
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Storefront SEO Settings
      tags:
      - Storefront SEO
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates SEO settings.\n\n - Channel ID can be used as a query\
        \ parameter for updating channel-specific setting. If omitted, you will interact\
        \ with the global setting only. \n\n - `null` should be supplied to delete\
        \ overrides per given channel and to inherit values from global level. Partial\
        \ updates are not supported and all settings should be supplied with `null`\
        \ value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  meta_description: Your BigCommerce Store
                  meta_keywords: ''
                  page_title: New BigCommerce Store
                  www_redirect: no-www
            schema:
              $ref: '#/components/schemas/SEOSettings'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '422':
          $ref: '#/components/responses/422ErrorResp'
      summary: Update Storefront SEO Settings
      tags:
      - Storefront SEO
  /settings/storefront/status:
    get:
      description: "Returns storefront status-related settings. \n\n - Channel ID\
        \ can be used as a query parameter for getting channel-specific setting. If\
        \ omitted, you will interact with the global setting only. \n\n - `null` indicates\
        \ that a particular field has not been overridden on a channel level when\
        \ channel level settings are requested and values are inherited from global\
        \ level."
      parameters:
      - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: Down for maintenance
                      prelaunch_message: Prelaunch
                      prelaunch_password: mezt1f77gd
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK, null indicates that a particular field has not been overridden
            on a channel level when channel level settings are requested
      summary: Get Storefront Status
      tags:
      - Storefront Status
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: "Updates storefront status-related settings.\n\n - Channel ID can\
        \ be used as a query parameter for updating channel-specific setting. If omitted,\
        \ you will interact with the global setting only. \n\n - `null` should be\
        \ supplied to delete overrides per given channel and to inherit values from\
        \ global level. Partial updates are not supported and all settings should\
        \ be supplied with `null` value in order to delete overrides per channel."
      parameters:
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  down_for_maintenance_message: Down for maintenance
                  prelaunch_message: Coming soon
            schema:
              $ref: '#/components/schemas/StorefrontStatus'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: Down for maintenance
                      prelaunch_message: Coming soon
                      prelaunch_password: mezt1f77gd
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Storefront Status
      tags:
      - Storefront Status
  /shipping/products/customs-information:
    delete:
      description: 'Deletes customs information objects for a product.


        ## Example


        This is a batch operation. The `product_id:in` query parameter is required.


        ```http

        DELETE /shipping/products/customs-information?product_id:in=4,5,6

        ```'
      operationId: deleteCustomsInformation
      parameters:
      - in: query
        name: product_id:in
        required: true
        schema:
          items:
            type: integer
          type: string
      responses:
        '204':
          description: No Content
      summary: Delete Customs Information
      tags:
      - Customs Information
    get:
      description: 'Get customs information for products.


        This list can be filtered to return customs information objects specific to
        a list of requested product_ids. This is achieved by appending the query string
        `?product_id:in=4,5,6` to the resource `/shipping/products/customs-information`.


        ```http

        GET /shipping/products/customs-information?product_id:in=4,5,6

        ```'
      operationId: getCustomsInformation
      parameters:
      - description: A comma-separated list of product IDs. For more information,
          see [Filtering](/api-docs/getting-started/filtering).
        explode: false
        in: query
        name: product_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/customsInformation'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection'
                type: object
          description: ''
      summary: Get Customs Information
      tags:
      - Customs Information
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: 'Creates and updates product customs information.


        This is a batch operation where the creation of multiple customs information
        objects can be done with one `PUT` request.


        **Limits**

        * Limit of 50 customs information objects per `PUT` request.'
      operationId: putCustomsInformation
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                - commodity_description: Baseball caps
                  country_of_origin: US
                  hs_codes:
                    ALL: '501000'
                    AU: '817355'
                    CA: '508313'
                  international_shipping: true
                  product_id: 77
            schema:
              items:
                $ref: '#/components/schemas/customsInformation_request'
              type: array
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/customsInformation'
                    type: array
                type: object
          description: OK
      summary: Upsert Customs Information
      tags:
      - Customs Information
  /sites:
    get:
      description: Get sites linked to a [headless storefront](/api-docs/storefronts/developers-guide-headless)
        sales channels.
      parameters:
      - description: Specifies the page number in a limited (paginated) list of items.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of items.
        in: query
        name: limit
        schema:
          type: integer
      - description: Filters returned sites by channel ID.
        in: query
        name: channel_id:in
        schema:
          example: 1
          type: integer
      - description: Filters sites returned in the `data.urls` array by their URL
          type.
        in: query
        name: url_type:in
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/site_RespCollection'
      summary: Get Sites
      tags:
      - Sites
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: Create a site that links a [headless storefront](/api-docs/storefronts/developers-guide-headless)
        to a sales [channel](/docs/rest-management/channels).
      operationId: post-site
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_Site'
        required: true
        x-examples:
          application/json:
            channel_id: 2
            url: http://store.example.com/
      responses:
        '201':
          $ref: '#/components/responses/response_Site'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '403':
          $ref: '#/components/responses/403_Unauthorized'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '502':
          description: ''
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
      summary: Create a Site
      tags:
      - Sites
  /sites/certificates:
    get:
      description: Return all SSL certificates connected to domains within a store.
      operationId: get-sites-certificates
      parameters:
      - description: Query certificates by one or more URLs
        in: query
        name: urls:in
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCertificatesResponse'
          description: OK
      summary: Get Site Certificates
      tags:
      - Site Certificate
    parameters:
    - $ref: '#/components/parameters/Accept'
  /sites/{site_id}:
    delete:
      description: Delete a site with site ID `{site_id}`.
      operationId: deleteSite
      responses:
        '204':
          description: ''
      summary: Delete a Site
      tags:
      - Sites
    get:
      description: Get a site with site ID `{site_id}`.
      operationId: getSite
      responses:
        '200':
          $ref: '#/components/responses/response_Site'
      summary: Get a Site
      tags:
      - Sites
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: site_id
      required: true
      schema:
        type: string
    put:
      description: Update a site with site ID `{site_id}`.
      operationId: putSite
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_Site'
        required: true
        x-examples:
          application/json:
            url: https://remote-site.com/
      responses:
        '200':
          $ref: '#/components/responses/response_Site'
      summary: Update a Site
      tags:
      - Sites
  /sites/{site_id}/certificate:
    get:
      description: Obtain information about a site’s SSL/TLS certificate.
      operationId: getSitesIdCertificate
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/CertificateResponse'
          description: OK
      summary: Get a Site’s SSL/TLS Certificate Information
      tags:
      - Site Certificate
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: site_id
      required: true
      schema:
        type: integer
    put:
      description: '- If a value for `url` is not supplied, the saved certificate
        is associated with the specified site’s `primary` URL.

        - Use caution. Because this endpoint upserts, supplying an SSL certificate
        for a domain that already has a certificate connected overwrites the domain’s
        extant certificate.'''
      operationId: putSiteIdCertificate
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallCertificateData'
        description: ''
      responses:
        '200':
          content:
            Example:
              examples:
                response:
                  value: "{\n    \"data\": {},\n    \"meta\": {}\n}"
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: OK
      summary: Upsert a Site’s SSL/TLS Certificate Information
      tags:
      - Site Certificate
  /sites/{site_id}/routes:
    get:
      description: Get a site’s routes.
      operationId: index-site-routes
      parameters:
      - description: Filter routes by a specified resource type.
        in: query
        name: type
        schema:
          type: string
      - description: Specifies the page number in a limited (paginated) list of items.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of items.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - id: 1
                      matching: '5'
                      route: /products?id={id}
                      type: product
                    - id: 2
                      matching: '44'
                      route: /category/{slug}
                      type: category
                    meta:
                      pagination:
                        count: 1
                        current_page: 1
                        per_page: 50
                        total: 1
                        total_pages: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/siteRoute_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/_metaCollection'
                type: object
          description: ''
      summary: Get a Site’s Routes
      tags:
      - Site Routes
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: site_id
      required: true
      schema:
        type: integer
    post:
      description: 'Create routes that tell BigCommerce how to link to pages on a
        [headless storefront](/api-docs/storefronts/developers-guide-headless).


        ## Usage Notes

        * For a list of supported route types, see [Route types](/docs/rest-management/sites#route-types).'
      operationId: post-site-route
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteRoute_Base'
        required: true
        x-examples:
          application/json:
            matching: '5'
            route: /my-amazing-product
            type: returns
      responses:
        '201':
          $ref: '#/components/responses/siteRoute_Resp'
        '422':
          $ref: '#/components/responses/ErrorResponse'
        '502':
          $ref: '#/components/responses/502_GatewayError'
      summary: Create a Site Route
      tags:
      - Site Routes
    put:
      description: 'Upsert routes for site with ID `{site_id}`.


        ## Usage Notes

        * `id` is required when updating an existing route.'
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteRoute_Full'
        x-examples:
          application/json:
          - id: 1
            matching: '*'
            route: /products/{id}
            type: product
          - id: 2
            matching: '10'
            route: /products?id={id}
            type: product
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - id: 123
                      matching: '5'
                      route: /my-amazing-product
                      type: brand
                    - id: 345
                      matching: '5'
                      route: /my-amazing-product
                      type: blog
                    - id: 234
                      matching: '5'
                      route: /my-amazing-product
                      type: returns
                    meta:
                      pagination:
                        count: 50
                        current_page: 50
                        links:
                          current: ?page=1&limit=50
                          next: ?page=2&limit=50
                        per_page: 50
                        total: 80
                        total_pages: 2
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/siteRoute_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/_metaCollection'
                type: object
          description: ''
        '422':
          $ref: '#/components/responses/BulkErrorResponse'
      summary: Update a Site’s Routes
      tags:
      - Site Routes
  /sites/{site_id}/routes/{route_id}:
    delete:
      description: Delete a site’s route.
      operationId: delete-route
      responses:
        '204':
          description: ''
      summary: Delete a Site Route
      tags:
      - Site Routes
    get:
      description: Get a site’s route.
      operationId: get-site-route
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      id: 60474753
                      matching: '5'
                      route: /my-amazing-product
                      type: checkout
                    meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/siteRoute_Full'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: ''
      summary: Get a Site Route
      tags:
      - Site Routes
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: site_id
      required: true
      schema:
        type: string
    - in: path
      name: route_id
      required: true
      schema:
        type: string
    put:
      description: 'Update a site’s route.

        '
      operationId: put-site-route
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteRoutes_Route_Base'
        required: true
        x-examples:
          application/json:
            matching: '*'
            route: /products/{id}
            type: product
      responses:
        '201':
          $ref: '#/components/responses/siteRoute_Resp'
      summary: Update a Site Route
      tags:
      - Site Routes
  /store/systemlogs:
    get:
      description: 'Get system logs '
      operationId: get-sites
      parameters:
      - description: Query parameter that lets you return the number of results displayed
          per page.
        in: query
        name: limit
        schema:
          default: 50
          type: integer
      - description: Query parameter that lets you specify the starting page in which
          results are returned.
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: Query parameter that lets you filter the results by log type.
        in: query
        name: type
        schema:
          enum:
          - general
          - payment
          - shipping
          - tax
          - notification
          - emailintegration
          - ordersettings
          - design
          type: string
      - description: Query parameter that lets you exclude a log type from the results.
        in: query
        name: type:not
        schema:
          type: string
      - description: Query parameter that lets you filter the results by module.
        in: query
        name: module
        schema:
          enum:
          - export+only
          - email+message
          - theme+download
          - order+status
          - optimized+checkout
          type: string
      - description: Query parameter that lets you exclude a log module from the results.
        in: query
        name: module:not
        schema:
          type: string
      - description: 'Query parameter that lets you filter results by severity level,
          as an integer. The following values are possible: Success = 1, Notice =
          2, Warning = 3, Error = 4'
        in: query
        name: severity
        schema:
          enum:
          - 1
          - 2
          - 3
          - 4
          type: integer
      - description: Query parameter that lets you filter by minimum severity, as
          an integer.
        in: query
        name: severity:min
        schema:
          type: integer
      - description: Query parameter that lets you filter by maximum severity, as
          an integer.
        in: query
        name: severity:max
        schema:
          type: integer
      - description: Query parameter that lets you filter by a list of log IDs, as
          a CSV. For example ?id:in=3,4,6
        in: query
        name: id:in
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/SystemLog'
                    type: array
                  meta:
                    $ref: '#/components/schemas/IndexMeta'
                type: object
          description: The request completed successfully.
      summary: Get System Logs
      tags:
      - System Logs
    parameters: []
  /storefront/api-token:
    delete:
      description: Revoke access for a Storefront API token. Only revoke compromised
        tokens under emergency situations. Let uncompromised short-lived tokens expire
        naturally, as you do not need to revoke these.
      operationId: revokeToken
      parameters:
      - description: An existing JWT token that you want to revoke.
        in: header
        name: Sf-Api-Token
        required: true
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: A storefront API token revocation has been scheduled.
        '401':
          content: {}
          description: Unauthorized - the v3 Auth client ID or token in the request
            are not a valid combination for this store.
        '403':
          content: {}
          description: Missing scope - the v3 Auth token is valid but does not have
            proper permissions to access this endpoint.
        '422':
          content: {}
          description: Invalid JWT Token provided or missing JWT token header
      summary: Revoke a Token
      tags:
      - API Token
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Creates a Storefront API token.


        **Required Scopes**

        * `Manage` `Storefront API Tokens`'
      operationId: createToken
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TokenPostSimple'
              - $ref: '#/components/schemas/TokenPostImpersonation'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token_Full'
          description: ''
        '401':
          content: {}
          description: Unauthorized - the v3 Auth client ID or token in the request
            are not a valid combination for this store.
        '403':
          content: {}
          description: Missing scope - the v3 Auth token is valid but does not have
            proper permissions to access this endpoint.
        '422':
          content: {}
          description: Invalid JSON request body - missing or invalid data.
      summary: Create a Token
      tags:
      - API Token
      x-codegen-request-body-name: body
  /storefront/api-token-customer-impersonation:
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Returns a Storefront API token that allows your application to
        impersonate customers when making GraphQL `POST` requests. For more information
        on how to use the returned token, see [customer impersonation tokens](/docs/storefront-auth/tokens/customer-impersonation-token#create-a-token).


        **Required Scopes**

        * `Manage` `Storefront API Customer Impersonation Tokens`'
      operationId: createTokenWithCustomerImpersonation
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenPostImpersonation'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token_Full'
          description: ''
        '401':
          content: {}
          description: Unauthorized - the v3 Auth client ID or token in the request
            are not a valid combination for this store.
        '403':
          content: {}
          description: Missing scope - the v3 Auth token is valid but does not have
            proper permissions to access this endpoint.
        '422':
          content: {}
          description: Invalid JSON request body - missing or invalid data
      summary: Create a Token
      tags:
      - Customer Impersonation Token
  /storefront/custom-template-associations:
    delete:
      description: Delete custom template associations. At least one query parameter
        must be used.
      operationId: DeleteCustomTemplateAssociations
      parameters:
      - description: List of Association IDs to delete explicitly.
        in: query
        name: id:in
        schema:
          type: integer
      - description: List of Entity IDs to delete explicitly. Must be used together
          with "type"
        in: query
        name: entity_id:in
        schema:
          type: integer
      - description: Channel ID provided to delete all custom template associations
          for a given Channel
        in: query
        name: channel_id
        schema:
          type: integer
      - description: Filter associations by type
        in: query
        name: type
        schema:
          enum:
          - product
          - category
          - brand
          - page
          type: string
      responses:
        '204':
          description: No Content
      summary: Delete Custom Template Associations
      tags:
      - Custom Template Associations
    get:
      description: Get a collection of the storeʼs custom template associations across
        all storefronts
      operationId: GetCustomTemplateAssociations
      parameters:
      - description: Channel ID to return only custom template associations for a
          given Channel
        in: query
        name: channel_id
        schema:
          type: integer
      - description: Filter by a list of entity IDs. Must be used together with "type"
          filter.
        in: query
        name: entity_id:in
        schema:
          type: string
      - description: Number of results to return per page
        in: query
        name: limit
        schema:
          type: integer
      - description: Which page number to return, based on the page size. Used to
          paginate large collections.
        in: query
        name: page
        schema:
          type: integer
      - description: Filter associations by type
        in: query
        name: type
        schema:
          enum:
          - product
          - category
          - brand
          - page
          type: string
      - description: Optional toggle to filter for exclusively valid or invalid associations
          entries. An invalid entry is one where its file name does not match up to
          an existing custom layout file in the currently active theme for the channel.
        in: query
        name: is_valid
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                    - channel_id: 1
                      entity_id: 123
                      entity_type: product
                      file_name: custom-product-1.html
                      id: 1
                    - channel_id: 12345
                      entity_id: 123
                      entity_type: page
                      file_name: custom-page.html
                      id: 2
                    meta:
                      pagination:
                        count: 5
                        current_page: 1
                        links:
                          current: ?limit=5&page=1
                          next: ?limit=5&page=2
                        per_page: 5
                        total: 246
                        total_pages: 50
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/CustomTemplateAssociation'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
                type: object
          description: OK
      summary: Get Custom Template Associations
      tags:
      - Custom Template Associations
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Upsert new custom template associations data across all storefronts.
        If an existing record is found for the combination of channel ID, entity ID,
        and type, the existing record will be overwritten with the new template.
      operationId: UpsertCustomTemplateAssociations
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - channel_id: 1
                  entity_id: 123
                  entity_type: product
                  file_name: custom-product-1.html
                  id: 1
                - channel_id: 12345
                  entity_id: 123
                  entity_type: page
                  file_name: custom-page.html
                  id: 2
            schema:
              items:
                $ref: '#/components/schemas/CustomTemplateAssociationUpsert'
              maxItems: 100
              minItems: 1
              type: array
              uniqueItems: true
        description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Success response for batch upsert of custom template associations
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response for batch PUT of Custom template associations.
            Includes the errors for each reference ID.
      summary: Upsert Custom Template Associations
      tags:
      - Custom Template Associations
  /storefront/redirects:
    delete:
      description: Deletes redirects.
      operationId: DeleteRedirects
      parameters:
      - description: List of Redirect IDs to delete explicitly.
        explode: false
        in: query
        name: id:in
        required: true
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Site ID provided to delete all redirects for a given Site.
        in: query
        name: site_id
        schema:
          type: integer
      responses:
        '204':
          content: {}
          description: No Content
      summary: Delete Redirects
      tags:
      - Redirects
    get:
      description: Returns a collection of the store's 301 redirects across all sites.
      operationId: GetRedirects
      parameters:
      - description: Filters items by `site_id`.
        in: query
        name: site_id
        schema:
          type: integer
      - description: Filters items by redirect `id`. Also accepts comma-separated
          values to filter for multiple redirects.
        explode: false
        in: query
        name: id:in
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Controls the number of items to return per page.
        in: query
        name: limit
        schema:
          type: integer
      - description: Specifies the page number in a limited (paginated) list of items.
          Used to paginate large collections.
        in: query
        name: page
        schema:
          type: integer
      - description: 'Field name to sort by. Note: Since redirect `id` increments
          when new redirects are added, you can use that field to sort by redirect
          create date.

          '
        in: query
        name: sort
        schema:
          enum:
          - from_path
          - type
          - site_id
          type: string
      - description: Sort direction. Acceptable values are `asc`, `desc`.
        in: query
        name: direction
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: Indicates whether to include redirect sub-resources. Only `to_url`
          is supported.
        in: query
        name: include
        schema:
          enum:
          - to_url
          type: string
      - description: Filters redirects by the specified keyword. Will only search
          from the beginning of a URL path. For example, `blue` will match `/blue`
          and `/blue-shirt` ,  **not** `/royal-blue-shirt`.
        in: query
        name: keyword
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/301RedirectRead'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
                type: object
          description: ''
      summary: Get Redirects
      tags:
      - Redirects
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Upserts new redirect data across all storefronts.
      operationId: UpsertRedirects
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/301RedirectUpsert'
              type: array
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/301RedirectRead'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
                type: object
          description: Created
      summary: Upsert Redirects
      tags:
      - Redirects
  /stores/{store_hash}/v3/orders/payment_actions/refund_quotes:
    parameters:
    - in: path
      name: store_hash
      required: true
      schema:
        type: string
    post:
      description: 'Calculate the tax amount, total refund amount and get available
        payment options for an order refund by providing items and costs or quantities
        to refund.


        This endpoint will accept a batch of one or more.


        Requires at least one of the following scopes:

        * `store_v2_orders`

        * `store_v2_transactions`'
      operationId: postrefundquotes
      parameters:
      - $ref: '#/components/parameters/Accept'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRefundQuotesRequest'
        required: true
        x-examples:
          application/json:
          - items:
            - item_id: 76
              item_type: PRODUCT
              quantity: 1
            tax_adjustment_amount: 0
      responses:
        '201':
          $ref: '#/components/responses/RefundQuotesBATCH_Resp'
        '422':
          content:
            Example 1:
              examples:
                response:
                  value: "{\n    \"data\": [\n        {\n            \"order_id\"\
                    : 1,\n            \"total_refund_amount\": 1.99,\n           \
                    \ \"total_refund_tax_amount\": 1.95,\n            \"rounding\"\
                    : 1,\n            \"adjustment\": 0.05,\n            \"tax_inclusive\"\
                    : true,\n            \"refund_methods\": [\n                \"\
                    \"\n            ]\n        }\n    ],\n    \"errors\": [\n    \
                    \    {\n            \"order_id\": 1,\n            \"status\":\
                    \ 422,\n            \"error\": \"Refund amount is greater than\
                    \ remaining amount\"\n        }\n    ],\n    \"meta\": {\n   \
                    \     \"failure\": 1,\n        \"success\": 1,\n        \"total\"\
                    : 2\n    }\n}"
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/RefundQuote_Full'
                    type: array
                  errors:
                    items:
                      $ref: '#/components/schemas/FailedQuoteError'
                    type: array
                  meta:
                    $ref: '#/components/schemas/Meta'
                type: object
          description: Partial success/failure response. Status to roll up to the
            most severe individual failure to the whole request.
        '503':
          content:
            application/json:
              examples:
                response:
                  value:
                    data: []
                    errors:
                    - error: Tax service could not be contacted
                      order_id: 1
                      status: 503
                    - error: Refund amount exceeds remaining amount
                      order_id: 100
                      status: 422
                    meta:
                      failure: 2
                      success: 0
                      total: 2
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/RefundQuote_Full'
                    type: array
                  errors:
                    items:
                      $ref: '#/components/schemas/FailedQuoteError'
                    type: array
                  meta:
                    $ref: '#/components/schemas/Meta'
                type: object
          description: Every request in the batch failed. The error object describes
            the failure for each component request.
      summary: Create Refund Quotes - BATCH
      tags:
      - Payment Actions
      x-private: true
  /stores/{store_hash}/v3/orders/payment_actions/refunds:
    get:
      description: 'Returns a list of refunds ordered by refund ID in ascending order.


        Requires at least one of the following scopes:

        * `store_v2_transactions_read_only`

        * `store_v2_transactions`

        * `store_v2_orders_read_only`

        * `store_v2_orders`'
      operationId: getrefunds
      parameters:
      - in: path
        name: store_hash
        required: true
        schema:
          type: string
      - description: Filter by `order_id`. Accepts multiple as comma-separated values.
        explode: false
        in: query
        name: order_id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Filter by refund `id`. Accepts multiple as comma-separated values.
        explode: false
        in: query
        name: id:in
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: 'Filter results so they are later than or equal to provided date.



          Must be in url-encoded RFC 3339 format.

          e.g. `2020-01-15T01:02:34-01:00` is RFC 3339 format.

          Url-encoded this will be `2020-01-15T01%3A02%3A34%2B01%3A00`'
        in: query
        name: created:min
        schema:
          format: date-time
          type: string
      - description: 'Filter results so they are earlier than or equal to provided
          date.



          Must be in url-encoded RFC 3339 format.

          e.g. `2020-01-15T01:02:34-01:00` is RFC 3339 format.

          Url-encoded this will be `2020-01-15T01%3A02%3A34%2B01%3A00`'
        in: query
        name: created:max
        schema:
          format: date-time
          type: string
      - description: Specifies the page number in a limited (paginated) list of items.
        in: query
        name: page
        schema:
          type: integer
      - description: Controls the number of items per page in a limited (paginated)
          list of items.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/RefundCollection_Resp'
      summary: Get All Refunds
      tags:
      - Payment Actions
  /tax/products/properties:
    delete:
      description: Delete tax properties that are associated with one or more products.
      operationId: delete-product-tax-properties
      parameters:
      - $ref: '#/components/parameters/product_idin'
      responses:
        '204':
          description: No Content
        '400':
          description: Request parameters invalid
      summary: Delete Product Tax Properties
      tags:
      - Product Tax Properties
    get:
      description: Retrieve the tax properties that are associated with one or more
        products.
      operationId: get-product-tax-properties
      parameters:
      - $ref: '#/components/parameters/product_idin'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ProductTaxProperty'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '400':
          description: Request parameters invalid
      summary: Get Product Tax Properties
      tags:
      - Product Tax Properties
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Update the tax properties associated with one or more products.
        This operation will be additive to any tax property values already associated
        with the product, overwriting any existing tax property values.
      operationId: update-product-tax-properties
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                - product_id: 157
                  tax_properties:
                    A-123456789: '26'
                    B-6731789: '200'
            schema:
              items:
                $ref: '#/components/schemas/ProductTaxProperty'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ProductTaxProperty'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '422':
          description: The request body does not meet specifications.
      summary: Update Product Tax Properties
      tags:
      - Product Tax Properties
  /tax/properties:
    delete:
      description: Delete one or multiple tax properties. A tax property must have
        zero usages within product tax properties before you can delete it.
      operationId: delete-tax-properties
      parameters:
      - $ref: '#/components/parameters/idin_required'
      responses:
        '204':
          description: No Content
        '400':
          description: Request parameters invalid
        '409':
          description: Tax Property is in use and cannot be deleted.
      summary: Delete Tax Properties
      tags:
      - Tax Properties
    get:
      description: Retrieve all tax properties defined in this store.
      operationId: get-tax-properties
      parameters:
      - $ref: '#/components/parameters/idin'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Property'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '400':
          description: Request parameters invalid
      summary: Get Tax Properties
      tags:
      - Tax Properties
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: Create one or more tax properties. A **code** and a **display name**
        must be included when creating tax properties.
      operationId: create-tax-properties
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PropertyPOST'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Property'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '422':
          description: The request body does not meet specifications.
      summary: Create Tax Properties
      tags:
      - Tax Properties
    put:
      description: Update one or more tax properties. Only fields specified will be
        adjusted.
      operationId: update-tax-properties
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PropertyPUT'
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Property'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '422':
          description: The request body does not meet specifications.
      summary: Update Tax Properties
      tags:
      - Tax Properties
  /tax/providers/{provider_id}/connection:
    delete:
      description: 'Remove any previously set basic connection credentials for the
        specified provider. If the specified provider is the active tax provider on
        the store, the store''s active tax provider will be reset to BigCommerce Manual
        Tax. It is suggested to call this endpoint during a single-click app [uninstall
        callback](/api-docs/apps/guide/callbacks#uninstall-callback).


        > #### Note

        > * This operation will be logged in [Store Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs)
        under **Staff Actions**.

        > * Requires **write** permissions on the **Information and Settings** [scope](/api-docs/getting-started/api-accounts#oauth-scopes).

        '
      operationId: provider-connection-delete
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      configured: false
                      username: MyDisconnectedTaxProviderAccount
              schema:
                $ref: '#/components/schemas/response-connection'
          description: OK
        '404':
          description: Provider does not exist
      summary: Delete a Connection
      tags:
      - Tax Provider Connection
    get:
      description: 'Retrieve the connection status of the specified tax provider in
        the context of a store.


        > #### Note

        > * Requires **read** permissions on the **Information and Settings** scope.

        '
      operationId: provider-connection-get
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      configured: true
                      username: MyConnectedTaxProviderAccount
              schema:
                $ref: '#/components/schemas/response-connection'
          description: OK
        '404':
          description: Provider does not exist
      summary: Get Connection Status
      tags:
      - Tax Provider Connection
    parameters:
    - $ref: '#/components/parameters/Accept'
    - description: The Tax Providerʼs `provider_id` provided by BigCommerce after
        the provider [shares their provider details](/api-docs/providers/tax#sharing-provider-details-with-bigcommerce).
      in: path
      name: provider_id
      required: true
      schema:
        type: string
    put:
      description: "Set authentication information associated with a merchant's account\
        \ on the tax provider's infrastructure:\n- [HTTP Basic Authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)\
        \ (developer.mozilla.org) credentials\n- (optional) Tax provider profile used\
        \ in customized endpoint urls for tax provider calls. This is only available\
        \ for tax providers that support this feature.\n\nThe configured `username`,\
        \ `password`, and `profile` (if available) is used to authenticate each API\
        \ request to the Tax Provider from the associated store. \nThe tax provider's\
        \ `profile` will be included in the url for [Tax Provider API](/docs/apps-api/tax)\
        \ endpoints. \n\n> #### Note\n> * This operation will be logged in [Store\
        \ Logs](https://support.bigcommerce.com/s/article/Using-Store-Logs) under\
        \ **Staff Actions**.\n> * Requires **write** permissions on the **Information\
        \ and Settings** [scope](/api-docs/getting-started/api-accounts#oauth-scopes)."
      operationId: provider-connection-put
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  password: h6eSgKLN72q7jYTW
                  profile: test-profile
                  username: MyTaxProviderAccount
            schema:
              properties:
                password:
                  example: h6eSgKLN72q7jYTW
                  type: string
                profile:
                  description: Optional field that allows merchants to customize Tax
                    Provider API endpoint URLs. Only available for supporting providers.
                  example: your_app_name
                  type: string
                username:
                  description: Public identifying information representing a unique
                    account on the tax provider's infrastructure. Should not contain
                    any personal identifying information (e.g. a personal email address).
                  example: MyTaxProviderAccount
                  type: string
              type: object
        description: Basic authentication information, associated with a merchant
          account on the third-party tax providerʼs infrastructure.
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      configured: true
                      username: MyUpdatedTaxProviderAccount
              schema:
                $ref: '#/components/schemas/response-connection'
          description: OK
        '404':
          description: Provider does not exist
        '422':
          description: Unprocessable Entity, will include a specific error message
            referencing the issue.
      summary: Update a Connection
      tags:
      - Tax Provider Connection
  /tax/rates:
    delete:
      description: 'Delete one or more tax rates.


        > #### Note

        > You must specify which rate(s) to delete using the `id:in` query parameter.'
      operationId: delete-tax-rates
      parameters:
      - $ref: '#/components/parameters/rateIdIn'
      responses:
        '204':
          description: No Content
      summary: Delete Tax Rates
      tags:
      - Tax Rates
    get:
      description: Retrieve a list of tax rates.
      operationId: get-tax-rates
      parameters:
      - $ref: '#/components/parameters/rateIdIn'
      - $ref: '#/components/parameters/taxZoneIdIn'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Tax_Rate'
                    type: array
                  meta:
                    $ref: '#/components/schemas/Meta'
                type: object
          description: OK
      summary: Get Tax Rates
      tags:
      - Tax Rates
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: Create one or more tax rates. Tax rates must be associated with
        a `tax_zone_id`.
      operationId: create-tax-rates
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/Tax_RateArrayPOST'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - class_rates:
                      - rate: 5
                        tax_class_id: 0
                      enabled: true
                      id: 3
                      name: Sales Tax
                      priority: 1
                      tax_zone_id: 2
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Tax_Rate'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Create Tax Rates
      tags:
      - Tax Rates
    put:
      description: Update one or more tax rates. Only the tax rate `id` field is required.
        Fields unspecified by the request will retain their current state.
      operationId: update-tax-rates
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/Tax_RateArray'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - class_rates:
                      - rate: 10
                        tax_class_id: 0
                      enabled: true
                      id: 3
                      name: Sales Tax
                      priority: 1
                      tax_zone_id: 2
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Tax_Rate'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Tax Rates
      tags:
      - Tax Rates
  /tax/settings:
    get:
      description: Retrieves global-level tax settings.
      operationId: get-tax-settings
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Tax_Settings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Get Tax Settings
      tags:
      - Tax Settings
    parameters:
    - $ref: '#/components/parameters/Accept'
    put:
      description: Updates global-level tax settings.
      operationId: set-tax-settings
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tax_Settings_Req'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Tax_Settings'
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
        '422':
          description: The request body does not meet the specification.
      summary: Update Tax Settings
      tags:
      - Tax Settings
  /tax/zones:
    delete:
      description: 'Delete one or more tax zones. Deleting a tax zone removes all
        associated tax rates.


        > #### Note

        > You must specify which zone(s) to delete using the `id:in` query parameter.'
      operationId: delete-tax-zones
      parameters:
      - $ref: '#/components/parameters/zoneIdIn'
      responses:
        '204':
          description: No Content
      summary: Delete Tax Zones
      tags:
      - Tax Zones
    get:
      description: Retrieve a selection of tax zones when you provide a list of tax
        zone IDs. Otherwise, retrieve all tax zones defined on the store.
      operationId: get-tax-zones
      parameters:
      - $ref: '#/components/parameters/zoneIdIn'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - enabled: false
                      id: 2
                      name: example zone
                      price_display_settings:
                        show_both_on_detail_view: false
                        show_both_on_list_view: false
                        show_inclusive: false
                      shopper_target_settings:
                        customer_groups:
                        - 2
                        locations:
                        - country_code: AR
                          postal_codes: []
                          subdivision_codes:
                          - T
                          - V
                        - country_code: AU
                          postal_codes: []
                          subdivision_codes:
                          - WA
                          - VIC
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Tax_Zone'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Get Tax Zones
      tags:
      - Tax Zones
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Create one or more tax zones.


        > #### Note

        > You cannot create a default tax zone.'
      operationId: create-tax-zones
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/Tax_ZoneArrayPOST'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - enabled: true
                      id: 2
                      name: example zone
                      price_display_settings:
                        show_both_on_detail_view: true
                        show_both_on_list_view: true
                        show_inclusive: true
                      shopper_target_settings:
                        customer_groups:
                        - 0
                        locations:
                        - country_code: AR
                          postal_codes: []
                          subdivision_codes:
                          - T
                          - V
                        - country_code: AU
                          postal_codes: []
                          subdivision_codes:
                          - WA
                          - VIC
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Tax_Zone'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Create Tax Zones
      tags:
      - Tax Zones
    put:
      description: Update one or more tax zones. Only the tax zone `id` field is required.
        Fields unspecified by the request will retain their current state.
      operationId: update-tax-zones
      parameters:
      - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/Tax_ZoneArray'
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - enabled: false
                      id: 23
                      name: Australia
                      price_display_settings:
                        show_both_on_detail_view: false
                        show_both_on_list_view: false
                        show_inclusive: false
                      shopper_target_settings:
                        customer_groups:
                        - 2
                        locations:
                        - country_code: AU
                          postal_codes:
                          - '2238'
                          - '2173'
                          subdivision_codes: []
                    meta: {}
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Tax_Zone'
                    type: array
                  meta:
                    $ref: '#/components/schemas/MetaOpen'
                type: object
          description: OK
      summary: Update Tax Zones
      tags:
      - Tax Zones
  /themes:
    get:
      description: Returns a list of store *Themes*.
      operationId: getStoreThemes
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                    - is_active: false
                      is_private: true
                      name: Cornerstone-blog
                      uuid: 872b3e20-731f-0136-9d2f-633ff0d6ced1
                      variations:
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: light
                        name: Light
                        uuid: 877427a0-731f-0136-9d2f-633ff0d6ced1
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: bold
                        name: Bold
                        uuid: 87be3180-731f-0136-9d2f-633ff0d6ced1
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: warm
                        name: Warm
                        uuid: 87d48e90-731f-0136-9d2f-633ff0d6ced1
                    - is_active: true
                      is_private: false
                      name: Cornerstone
                      uuid: e3d82ce0-9bae-0133-0de7-525400970412
                      variations:
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: light
                        name: Light
                        uuid: b16c3fe0-7bcb-0136-b5fc-07fe54a9e639
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: bold
                        name: Bold
                        uuid: b17d57e0-7bcb-0136-b5fc-07fe54a9e639
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: warm
                        name: Warm
                        uuid: b18ad610-7bcb-0136-b5fc-07fe54a9e639
                    - is_active: false
                      is_private: false
                      name: Fortune
                      uuid: 1242c920-a5a6-0133-a20e-525400970412
                      variations:
                      - description: Fortune is a standout theme for cutting-edge
                          online stores. Customers will be transfixed by its striking
                          hero area, which puts your imagery on full display, along
                          with its sleek navigation and unique product grid. Ideal
                          for small-to-medium-sized catalogs, Fortune has everything
                          you need to command and convert shoppers.
                        external_id: minimal
                        name: Minimal
                        uuid: fec9fe60-7ede-0136-effe-0cbd49ed50aa
                      - description: Fortune is a standout theme for cutting-edge
                          online stores. Customers will be transfixed by its striking
                          hero area, which puts your imagery on full display, along
                          with its sleek navigation and unique product grid. Ideal
                          for small-to-medium-sized catalogs, Fortune has everything
                          you need to command and convert shoppers.
                        external_id: bright
                        name: Bright
                        uuid: fee26530-7ede-0136-effe-0cbd49ed50aa
                      - description: Fortune is a standout theme for cutting-edge
                          online stores. Customers will be transfixed by its striking
                          hero area, which puts your imagery on full display, along
                          with its sleek navigation and unique product grid. Ideal
                          for small-to-medium-sized catalogs, Fortune has everything
                          you need to command and convert shoppers.
                        external_id: contrast
                        name: Contrast
                        uuid: fef38820-7ede-0136-effe-0cbd49ed50aa
                      - description: Fortune is a standout theme for cutting-edge
                          online stores. Customers will be transfixed by its striking
                          hero area, which puts your imagery on full display, along
                          with its sleek navigation and unique product grid. Ideal
                          for small-to-medium-sized catalogs, Fortune has everything
                          you need to command and convert shoppers.
                        external_id: highlight
                        name: Highlight
                        uuid: ff085ab0-7ede-0136-effe-0cbd49ed50aa
                    meta: {}
              schema:
                $ref: '#/components/schemas/ThemesCollectionResponse'
          description: ''
      summary: Get all Themes
      tags:
      - Themes
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Uploads a new *Theme* to your BigCommerce store.


        **Required Fields**

        * file'
      operationId: uploadTheme
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The file.
                  format: binary
                  type: string
              required:
              - file
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              examples:
                response:
                  value:
                    job_id: ceea1917b1518f5ae491da6ad8a56336
              schema:
                $ref: '#/components/schemas/JobId'
          description: Job ID for the background job processing the theme upload.
        default:
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: Error message.
      summary: Upload a Theme
      tags:
      - Themes
  /themes/actions/activate:
    parameters:
    - $ref: '#/components/parameters/Accept'
    post:
      description: 'Actives a store *Theme*.


        This returns a 204 response upon success.'
      operationId: activateStoreTheme
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activate'
        description: Request parameters.
        required: true
        x-examples:
          application/json:
            variation_id: 87be3180-731f-0136-9d2f-633ff0d6ced1
            which: original
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
          description: This returns when the request is successful.
        default:
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: Detailed Errors
                      type: object
                  type: object
                title: Error Response
          description: Error message.
      summary: Activate a Theme
      tags:
      - Theme Actions
  /themes/custom-templates/{version_uuid}:
    get:
      description: Enumerate available custom templates for in the theme files in
        a specific theme version for each supported entity type.
      operationId: get-themes-theme_uuid-custom-templates
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      brand:
                      - custom-brand-1.html
                      category: []
                      page:
                      - custom-page-1.html
                      - holiday-page.html
                      product:
                      - custom-product-1.html
                    meta: {}
              schema:
                properties:
                  data:
                    properties:
                      brand:
                        items:
                          type: string
                        type: array
                      category:
                        items:
                          type: string
                        type: array
                      page:
                        items:
                          type: string
                        type: array
                      product:
                        items:
                          type: string
                        type: array
                    type: object
                  meta:
                    $ref: '#/components/schemas/OpenMeta'
                type: object
          description: OK
      summary: Get Custom Templates
      tags:
      - Theme Custom Templates
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: version_uuid
      required: true
      schema:
        type: string
  /themes/jobs/{job_id}:
    get:
      description: Returns a theme *Job*. If job is completed, the result is included
        in the response.
      operationId: getJob
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      errors: []
                      id: ceea1917b1518f5ae491da6ad8a56336
                      percent_complete: 100
                      result:
                        theme_id: ed1982d0-9d78-0136-33ba-0d84a0c6431b
                      status: COMPLETED
                      time: '2018-09-18T13:59:01Z'
                      warnings: []
                    meta: {}
              schema:
                $ref: '#/components/schemas/JobResponse'
          description: ''
        default:
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: Detailed Errors
                      type: object
                  type: object
                title: Error Response
          description: Error message.
      summary: Get a Theme Job
      tags:
      - Theme Jobs
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/JobIdParam'
  /themes/{uuid}:
    delete:
      description: 'Deletes a store *Theme*.

        Theme variations can not be deleted using this endpoint. This will delete
        the theme and all variations.'
      operationId: deleteStoreTheme
      responses:
        '204':
          description: ''
        default:
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: DetailedErrors
                      type: object
                  type: object
                title: Error Response
          description: Error message.
      summary: Delete a Theme
      tags:
      - Themes
    get:
      description: Returns a store *Theme*. The theme variation is not available at
        this endpoint.
      operationId: getStoreTheme
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      is_active: false
                      is_private: false
                      name: Cornerstone
                      uuid: e3d82ce0-9bae-0133-0de7-525400970412
                      variations:
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: light
                        name: Light
                        uuid: b16c3fe0-7bcb-0136-b5fc-07fe54a9e639
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: bold
                        name: Bold
                        uuid: b17d57e0-7bcb-0136-b5fc-07fe54a9e639
                      - description: Ideal for a wide range of businesses and brands,
                          this design is fully responsive, simple, and ready for you
                          to add your branding, logo, and products. It comes ready
                          to build a clean looking and beautiful store with features
                          such as homepage carousel, social media icons, featured
                          and top selling products, and faceted search (which is available
                          on select BigCommerce plans). Fully express your brand by
                          using our Theme Editor to quickly and easily style your
                          site’s fonts and colors, all without the need to write code.
                        external_id: warm
                        name: Warm
                        uuid: b18ad610-7bcb-0136-b5fc-07fe54a9e639
                    meta: {}
              schema:
                $ref: '#/components/schemas/ThemeResponse'
          description: ''
        default:
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: Detailed Errors
                      type: object
                  type: object
                title: Error Response
          description: Error message.
      summary: Get a Theme
      tags:
      - Themes
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ThemeIdParam'
  /themes/{uuid}/actions/download:
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ThemeIdParam'
    post:
      description: Downloads a stores *Theme*.
      operationId: downloadTheme
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhichThemeToDownload'
        required: true
        x-examples:
          application/json:
            which: last_created
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    job_id: ceea1917b1518f5ae491da6ad8a56336
              schema:
                $ref: '#/components/schemas/JobId'
          description: Job ID for the background job processing the download.
        default:
          content:
            application/json:
              schema:
                allOf:
                - description: 'Error payload for the BigCommerce API.

                    '
                  properties:
                    instance:
                      type: string
                    status:
                      description: 'The HTTP status code.

                        '
                      type: integer
                    title:
                      description: 'The error title describing the particular error.

                        '
                      type: string
                    type:
                      type: string
                  title: Base Error
                  type: object
                - properties:
                    errors:
                      additionalProperties: true
                      properties: {}
                      title: Detailed Errors
                      type: object
                  type: object
                title: Error Response
          description: Error message.
      summary: Download a Theme
      tags:
      - Theme Actions
  /themes/{uuid}/configurations:
    get:
      description: 'Returns a list of theme''s configurations.


        **Usage Notes**:

        * At least one filter must be provided.'
      parameters:
      - $ref: '#/components/parameters/ThemeIdParam'
      - description: Filter configurations by a list of configuration UUIDs.
        in: query
        name: uuid:in
        schema:
          items:
            type: string
          type: array
      - description: Filter configurations by a list of channel_ids.
        in: query
        name: channel_id:in
        schema:
          items:
            type: integer
          type: array
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/LimitParam'
      - description: Filter configurations by a variation_uuid.
        in: query
        name: variation_uuid
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/themesConfigurations_RespCollection'
      summary: Get Theme Configuration
      tags:
      - Theme Configurations
    parameters:
    - $ref: '#/components/parameters/Accept'
    - in: path
      name: uuid
      required: true
      schema:
        type: string
    - description: Filter configurations by a list of site_ids
      explode: false
      in: query
      name: site_id:in
      required: true
      schema:
        items:
          type: integer
        type: array
      style: form
    - description: Filter configurations by a list of configuration UUIDs
      explode: false
      in: query
      name: uuid:in
      schema:
        items:
          type: string
        type: array
      style: form
    - description: Filter configurations by a variation_uuid
      in: query
      name: variation_uuid
      schema:
        type: string
    - description: 'Specifies the page number in a limited (paginated) list.

        '
      in: query
      name: page
      required: false
      schema:
        type: integer
    - description: 'Controls the number of items per page in a limited (paginated)
        list of products.

        '
      in: query
      name: limit
      required: false
      schema:
        type: integer
  /themes/{uuid}/configurations/validate:
    parameters:
    - $ref: '#/components/parameters/Accept'
    - $ref: '#/components/parameters/ThemeIdParam'
    post:
      description: Validates a theme configuration against the theme's schema without
        creating it. Useful for testing schemas before creation.
      parameters:
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/themeConfiguration_Write'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Theme passes validation.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Theme failed validation, detailed errors in response.
      summary: Validate Theme Configuration
      tags:
      - Theme Configurations
  /wishlists:
    get:
      description: Returns a list of wishlists. Optional filter parameters can be
        passed in.
      operationId: WishlistsGet
      parameters:
      - description: All wishlists relating to the customer.
        in: query
        name: customer_id
        schema:
          format: int32
          type: integer
      - description: The page number of results per page. 1 is the default and starts
          from record 0.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: The numbers of items to return per page. Default is 50 and maximum
          is 250.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                - customer_id: 4
                  id: 1
                  is_public: false
                  items: []
                  name: My Wish List
                  token: 02d55481-13eb-4d1e-9d79-9062b518570d
                - customer_id: 11
                  id: 2
                  is_public: false
                  items:
                  - id: 1
                    product_id: 167
                  - id: 2
                    product_id: 174
                  - id: 3
                    product_id: 184
                  name: Christmas
                  token: 02d55481-13eb-4d1e-9d79-9062b518570d
                - customer_id: 20
                  id: 3
                  is_public: false
                  items:
                  - id: 4
                    product_id: 184
                  - id: 5
                    product_id: 183
                  name: Birthday
                  token: 02d55481-13eb-4d1e-9d79-9062b518570d
                - customer_id: 20
                  id: 4
                  is_public: false
                  items:
                  - id: 6
                    product_id: 201
                  name: Christmas
                  token: 02d55481-13eb-4d1e-9d79-9062b518570d
                - customer_id: 19
                  id: 5
                  is_public: false
                  items:
                  - id: 7
                    product_id: 173
                  - id: 8
                    product_id: 176
                  name: Wish List
                  token: 02d55481-13eb-4d1e-9d79-9062b518570d
                meta:
                  pagination:
                    count: 5
                    current_page: 1
                    per_page: 50
                    total: 0
                    total_pages: 0
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/wishlist_Full'
                    type: array
                  meta:
                    $ref: '#/components/schemas/metaCollection'
                type: object
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Authentication information is missing or invalid.
        '500':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Internal server error.
      summary: Get All Wishlists
      tags:
      - Wishlists
    post:
      description: 'Creates a wishlist and wishlist item. More than one item can be
        added in the POST.


        **Required Fields**

        * name

        * customer_id'
      operationId: WishlistsPost
      parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wishlist_Post'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                data:
                  customer_id: 10
                  id: 30
                  is_public: true
                  items:
                  - id: 44
                    product_id: 77
                    variant_id: 1
                  - id: 45
                    product_id: 80
                    variant_id: 1
                  - id: 46
                    product_id: 81
                    variant_id: 1
                  - id: 47
                    product_id: 86
                    variant_id: 1
                  - id: 48
                    product_id: 88
                    variant_id: 1
                  name: Christmas List
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Authentication information is missing or invalid.
        '500':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Internal server error.
      summary: Create a Wishlist
      tags:
      - Wishlists
      x-codegen-request-body-name: body
  /wishlists/{wishlist_id}:
    delete:
      description: Deletes a wishlist.
      operationId: WishlistsByIdDelete
      parameters:
      - $ref: '#/components/parameters/WishlistID'
      - $ref: '#/components/parameters/Accept'
      responses:
        '204':
          content: {}
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Authentication information is missing or invalid.
        '500':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Internal server error.
      summary: Delete a Wishlist
      tags:
      - Wishlists
    get:
      description: Returns a single wishlist.
      operationId: WishlistsByIdGet
      parameters:
      - $ref: '#/components/parameters/WishlistID'
      - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  customer_id: 10
                  id: 30
                  is_public: true
                  items:
                  - id: 44
                    product_id: 77
                    variant_id: 1
                  - id: 45
                    product_id: 80
                    variant_id: 1
                  - id: 46
                    product_id: 81
                    variant_id: 1
                  - id: 47
                    product_id: 86
                    variant_id: 1
                  - id: 48
                    product_id: 88
                    variant_id: 1
                  name: Christmas List
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Authentication information is missing or invalid.
        '404':
          content:
            application/json:
              schema:
                type: object
          description: Wishlist not found.
        '500':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Internal server error.
      summary: Get a Wishlist
      tags:
      - Wishlists
    put:
      description: 'Updates a wishlist.


        Use this endpoint to update existing wishlist items, change the wishlist''s
        name and whether the wishlist is available publicly. To add or delete a wishlist
        item, see [Wishlist Items](/docs/rest-management/wishlists/wishlists-items).'
      operationId: WishlistsByIdPut
      parameters:
      - $ref: '#/components/parameters/WishlistID'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wishlist_Put'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                data:
                  customer_id: 10
                  id: 30
                  is_public: true
                  items:
                  - id: 44
                    product_id: 77
                    variant_id: 1
                  - id: 45
                    product_id: 80
                    variant_id: 1
                  - id: 46
                    product_id: 81
                    variant_id: 1
                  - id: 47
                    product_id: 86
                    variant_id: 1
                  - id: 48
                    product_id: 88
                    variant_id: 1
                  name: Christmas List
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Authentication information is missing or invalid.
        '500':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Internal server error.
      summary: Update a Wishlist
      tags:
      - Wishlists
      x-codegen-request-body-name: body
  /wishlists/{wishlist_id}/items:
    post:
      description: Adds a wishlist item. More than one item can be added at a time.
      operationId: WishlistsItemsByIdPost
      parameters:
      - $ref: '#/components/parameters/WishlistID'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wishlistItem_Post'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                data:
                  customer_id: 10
                  id: 30
                  is_public: true
                  items:
                  - id: 44
                    product_id: 77
                    variant_id: 1
                  - id: 45
                    product_id: 80
                    variant_id: 1
                  - id: 46
                    product_id: 81
                    variant_id: 1
                  - id: 47
                    product_id: 86
                    variant_id: 1
                  - id: 48
                    product_id: 88
                    variant_id: 1
                  name: Christmas List
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Authentication information is missing or invalid.
        '404':
          content: {}
          description: Wishlist not found.
        '500':
          content: {}
          description: Internal server error.
      summary: Add Wishlist Item
      tags:
      - Wishlists Items
      x-codegen-request-body-name: body
  /wishlists/{wishlist_id}/items/{item_id}:
    delete:
      description: Deletes a wishlist item.
      operationId: WishlistsItemsByIdDelete
      parameters:
      - $ref: '#/components/parameters/WishlistID'
      - $ref: '#/components/parameters/Accept'
      - in: path
        name: item_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  customer_id: 10
                  id: 30
                  is_public: true
                  items:
                  - id: 44
                    product_id: 77
                    variant_id: 1
                  - id: 45
                    product_id: 80
                    variant_id: 1
                  - id: 46
                    product_id: 81
                    variant_id: 1
                  - id: 47
                    product_id: 86
                    variant_id: 1
                  - id: 48
                    product_id: 88
                    variant_id: 1
                  name: Christmas List
                  token: d2d55481-13eb-4d1e-9d79-9062b518570d
                meta: {}
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/wishlist_Full'
                  meta:
                    additionalProperties: true
                    description: Response metadata.
                    properties: {}
                    type: object
                type: object
          description: ''
        '401':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Authentication information is missing or invalid.
        '404':
          content:
            application/json:
              schema:
                type: object
          description: Wishlist not found.
        '500':
          content:
            application/json:
              schema:
                properties:
                  status:
                    format: int32
                    type: integer
                  title:
                    type: string
                  type:
                    type: string
                title: Error
                type: object
          description: Internal server error.
      summary: Delete Wishlist Item
      tags:
      - Wishlists Items
security:
  X-Auth-Token: []
servers:
  url: https://api.bigcommerce.com/stores/{store_hash}/v3
  variables:
    description: BigCommerce API Gateway
    store_hash:
      default: store_hash
      description: Permanent ID of the BigCommerce store.
